# Configuration containing list of application servers
upstream app_servers {

    server 127.0.0.1:8000;

}


server {
        server_name portalgsti.com.br;
        listen 80;
        rewrite ^ https://www.portalgsti.com.br$request_uri? permanent;
}

    # Configuration for Nginx
    server {

        # Running port
        listen 443 ssl;
        client_max_body_size 4M;
        if ($host = portalgsti.com.br){
                return 301 https://www.portalgsti.com.br$request_uri;
        }

        server_name  www.portalgsti.com.br;


       if ($scheme = http){
                return 301 https://$server_name$request_uri;

       }

        location ^~ /.well-known/acme-challenge/SGatRm8PUv4tn4Io8N3mOvpgWZGR7dRP1t3gtttHj94{
                allow all;
                alias /ebs/www/gsti-known.txt;
        }

        location ^~ /.well-known/acme-challenge/0pBF5XbDBlYqeLlJgzt3tVpX-n8WzfKVlPUWArE6boU{
                allow all;
                alias /ebs/www/www-gsti-known.txt;
        }

        location ^~ /media/ {
                expires 30d;
                alias /ebs/www/rede_gsti/media/;

        }
         #Robots
        location ^~ /robots.txt {
                alias /ebs/www/rede_gsti/robots.txt;
        }

        # Settings to serve static files
        location ^~ /static/  {
            alias /ebs/www/rede_gsti/staticfiles/;
            include /etc/nginx/mime.types;

           location ~* javascripts/(1.1|main-\w+|shared-\w+)+(\.js)$ {

                        expires 365d;
                }

                location ~* images/gsti.png$ {
                        expires 365d;
                }

                location ~* stylesheets/style-\w+.css$ {
                        expires 365d;
                }

        }

        # Serve a static file (ex. favico)
        # outside /static directory
        location = /favicon.ico  {
            expires 365d;
            alias /ebs/www/rede_gsti/static/images/favicon.ico;

        }
        location / {
                # checks for static file, if not found proxy to app
                try_files $uri @proxy_to_app;

        }

        # Proxy connections to the application servers]
        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_pass  http://app_servers;
        }

}


