{"version":3,"sources":["webpack:///1.1.js","webpack:///./asyncModules ^\\.\\/.*$","webpack:///./asyncModules/TemplateEngine.js","webpack:///./asyncModules/dropzoneUploader.js","webpack:///./asyncModules/tagger.js","webpack:////home/raphael/workspace/rede_gsti/resources/~/selectize/dist/js/selectize.js","webpack:////home/raphael/workspace/rede_gsti/resources/~/selectize/~/sifter/sifter.js","webpack:////home/raphael/workspace/rede_gsti/resources/~/selectize/~/microplugin/src/microplugin.js","webpack:///./asyncModules/taxonomy.js"],"names":["webpackJsonp","module","exports","__webpack_require__","webpackContext","req","webpackContextResolve","map","Error","./TemplateEngine","./TemplateEngine.js","./dropzoneUploader","./dropzoneUploader.js","./index","./index.js","./tagger","./tagger.js","./taxonomy","./taxonomy.js","keys","Object","resolve","id","html","options","result","re","reExp","code","cursor","add","line","js","match","replace","exec","slice","index","length","substr","Function","apply","err","console","error","message","defineProperty","value","$","_module","element","cbDragOver","event","log","dropZone","addClass","cbDragLeave","removeClass","cbDrop","file","originalEvent","dataTransfer","files","stopPropagation","preventDefault","readFile","$input","val","cbChangeFile","this","cbTriggerFile","trigger","find","$altInput","on","dragover","dragleave","drop","change","click","reader","FileReader","onload","e","load","createPreview","getCanvasImage","attr","target","readAsDataURL","image","imgWidth","imgHeight","canvas","document","createElement","width","height","ctx","getContext","drawImage","toDataURL","newURL","fileName","name","lastIndexOf","filePath","show","hide","_interopRequireDefault","obj","__esModule","default","templateItem","item","escape","dir","templateOption","loadUsers","query","callback","$wrapper","prev","data","_jquery2","ajax","url","type","criteria","success","res","users","_jquery","_ref","plugins","maxItems","valueField","labelField","searchField","create","render","option","suggest","tagger","selectize","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","Sifter","MicroPlugin","highlight","$element","pattern","regex","RegExp","node","skip","nodeType","pos","search","spannode","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","i","each","MicroEvent","prototype","fct","_events","push","off","n","arguments","splice","indexOf","Array","call","mixin","destObject","props","IS_MAC","navigator","userAgent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_P","KEY_RIGHT","KEY_DOWN","KEY_N","KEY_BACKSPACE","KEY_DELETE","KEY_SHIFT","KEY_CMD","KEY_CTRL","KEY_TAB","TAG_SELECT","TAG_INPUT","SUPPORTS_VALIDITY_API","window","validity","isset","object","hash_key","escape_html","str","escape_replace","hook","before","self","method","fn","original","after","once","called","debounce","delay","timeout","args","clearTimeout","setTimeout","debounce_events","types","event_args","hasOwnProperty","watchChildEvent","$parent","selector","child","currentTarget","getSelection","input","start","selectionStart","selectionEnd","selection","focus","sel","createRange","selLen","text","moveStart","transferStyles","$from","$to","properties","styles","css","measureString","$test","position","top","left","padding","whiteSpace","appendTo","remove","autoGrow","currentWidth","update","keyCode","printable","placeholder","shift","character","metaKey","altKey","force","toLowerCase","substring","shiftKey","String","fromCharCode","toUpperCase","triggerHandler","Selectize","settings","computedStyle","getComputedStyle","getPropertyValue","currentStyle","direction","parents","extend","order","tabIndex","tagType","rtl","eventNS","count","highlightedValue","isOpen","isDisabled","isRequired","is","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","optgroups","userOptions","items","renderCache","onSearchChange","loadThrottle","sifter","diacritics","registerOption","registerOptionGroup","mode","hideSelected","initializePlugins","setupCallbacks","setupTemplates","setup","$control","$control_input","$dropdown","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","$window","$document","wrapperClass","inputClass","dropdownParent","dropdownClass","dropdownContentClass","copyClassesToDropdown","style","names","join","splitOn","delimiter","delimiterEscaped","onOptionHover","onOptionSelect","onItemSelect","mousedown","onMouseDown","onClick","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","resize","positionDropdown","blur","onBlur","onFocus","paste","onPaste","has","revertSettings","$children","children","detach","tabindex","isArray","setValue","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","disable","onChange","preload","field_label","field_optgroup","optgroupLabelField","templates","optgroup","optgroup_header","option_create","key","callbacks","initialize","item_add","item_remove","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","defaultPrevented","isDefaultPrevented","close","open","setActiveItem","isFull","splitInput","trim","split","createItem","which","selectAll","ctrlKey","$next","getAdjacentOption","setActiveOption","$prev","advanceSelection","selectOnTab","deleteSelection","refreshOptions","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","body","createOnBlur","$target","hasClass","closeAfterSelect","lastQuery","addItem","getOption","loadingClass","results","Math","max","addOption","changed","getValue","silent","events","addItems","$item","eventName","idx","begin","end","swap","$last","hideInput","$option","scroll","animate","height_menu","height_item","y","scroll_top","scroll_bottom","outerHeight","scrollTop","offset","stop","scrollDuration","opacity","getScoreFunction","getSearchOptions","sort","sortField","field","fields","conjunction","searchConjunction","calculateScore","score","triggerDropdown","j","k","groups","groups_order","option_html","html_children","has_create_option","$active","$active_before","$create","active_before","maxOptions","min","optgroupField","lockOptgroupOrder","a","b","a_order","$order","b_order","tokens","canCreate","prepend","addPrecedence","optgroupValueField","addOptionGroup","removeOptionGroup","clearOptionGroups","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","removeOption","removeItem","clearOptions","getElementWithValue","$options","eq","$els","getAttribute","values","isPending","value_next","wasFull","insertAtCaret","persist","caret","lock","unlock","output","invalid","prop","refreshClasses","toggleClass","isEmptyObject","opts","label","removeAttr","visibility","display","outerWidth","$el","option_select","$option_select","$tail","onDelete","pop","tail","valueLength","cursorAtEdge","advanceCaret","$adj","$child","append","enable","destroy","removeData","templateName","cache","regex_tag","clearCache","filter","createFilter","defaults","allowEmptyOption","dataAttr","settings_user","attr_data","field_value","field_optgroup_label","field_optgroup_value","init_textbox","settings_element","data_raw","JSON","parse","init_select","optionsMap","readData","group","arr","addGroup","$optgroup","instance","tag_name","support","define","sortable","forcePlaceholderSize","disabled","ui","helper","overflow","active","title","headerClass","titleRowClass","labelClass","closeClass","$dropdown_header","equalizeWidth","equalizeHeight","closest","next","getScrollbarWidth","div","doc","innerHTML","firstChild","offsetWidth","clientWidth","removeChild","equalizeSizes","height_max","width_last","width_parent","$optgroups","innerWidth","round","html_container","html_element","render_item","parent","tokenize","letter","words","escape_regex","DIACRITICS","string","iterator","is_array","forEach","token_count","prepareSearch","scoreValue","token","scoreObject","field_count","sum","getSortFunction","fields_count","multiplier","multipliers","get_field","implicit_score","sort_empty","unshift","cmp","option_fields","option_sort","option_sort_empty","total","fn_sort","fn_score","limit","asciifold","toString","c","d","l","o","r","s","t","u","z","chunk","foreignletters","lookup","charAt","regexp","foreignletter","Interface","queue","requested","loaded","utils","require","loadPlugin","plugin","vArg","renderItem","renderTemplate","defaultTemplates","elementData","TemplateEngine","renderOption","loadItems","_data","taxonomy","defaultSettings","selectizeSettings"],"mappings":"AAAAA,cAAc,EAAE,IACT,CACA,CACA,CACA,CAED,SAASC,EAAQC,EAASC,GCMhC,QAAAC,GAAAC,GACA,MAAAF,GAAAG,EAAAD,IAEA,QAAAC,GAAAD,GACA,MAAAE,GAAAF,IAAA,WAAiC,SAAAG,OAAA,uBAAAH,EAAA,SAhBjC,GAAAE,IACAE,mBAAA,EACAC,sBAAA,EACAC,qBAAA,EACAC,wBAAA,EACAC,UAAA,EACAC,aAAA,EACAC,WAAA,EACAC,cAAA,EACAC,aAAA,GACAC,gBAAA,GAQAd,GAAAe,KAAA,WACA,MAAAC,QAAAD,KAAAZ,IAEAH,EAAAiB,QAAAf,EACAL,EAAAC,QAAAE,EACAA,EAAAkB,GAAA,GDaM,SAASrB,EAAQC,GAEtB,YEtCDD,GAAOC,QAAU,SAASqB,EAAMC,GAY/B,IAXA,GAICC,GAJGC,EAAK,aACRC,EAAQ,yDACRC,EAAO,0BACPC,EAAS,EAENC,EAAM,QAANA,GAAeC,EAAMC,GAGxB,MAFKJ,IAALI,EAAaD,EAAKE,MAAMN,GAASI,EAAO,KAAO,UAAYA,EAAO,OAChD,IAARA,EAAa,WAAaA,EAAKG,QAAQ,KAAM,OAAS,QAAU,GACnEJ,GAEJG,EAAQP,EAAGS,KAAKZ,GACdU,GACLH,EAAIP,EAAKa,MAAMP,EAAQI,EAAMI,QAAQJ,EAAM,IAAI,GAC/CJ,EAASI,EAAMI,MAAQJ,EAAM,GAAGK,OAChCL,EAAQP,EAAGS,KAAKZ,EAEjBO,GAAIP,EAAKgB,OAAOV,EAAQN,EAAKe,OAAST,IACtCD,GAAQA,EAAO,wBAAwBM,QAAQ,YAAa,GAC5D,KAAMT,EAAS,GAAIe,UAAS,MAAOZ,GAAMa,MAAMjB,GAAUA,IACzD,MAAMkB,GAAOC,QAAQC,MAAM,IAAMF,EAAIG,QAAU,IAAK,kBAAmBjB,EAAM,MAC7E,MAAOH,KF+CF,SAASxB,EAAQC,EAASC,GGpEhC,YHyECiB,QAAO0B,eAAe5C,EAAS,cAC7B6C,OAAO,GGvEV,IAAMC,GAAK7C,EAAQ,GAEf8C,EAAS,SAACC,GAmBZ,QAASC,GAAYC,GAGnB,MAFAT,SAAQU,IAAI,0CACZC,EAASC,SAAS,UACX,EAGT,QAASC,GAAaJ,GAGpB,MAFAT,SAAQU,IAAI,4CACZC,EAASG,YAAY,UACd,EAGT,QAASC,GAAQN,GACf,GAAIO,GAAOP,EAAMQ,cAAcC,aAAaC,MAAM,EASlD,OAPAV,GAAMW,kBACNX,EAAMY,iBACNV,EAASG,YAAY,SAErBQ,EAASN,GACTO,EAAOJ,MAAQH,EACfO,EAAOC,IAAI,KACJ,EAGT,QAASC,GAAchB,GAErB,MADAa,GAASI,KAAKP,MAAM,KACb,EAGT,QAASQ,GAAelB,GACtBc,EAAOK,QAAQ,SAjDjB,GAAMjB,GAAWN,EAAEE,GACfgB,EAASZ,EAASkB,KAAK,SACvBC,EAAYnB,EAASkB,KAAK,wBAE9BlB,GAASoB,IACPC,SAAUxB,EACVyB,UAAWpB,EACXqB,KAAMnB,IAGRQ,EAAOQ,IACLI,OAAQV,IAGVK,EAAUC,IACRK,MAAOT,KAuCPL,EAAW,SAAUN,GACvB,GAAIqB,GAAS,GAAIC,WAEjBD,GAAOE,OAAS,SAASC,GACTnC,EAAE,UACboC,KAAK,WACFC,EAAc1B,EAAM2B,EAAejB,SAEtCkB,KAAK,MAAOJ,EAAEK,OAAO/D,SAE1BuD,EAAOS,cAAc9B,IAGnB2B,EAAiB,SAASI,GAE5B,GAAIC,GAAW,IACXC,EAAY,IAEZC,EAASC,SAASC,cAAc,SACpCF,GAAOG,MAAQL,EACfE,EAAOI,OAASL,CAEhB,IAAIM,GAAML,EAAOM,WAAW,KAG5B,OAFAD,GAAIE,UAAUV,EAAO,EAAG,EAAGC,EAAUC,GAE9BC,EAAOQ,UAAU,eAGtBhB,EAAgB,SAAS1B,EAAM2C,GACjC,GAAIC,GAAW5C,EAAK6C,KAAKjE,OAAO,EAAGoB,EAAK6C,KAAKC,YAAY,MACrDC,EAAWJ,EACXZ,EAAK,aAAgBgB,EAAQ,iCAAiCH,EAAQ,KAE1EvD,GAAE,yBAAyBzB,KAAKmE,GAAOiB,OACvC3D,EAAE,wBAAwB4D,OHyE3B1G,GAAQ,WGtEM+C,EHuEdhD,EAAOC,QAAUA,EAAQ,YAGnB,CAED,SAASD,EAAQC,EAASC,GI7KhC,YJqLC,SAAS0G,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GItJ1F,QAASG,GAAcC,EAAMC,GAC3BxE,QAAQU,IAAI,QACZV,QAAQyE,IAAI/C,KACZ,IAAImC,GAAOU,EAAKV,KAAOW,EAAOD,EAAKV,MAAQ,EAC3C,eAAeA,EAAI,SAErB,QAASa,GAAgBH,EAAMC,GAC7BxE,QAAQU,IAAI,UACZV,QAAQyE,IAAI/C,KAAKH,OACjB,IAAIsC,GAAOU,EAAKV,KAAOW,EAAOD,EAAKV,MAAQ,EAC3C,kGACiDA,EAAI,wBAC3CA,EAAI,oBAIhB,QAASc,GAAUC,EAAOC,GACtB,GAAIhG,GAAU6C,KAAKoD,SAASC,OAAOC,MACnC,OAAKJ,GAAMjF,WAGXsF,GAAA,WAAEC,MACEC,IAAKtG,EAAQsG,IACbC,KAAM,MACNJ,MACIK,SAAUT,GAEd3E,MAAO,WACH4E,KAEJS,QAAS,SAAUC,GACfV,EAASU,EAAIC,UAZVX,IJ+HdpG,OAAO0B,eAAe5C,EAAS,cAC3B6C,OAAO,GAKX,IAAIqF,GAAUjI,EIrLD,GJuLTyH,EAAWf,EAAuBuB,EItLvCjI,GAAQ,EJ0LP,IAAIkI,KIvLHC,SAAU,iBACRC,SAAU,EACVC,WAAY,MACZC,WAAY,OACZC,YAAa,OACbC,QAAQ,EACRC,QACA1B,KAAMD,EACJ4B,OAAQxB,GAEVjC,KAAMkC,OAXHwB,EAAOT,EAAA,GAkBVU,EAAS,SAAC7F,GACV,GAAI6E,GAAOH,EAAA,WAAE1E,GAASyE,KAAK,aAC3B,QAAQI,GACJ,IAAK,UACDH,EAAA,WAAE1E,GAAS8F,UAAUF,IJ0NhC5I,GAAQ,WIjLM6I,EJkLd9I,EAAOC,QAAUA,EAAQ,YAIpB,SAASD,EAAQC,EAASC,GK1PhC,GAAA8I,GAAAC,EAAAC,GAmBA,SAAAC,EAAAC,GAEAH,GAAA/I,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAAA8I,EAAA,EAAAE,EAAA,kBAAAF,KAAAxG,MAAAvC,EAAAgJ,GAAAD,IAAAK,SAAAH,IAAAlJ,EAAAC,QAAAiJ,KAMC9E,KAAA,SAAArB,EAAAuG,EAAAC,GACD,YAEA,IAAAC,GAAA,SAAAC,EAAAC,GACA,mBAAAA,MAAArH,OAAA,CACA,GAAAsH,GAAA,gBAAAD,GAAA,GAAAE,QAAAF,EAAA,KAAAA,EAEAF,EAAA,SAAAK,GACA,GAAAC,GAAA,CACA,QAAAD,EAAAE,SAAA,CACA,GAAAC,GAAAH,EAAAnC,KAAAuC,OAAAN,EACA,IAAAK,GAAA,GAAAH,EAAAnC,KAAArF,OAAA,GACA,GAAAL,GAAA6H,EAAAnC,KAAA1F,MAAA2H,GACAO,EAAArE,SAAAC,cAAA,OACAoE,GAAAC,UAAA,WACA,IAAAC,GAAAP,EAAAQ,UAAAL,GAEAM,GADAF,EAAAC,UAAArI,EAAA,GAAAK,QACA+H,EAAAG,WAAA,GACAL,GAAAM,YAAAF,GACAF,EAAAK,WAAAC,aAAAR,EAAAE,GACAN,EAAA,OAEI,QAAAD,EAAAE,UAAAF,EAAAc,aAAA,kBAAAC,KAAAf,EAAAgB,SACJ,OAAAC,GAAA,EAAmBA,EAAAjB,EAAAc,WAAAtI,SAA4ByI,EAC/CA,GAAAtB,EAAAK,EAAAc,WAAAG,GAGA,OAAAhB,GAGA,OAAAL,GAAAsB,KAAA,WACAvB,EAAApF,UAIA4G,EAAA,YACAA,GAAAC,WACAxG,GAAA,SAAAtB,EAAA+H,GACA9G,KAAA+G,QAAA/G,KAAA+G,YACA/G,KAAA+G,QAAAhI,GAAAiB,KAAA+G,QAAAhI,OACAiB,KAAA+G,QAAAhI,GAAAiI,KAAAF,IAEAG,IAAA,SAAAlI,EAAA+H,GACA,GAAAI,GAAAC,UAAAlJ,MACA,YAAAiJ,QAAAlH,MAAA+G,QACA,IAAAG,QAAAlH,MAAA+G,QAAAhI,IAEAiB,KAAA+G,QAAA/G,KAAA+G,iBACAhI,IAAAiB,MAAA+G,UAAA,GACA/G,KAAA+G,QAAAhI,GAAAqI,OAAApH,KAAA+G,QAAAhI,GAAAsI,QAAAP,GAAA,MAEA5G,QAAA,SAAAnB,GAEA,GADAiB,KAAA+G,QAAA/G,KAAA+G,YACAhI,IAAAiB,MAAA+G,UAAA,EACA,OAAAL,GAAA,EAAkBA,EAAA1G,KAAA+G,QAAAhI,GAAAd,OAAgCyI,IAClD1G,KAAA+G,QAAAhI,GAAA2H,GAAAtI,MAAA4B,KAAAsH,MAAAT,UAAA9I,MAAAwJ,KAAAJ,UAAA,MAYAP,EAAAY,MAAA,SAAAC,GAEA,OADAC,IAAA,sBACAhB,EAAA,EAAiBA,EAAAgB,EAAAzJ,OAAkByI,IACnCe,EAAAZ,UAAAa,EAAAhB,IAAAE,EAAAC,UAAAa,EAAAhB,IAIA,IAAAiB,GAAA,MAAAnB,KAAAoB,UAAAC,WAEAC,EAAA,GAEAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAAf,EAAA,MACAgB,EAAAhB,EAAA,MACAiB,EAAA,EAEAC,EAAA,EACAC,EAAA,EAGAC,GAAA,WAAAvC,KAAAwC,OAAApB,UAAAC,cAAApG,SAAAC,cAAA,QAAAuH,SAEAC,EAAA,SAAAC,GACA,yBAAAA,IAmBAC,EAAA,SAAA1K,GACA,yBAAAA,IAAA,OAAAA,EAAA,KACA,iBAAAA,KAAA,QACAA,EAAA,IASA2K,EAAA,SAAAC,GACA,OAAAA,EAAA,IACAzL,QAAA,cACAA,QAAA,aACAA,QAAA,aACAA,QAAA,gBASA0L,EAAA,SAAAD,GACA,OAAAA,EAAA,IAAAzL,QAAA,eAGA2L,IAUAA,GAAAC,OAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAAC,EACAD,GAAAC,GAAA,WAEA,MADAC,GAAAxL,MAAAsL,EAAAvC,WACA0C,EAAAzL,MAAAsL,EAAAvC,aAYAqC,EAAAM,MAAA,SAAAJ,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAAC,EACAD,GAAAC,GAAA,WACA,GAAAvM,GAAAyM,EAAAzL,MAAAsL,EAAAvC,UAEA,OADAyC,GAAAxL,MAAAsL,EAAAvC,WACA/J,GAUA,IAAA2M,GAAA,SAAAH,GACA,GAAAI,IAAA,CACA,mBACAA,IACAA,GAAA,EACAJ,EAAAxL,MAAA4B,KAAAmH,cAYA8C,EAAA,SAAAL,EAAAM,GACA,GAAAC,EACA,mBACA,GAAAT,GAAA1J,KACAoK,EAAAjD,SACA6B,QAAAqB,aAAAF,GACAA,EAAAnB,OAAAsB,WAAA,WACAV,EAAAxL,MAAAsL,EAAAU,IACIF,KAYJK,EAAA,SAAAb,EAAAc,EAAAZ,GACA,GAAAlG,GACAxD,EAAAwJ,EAAAxJ,QACAuK,IAGAf,GAAAxJ,QAAA,WACA,GAAAwD,GAAAyD,UAAA,EACA,YAAAqD,EAAAnD,QAAA3D,GAGAxD,EAAA9B,MAAAsL,EAAAvC,gBAFAsD,EAAA/G,GAAAyD,YAOAyC,EAAAxL,MAAAsL,MACAA,EAAAxJ,SAGA,KAAAwD,IAAA+G,GACAA,EAAAC,eAAAhH,IACAxD,EAAA9B,MAAAsL,EAAAe,EAAA/G,KAaAiH,EAAA,SAAAC,EAAA7L,EAAA8L,EAAAjB,GACAgB,EAAAvK,GAAAtB,EAAA8L,EAAA,SAAA/J,GAEA,IADA,GAAAgK,GAAAhK,EAAAK,OACA2J,KAAAzE,aAAAuE,EAAA,IACAE,IAAAzE,UAGA,OADAvF,GAAAiK,cAAAD,EACAlB,EAAAxL,MAAA4B,MAAAc,OAaAkK,EAAA,SAAAC,GACA,GAAA7N,KACA,sBAAA6N,GACA7N,EAAA8N,MAAAD,EAAAE,eACA/N,EAAAa,OAAAgN,EAAAG,aAAAhO,EAAA8N,UACG,IAAAzJ,SAAA4J,UAAA,CACHJ,EAAAK,OACA,IAAAC,GAAA9J,SAAA4J,UAAAG,cACAC,EAAAhK,SAAA4J,UAAAG,cAAAE,KAAAzN,MACAsN,GAAAI,UAAA,aAAAV,EAAAvM,MAAAT,QACAb,EAAA8N,MAAAK,EAAAG,KAAAzN,OAAAwN,EACArO,EAAAa,OAAAwN,EAEA,MAAArO,IAUAwO,EAAA,SAAAC,EAAAC,EAAAC,GACA,GAAArF,GAAAQ,EAAA8E,IACA,IAAAD,EACA,IAAArF,EAAA,EAAAQ,EAAA6E,EAAA9N,OAAqCiJ,EAAAR,EAAOA,IAC5CsF,EAAAD,EAAArF,IAAAmF,EAAAI,IAAAF,EAAArF,QAGAsF,GAAAH,EAAAI,KAEAH,GAAAG,IAAAD,IAWAE,EAAA,SAAA5C,EAAAsB,GACA,IAAAtB,EACA,QAGA,IAAA6C,GAAAxN,EAAA,UAAAsN,KACAG,SAAA,WACAC,IAAA,OACAC,KAAA,OACA3K,MAAA,OACA4K,QAAA,EACAC,WAAA,QACGd,KAAApC,GAAAmD,SAAA,OAEHb,GAAAhB,EAAAuB,GACA,gBACA,WACA,aACA,aACA,iBAGA,IAAAxK,GAAAwK,EAAAxK,OAGA,OAFAwK,GAAAO,SAEA/K,GAYAgL,EAAA,SAAA9M,GACA,GAAA+M,GAAA,KAEAC,EAAA,SAAA/L,EAAA3D,GACA,GAAAuB,GAAAoO,EAAAC,EAAAC,EAAArL,EACAsL,EAAAC,EAAA7B,CACAvK,MAAAkI,OAAAjK,UACA5B,QAEA2D,EAAAqM,SAAArM,EAAAsM,SACAjQ,EAAAkQ,OAAAxN,EAAAyD,KAAA,gBAEA5E,EAAAmB,EAAAC,MACAgB,EAAA4C,MAAA,YAAA5C,EAAA4C,KAAA4J,gBACAR,EAAAhM,EAAAgM,QACAC,EACAD,GAAA,SAAAA,GACAA,GAAA,QAAAA,GACAA,GAAA,QAAAA,GACA,KAAAA,EAGAA,IAAAtE,GAAAsE,IAAAvE,GACA8C,EAAAL,EAAAnL,EAAA,IACAwL,EAAApN,OACAS,IAAA6O,UAAA,EAAAlC,EAAAH,OAAAxM,EAAA6O,UAAAlC,EAAAH,MAAAG,EAAApN,QACM6O,IAAAvE,GAAA8C,EAAAH,MACNxM,IAAA6O,UAAA,EAAAlC,EAAAH,MAAA,GAAAxM,EAAA6O,UAAAlC,EAAAH,MAAA,GACM4B,IAAAtE,GAAA,mBAAA6C,GAAAH,QACNxM,IAAA6O,UAAA,EAAAlC,EAAAH,OAAAxM,EAAA6O,UAAAlC,EAAAH,MAAA,KAEK6B,IACLE,EAAAnM,EAAA0M,SACAN,EAAAO,OAAAC,aAAA5M,EAAAgM,SACAI,EAAAD,EAAAC,EAAAS,cACAT,EAAAI,cACA5O,GAAAwO,IAIAF,EAAAnN,EAAAqB,KAAA,gBACAxC,GAAAsO,IACAtO,EAAAsO,GAGArL,EAAAuK,EAAAxN,EAAAmB,GAAA,EACA8B,IAAAiL,IACAA,EAAAjL,EACA9B,EAAA8B,SACA9B,EAAA+N,eAAA,YAIA/N,GAAAQ,GAAA,4BAAAwM,GACAA,KAGAgB,EAAA,SAAAhO,EAAAiO,GACA,GAAApH,GAAAQ,EAAAnE,EAAAkI,EAAAvB,EAAA1J,IACAiL,GAAApL,EAAA,GACAoL,EAAAtG,UAAA+E,CAGA,IAAAqE,GAAA/E,OAAAgF,kBAAAhF,OAAAgF,iBAAA/C,EAAA,KAmDA,IAlDAlI,EAAAgL,IAAAE,iBAAA,aAAAhD,EAAAiD,cAAAjD,EAAAiD,aAAAC,UACApL,KAAAlD,EAAAuO,QAAA,eAAAlN,KAAA,WAGAvC,EAAA0P,OAAA3E,GACA4E,MAAA,EACAR,WACAjO,SACA0O,SAAA1O,EAAAqB,KAAA,gBACAsN,QAAA,WAAAvD,EAAAxE,QAAA6G,cAAAzE,EAAAC,EACA2F,IAAA,OAAAjI,KAAAzD,GAEA2L,QAAA,gBAAAb,EAAAc,MACAC,iBAAA,KACAC,QAAA,EACAC,YAAA,EACAC,WAAAlP,EAAAmP,GAAA,cACAC,WAAA,EACAC,UAAA,EACAC,WAAA,EACAC,eAAA,EACAC,SAAA,EACAC,aAAA,EACAC,WAAA,EACAC,YAAA,EACAC,aAAA,EACAC,YAAA,EACAC,aAAA,EACAC,YAAA,EACAC,eAAA,KACAC,UAAA,GACAC,SAAA,EACAC,QAAA,EACAC,kBAEAC,cAAA,KACAC,gBAEAC,aACAjT,WACAkT,eACAC,SACAC,eACAC,eAAA,OAAA1C,EAAA2C,aAAA/G,EAAA8G,eAAAvG,EAAAP,EAAA8G,eAAA1C,EAAA2C,gBAIA/G,EAAAgH,OAAA,GAAAxL,GAAAlF,KAAA7C,SAA0CwT,WAAA7C,EAAA6C,aAG1CjH,EAAAoE,SAAA3Q,QAAA,CACA,IAAAuJ,EAAA,EAAAQ,EAAAwC,EAAAoE,SAAA3Q,QAAAc,OAAgDiJ,EAAAR,EAAOA,IACvDgD,EAAAkH,eAAAlH,EAAAoE,SAAA3Q,QAAAuJ,UAEAgD,GAAAoE,SAAA3Q,QAIA,GAAAuM,EAAAoE,SAAAsC,UAAA,CACA,IAAA1J,EAAA,EAAAQ,EAAAwC,EAAAoE,SAAAsC,UAAAnS,OAAkDiJ,EAAAR,EAAOA,IACzDgD,EAAAmH,oBAAAnH,EAAAoE,SAAAsC,UAAA1J,UAEAgD,GAAAoE,SAAAsC,UAIA1G,EAAAoE,SAAAgD,KAAApH,EAAAoE,SAAAgD,OAAA,IAAApH,EAAAoE,SAAA5J,SAAA,kBACA,iBAAAwF,GAAAoE,SAAAiD,eACArH,EAAAoE,SAAAiD,aAAA,UAAArH,EAAAoE,SAAAgD,MAGApH,EAAAsH,kBAAAtH,EAAAoE,SAAA7J,SACAyF,EAAAuH,iBACAvH,EAAAwH,iBACAxH,EAAAyH,QAi+EA,OA39EAvK,GAAAY,MAAAqG,GACA1I,EAAAqC,MAAAqG,GAKAlP,EAAA0P,OAAAR,EAAAhH,WAKAsK,MAAA,WACA,GAOA/N,GACAgO,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EACAC,EAjBAjI,EAAA1J,KACA8N,EAAApE,EAAAoE,SACAY,EAAAhF,EAAAgF,QACAkD,EAAAjT,EAAAqK,QACA6I,EAAAlT,EAAA8C,UACA5B,EAAA6J,EAAA7J,MA+CA,IAjCA4R,EAAA/H,EAAAoE,SAAAgD,KACAY,EAAA7R,EAAAqB,KAAA,aAEAkC,EAAAzE,EAAA,SAAAO,SAAA4O,EAAAgE,cAAA5S,SAAAwS,GAAAxS,SAAAuS,GACAL,EAAAzS,EAAA,SAAAO,SAAA4O,EAAAiE,YAAA7S,SAAA,SAAAuN,SAAArJ,GACAiO,EAAA1S,EAAA,4CAAA8N,SAAA2E,GAAAlQ,KAAA,WAAArB,EAAAmP,GAAA,kBAAAtF,EAAA6E,UACAiD,EAAA7S,EAAAmP,EAAAkE,gBAAA5O,GACAkO,EAAA3S,EAAA,SAAAO,SAAA4O,EAAAmE,eAAA/S,SAAAuS,GAAAlP,OAAAkK,SAAA+E,GACAD,EAAA5S,EAAA,SAAAO,SAAA4O,EAAAoE,sBAAAzF,SAAA6E,GAEA5H,EAAAoE,SAAAqE,uBACAb,EAAApS,SAAAwS,GAGAtO,EAAA6I,KACAtK,MAAA9B,EAAA,GAAAuS,MAAAzQ,QAGA+H,EAAAzF,QAAAoO,MAAApU,SACA0T,EAAA,UAAAjI,EAAAzF,QAAAoO,MAAAC,KAAA,YACAlP,EAAAlE,SAAAyS,GACAL,EAAApS,SAAAyS,KAGA,OAAA7D,EAAA5J,UAAA4J,EAAA5J,SAAA,IAAAwF,EAAA8E,UAAA3F,GACAhJ,EAAAqB,KAAA,uBAGAwI,EAAAoE,SAAAd,aACAqE,EAAAnQ,KAAA,cAAA4M,EAAAd,cAIAtD,EAAAoE,SAAAyE,SAAA7I,EAAAoE,SAAA0E,UAAA,CACA,GAAAC,GAAA/I,EAAAoE,SAAA0E,UAAA3U,QAAA,yBAAgF,OAChF6L,GAAAoE,SAAAyE,QAAA,GAAA/M,QAAA,OAAAiN,EAAA,SAGA5S,EAAAqB,KAAA,gBACAmQ,EAAAnQ,KAAA,cAAArB,EAAAqB,KAAA,gBAGArB,EAAAqB,KAAA,mBACAmQ,EAAAnQ,KAAA,iBAAArB,EAAAqB,KAAA,mBAGAwI,EAAAtG,WACAsG,EAAA0H,WACA1H,EAAA2H,iBACA3H,EAAA4H,YACA5H,EAAA6H,oBAEAD,EAAAjR,GAAA,4CAA+D,MAAAqJ,GAAAgJ,cAAAtU,MAAAsL,EAAAvC,aAC/DmK,EAAAjR,GAAA,iDAAoE,MAAAqJ,GAAAiJ,eAAAvU,MAAAsL,EAAAvC,aACpEwD,EAAAyG,EAAA,sCAAsE,MAAA1H,GAAAkJ,aAAAxU,MAAAsL,EAAAvC,aACtEwF,EAAA0E,GAEAD,EAAA/Q,IACAwS,UAAA,WAA4B,MAAAnJ,GAAAoJ,YAAA1U,MAAAsL,EAAAvC,YAC5BzG,MAAA,WAA4B,MAAAgJ,GAAAqJ,QAAA3U,MAAAsL,EAAAvC,cAG5BkK,EAAAhR,IACAwS,UAAA,SAAA/R,GAA6BA,EAAApB,mBAC7BsT,QAAA,WAA4B,MAAAtJ,GAAAuJ,UAAA7U,MAAAsL,EAAAvC,YAC5B+L,MAAA,WAA4B,MAAAxJ,GAAAyJ,QAAA/U,MAAAsL,EAAAvC,YAC5BiM,SAAA,WAA4B,MAAA1J,GAAA2J,WAAAjV,MAAAsL,EAAAvC,YAC5BmM,OAAA,WAA4B5J,EAAA6J,iBAAAnV,MAAAsL,OAC5B8J,KAAA,WAA4B,MAAA9J,GAAA+J,OAAArV,MAAAsL,EAAAvC,YAC5BmE,MAAA,WAAqD,MAAzB5B,GAAAgG,YAAA,EAAyBhG,EAAAgK,QAAAtV,MAAAsL,EAAAvC,YACrDwM,MAAA,WAA4B,MAAAjK,GAAAkK,QAAAxV,MAAAsL,EAAAvC,cAG5B0K,EAAAxR,GAAA,UAAAqO,EAAA,SAAA5N,GACA4I,EAAA6F,UAAAzO,EAAA6G,EAAA,qBACA+B,EAAA8F,WAAA1O,EAAA6G,EAAA,oBACA+B,EAAA4F,YAAAxO,EAAA0M,WAGAqE,EAAAxR,GAAA,QAAAqO,EAAA,SAAA5N,GACAA,EAAAgM,UAAAnE,IAAAe,EAAA8F,YAAA,GACA1O,EAAAgM,UAAArE,IAAAiB,EAAA4F,aAAA,GACAxO,EAAAgM,UAAApE,IAAAgB,EAAA6F,WAAA,KAGAsC,EAAAxR,GAAA,YAAAqO,EAAA,SAAA5N,GACA,GAAA4I,EAAAyF,UAAA,CAEA,GAAArO,EAAAK,SAAAuI,EAAA4H,UAAA,IAAAxQ,EAAAK,OAAAkF,aAAAqD,EAAA4H,UAAA,GACA,QAGA5H,GAAA0H,SAAAyC,IAAA/S,EAAAK,QAAAlD,QAAA6C,EAAAK,SAAAuI,EAAA0H,SAAA,IACA1H,EAAA8J,KAAA1S,EAAAK,WAKAyQ,EAAAvR,IAAA,SAAAqO,EAAA,SAAAA,GAAA4D,KAAA,gBACA5I,EAAAmF,QACAnF,EAAA6J,iBAAAnV,MAAAsL,EAAAvC,aAGAyK,EAAAvR,GAAA,YAAAqO,EAAA,WACAhF,EAAAiG,aAAA,IAKA3P,KAAA8T,gBACAC,UAAAlU,EAAAmU,WAAAC,SACAC,SAAArU,EAAAqB,KAAA,aAGArB,EAAAqB,KAAA,eAAAqB,OAAAuH,MAAAJ,EAAAtG,UAEAzE,EAAAwV,QAAArG,EAAAwC,SACA5G,EAAA0K,SAAAtG,EAAAwC,aACAxC,GAAAwC,OAIAvH,GACAlJ,EAAAQ,GAAA,UAAAqO,EAAA,SAAA5N,GACAA,EAAAnB,iBACA+J,EAAAuF,WAAA,EACAvF,EAAA2K,iBAIA3K,EAAA4K,sBACA5K,EAAA6K,eACA7K,EAAA2K,eACA3K,EAAA8K,oBACA9K,EAAA2F,SAAA,EAEAxP,EAAAmP,GAAA,cACAtF,EAAA+K,UAGA/K,EAAArJ,GAAA,SAAAL,KAAA0U,UAEA7U,EAAAyD,KAAA,YAAAoG,GACA7J,EAAAX,SAAA,cACAwK,EAAAxJ,QAAA,cAGA4N,EAAA6G,WAAA,GACAjL,EAAA8G,eAAA,KAQAU,eAAA,WACA,GAAAxH,GAAA1J,KACA4U,EAAAlL,EAAAoE,SAAA1J,WACAyQ,EAAAnL,EAAAoE,SAAAgH,mBAEAC,GACAC,SAAA,SAAA1R,GACA,+BAAAA,EAAApG,KAAA,UAEA+X,gBAAA,SAAA3R,EAAAR,GACA,sCAAAA,EAAAQ,EAAAuR,IAAA,UAEArQ,OAAA,SAAAlB,EAAAR,GACA,6BAAAA,EAAAQ,EAAAsR,IAAA,UAEA/R,KAAA,SAAAS,EAAAR,GACA,2BAAAA,EAAAQ,EAAAsR,IAAA,UAEAM,cAAA,SAAA5R,EAAAR,GACA,yCAAAA,EAAAQ,EAAA2H,OAAA,2BAIAvB,GAAAoE,SAAAvJ,OAAA5F,EAAA0P,UAAqC0G,EAAArL,EAAAoE,SAAAvJ,SAOrC0M,eAAA,WACA,GAAAkE,GAAAvL,EAAAwL,GACAC,WAAA,eACA5U,OAAA,WACA6U,SAAA,YACAC,YAAA,eACAC,MAAA,UACAC,WAAA,cACAC,cAAA,iBACAC,aAAA,gBACAC,aAAA,mBACAC,gBAAA,sBACAC,eAAA,qBACAC,cAAA,iBACAC,eAAA,kBACAtS,KAAA,SACA3C,KAAA,SACAuK,MAAA,UACAkI,KAAA,SAGA,KAAA2B,IAAAC,GACAA,EAAA1K,eAAAyK,KACAvL,EAAA5J,KAAA8N,SAAAsH,EAAAD,IACAvL,GAAA5J,KAAAK,GAAA8U,EAAAvL,KAYAmJ,QAAA,SAAAjS,GACA,GAAA4I,GAAA1J,IAIA0J,GAAAyF,YACAzF,EAAA4B,QACAxK,EAAAnB,mBAWAmT,YAAA,SAAAhS,GACA,GAAA4I,GAAA1J,KACAiW,EAAAnV,EAAAoV,oBACAvX,GAAAmC,EAAAK,OAEA,IAAAuI,EAAAyF,WAIA,GAAArO,EAAAK,SAAAuI,EAAA2H,eAAA,GAOA,MANA,WAAA3H,EAAAoE,SAAAgD,KAEApH,EAAAmF,OAAAnF,EAAAyM,QAAAzM,EAAA0M,OACMH,GACNvM,EAAA2M,cAAA,OAEA,MAIAJ,IACAjN,OAAAsB,WAAA,WACAZ,EAAA4B,SACM,IAUNoJ,SAAA,WACA1U,KAAAH,OAAAK,QAAA,WASA0T,QAAA,SAAA9S,GACA,GAAA4I,GAAA1J,IACA0J,GAAA4M,UAAA5M,EAAA0F,eAAA1F,EAAAwF,SACApO,EAAAnB,iBAIA+J,EAAAoE,SAAAyE,SACAjI,WAAA,WAEA,OADAiM,GAAA5X,EAAA6X,KAAA9M,EAAA2H,eAAAvR,OAAA,IAAA2W,MAAA/M,EAAAoE,SAAAyE,SACA7L,EAAA,EAAAQ,EAAAqP,EAAAtY,OAA4CiJ,EAAAR,EAAOA,IACnDgD,EAAAgN,WAAAH,EAAA7P,KAEM,IAWN2M,WAAA,SAAAvS,GACA,GAAAd,KAAAkP,SAAA,MAAApO,MAAAnB,gBACA,IAAAuN,GAAAO,OAAAC,aAAA5M,EAAAgM,SAAAhM,EAAA6V,MACA,OAAA3W,MAAA8N,SAAAxJ,QAAA,UAAAtE,KAAA8N,SAAAgD,MAAA5D,IAAAlN,KAAA8N,SAAA0E,WACAxS,KAAA0W,aACA5V,EAAAnB,kBACA,GAHA,QAaAsT,UAAA,SAAAnS,GACA,GACA4I,IADA5I,EAAAK,SAAAnB,KAAAqR,eAAA,GACArR,KAEA,IAAA0J,EAAAwF,SAIA,YAHApO,EAAAgM,UAAAlE,GACA9H,EAAAnB,iBAKA,QAAAmB,EAAAgM,SACA,IAAAhF,GACA,GAAA4B,EAAA6F,UAEA,WADA7F,GAAAkN,WAGA,MACA,KAAA5O,GAMA,YALA0B,EAAAmF,SACA/N,EAAAnB,iBACAmB,EAAApB,kBACAgK,EAAAyM,SAGA,KAAA7N,GACA,IAAAxH,EAAA+V,SAAA/V,EAAAsM,OAAA,KACA,KAAA/E,GACA,IAAAqB,EAAAmF,QAAAnF,EAAAkG,WACAlG,EAAA0M,WACM,IAAA1M,EAAAwG,cAAA,CACNxG,EAAAiG,aAAA,CACA,IAAAmH,GAAApN,EAAAqN,kBAAArN,EAAAwG,cAAA,EACA4G,GAAA7Y,QAAAyL,EAAAsN,gBAAAF,GAAA,MAGA,WADAhW,GAAAnB,gBAEA,KAAAwI,GACA,IAAArH,EAAA+V,SAAA/V,EAAAsM,OAAA,KACA,KAAAlF,GACA,GAAAwB,EAAAwG,cAAA,CACAxG,EAAAiG,aAAA,CACA,IAAAsH,GAAAvN,EAAAqN,kBAAArN,EAAAwG,cAAA,GACA+G,GAAAhZ,QAAAyL,EAAAsN,gBAAAC,GAAA,MAGA,WADAnW,GAAAnB,gBAEA,KAAAoI,GAKA,YAJA2B,EAAAmF,QAAAnF,EAAAwG,gBACAxG,EAAAiJ,gBAA2B5H,cAAArB,EAAAwG,gBAC3BpP,EAAAnB,kBAGA,KAAAsI,GAEA,WADAyB,GAAAwN,iBAAA,GAAApW,EAEA,KAAAsH,GAEA,WADAsB,GAAAwN,iBAAA,EAAApW,EAEA,KAAA8H,GAaA,MAZAc,GAAAoE,SAAAqJ,aAAAzN,EAAAmF,QAAAnF,EAAAwG,gBACAxG,EAAAiJ,gBAA2B5H,cAAArB,EAAAwG,gBAI3BxG,EAAA4M,UACAxV,EAAAnB,uBAGA+J,EAAAoE,SAAAxJ,QAAAoF,EAAAgN,cACA5V,EAAAnB,iBAGA,KAAA4I,GACA,IAAAC,GAEA,WADAkB,GAAA0N,gBAAAtW,GAIA,OAAA4I,EAAA4M,WAAA5M,EAAA0F,gBAAAzH,EAAA7G,EAAAqM,QAAArM,EAAA+V,SAAA,WACA/V,GAAAnB,kBAWAwT,QAAA,SAAArS,GACA,GAAA4I,GAAA1J,IAEA,IAAA0J,EAAAwF,SAAA,MAAApO,MAAAnB,gBACA,IAAAjB,GAAAgL,EAAA2H,eAAAvR,OAAA,EACA4J,GAAAoG,YAAApR,IACAgL,EAAAoG,UAAApR,EACAgL,EAAA8G,eAAA9R,GACAgL,EAAA2N,iBACA3N,EAAAxJ,QAAA,OAAAxB,KAYA8R,eAAA,SAAA9R,GACA,GAAAgL,GAAA1J,KACA4J,EAAAF,EAAAoE,SAAA/M,IACA6I,KACAF,EAAAuG,eAAAvF,eAAAhM,KACAgL,EAAAuG,eAAAvR,IAAA,EACAgL,EAAA3I,KAAA,SAAAoC,GACAyG,EAAAxL,MAAAsL,GAAAhL,EAAAyE,SAUAuQ,QAAA,SAAA5S,GACA,GAAA4I,GAAA1J,KACAsX,EAAA5N,EAAAyF,SAEA,OAAAzF,GAAAoF,YACApF,EAAA8J,OACA1S,KAAAnB,kBACA,QAGA+J,EAAA+F,cACA/F,EAAAyF,WAAA,EACA,UAAAzF,EAAAoE,SAAA6G,SAAAjL,EAAA8G,eAAA,IAEA8G,GAAA5N,EAAAxJ,QAAA,SAEAwJ,EAAAyG,aAAAlS,SACAyL,EAAA6N,YACA7N,EAAA2M,cAAA,MACA3M,EAAA2N,iBAAA3N,EAAAoE,SAAA0J,cAGA9N,EAAA2K,kBASAZ,OAAA,SAAA3S,EAAA2W,GACA,GAAA/N,GAAA1J,IACA,IAAA0J,EAAAyF,YACAzF,EAAAyF,WAAA,GAEAzF,EAAA+F,aAAA,CAEI,IAAA/F,EAAAgG,YAAAjO,SAAAiW,gBAAAhO,EAAA6H,kBAAA,GAIJ,MAFA7H,GAAAgG,YAAA,MACAhG,GAAAgK,QAAA5S,EAIA,IAAA6W,GAAA,WACAjO,EAAAyM,QACAzM,EAAAkO,gBAAA,IACAlO,EAAA2M,cAAA,MACA3M,EAAAsN,gBAAA,MACAtN,EAAAmO,SAAAnO,EAAA4G,MAAArS,QACAyL,EAAA2K,gBAGAoD,GAAAhW,SAAAqW,MAAAxM,QAEA5B,EAAA+F,aAAA,EACA/F,EAAAxJ,QAAA,QAGAwJ,GAAA+F,aAAA,EACA/F,EAAAoE,SAAAxJ,QAAAoF,EAAAoE,SAAAiK,aACArO,EAAAgN,WAAA,QAAAiB,GAEAA,MAWAjF,cAAA,SAAA5R,GACAd,KAAA2P,aACA3P,KAAAgX,gBAAAlW,EAAAiK,eAAA,IAUA4H,eAAA,SAAA7R,GACA,GAAApC,GAAAsZ,EAAAtO,EAAA1J,IAEAc,GAAAnB,iBACAmB,EAAAnB,iBACAmB,EAAApB,mBAGAsY,EAAArZ,EAAAmC,EAAAiK,eACAiN,EAAAC,SAAA,UACAvO,EAAAgN,WAAA,gBACAhN,EAAAoE,SAAAoK,kBACAxO,EAAAyM,WAIAzX,EAAAsZ,EAAA9W,KAAA,cACA,mBAAAxC,KACAgL,EAAAyO,UAAA,KACAzO,EAAAkO,gBAAA,IACAlO,EAAA0O,QAAA1Z,GACAgL,EAAAoE,SAAAoK,iBACAxO,EAAAyM,SACMzM,EAAAoE,SAAAiD,cAAAjQ,EAAA4C,MAAA,QAAA8C,KAAA1F,EAAA4C,OACNgG,EAAAsN,gBAAAtN,EAAA2O,UAAA3Z,OAaAkU,aAAA,SAAA9R,GACA,GAAA4I,GAAA1J,IAEA0J,GAAAwF,UACA,UAAAxF,EAAAoE,SAAAgD,OACAhQ,EAAAnB,iBACA+J,EAAA2M,cAAAvV,EAAAiK,cAAAjK,KAWAC,KAAA,SAAA6I,GACA,GAAAF,GAAA1J,KACAoD,EAAAsG,EAAAtG,SAAAlE,SAAAwK,EAAAoE,SAAAwK,aAEA5O,GAAAsG,UACApG,EAAAxL,MAAAsL,GAAA,SAAA6O,GACA7O,EAAAsG,QAAAwI,KAAAC,IAAA/O,EAAAsG,QAAA,KACAuI,KAAAta,SACAyL,EAAAgP,UAAAH,GACA7O,EAAA2N,eAAA3N,EAAAyF,YAAAzF,EAAA0F,gBAEA1F,EAAAsG,SACA5M,EAAAhE,YAAAsK,EAAAoE,SAAAwK,cAEA5O,EAAAxJ,QAAA,OAAAqY,OASAX,gBAAA,SAAAlZ,GACA,GAAAmB,GAAAG,KAAAqR,eACAsH,EAAA9Y,EAAAC,QAAApB,CACAia,KACA9Y,EAAAC,IAAApB,GAAAkP,eAAA,UACA5N,KAAA8P,UAAApR,IAYAka,SAAA,WACA,MAAA5Y,MAAAwO,UAAA3F,GAAA7I,KAAAH,OAAAqB,KAAA,YACAlB,KAAAsQ,MAEAtQ,KAAAsQ,MAAAgC,KAAAtS,KAAA8N,SAAA0E,YASA4B,SAAA,SAAA1V,EAAAma,GACA,GAAAC,GAAAD,MAAA,SAEAtO,GAAAvK,KAAA8Y,EAAA,WACA9Y,KAAAwV,MAAAqD,GACA7Y,KAAA+Y,SAAAra,EAAAma,MAUAxC,cAAA,SAAA2C,EAAAlY,GACA,GACAmY,GACAvS,EAAAwS,EAAAC,EAAAC,EAAAvW,EAAAwW,EACAC,EAHA5P,EAAA1J,IAKA,eAAA0J,EAAAoE,SAAAgD,KAAA,CAIA,GAHAkI,EAAAra,EAAAqa,IAGAA,EAAA/a,OAMA,MALAU,GAAA+K,EAAAyG,cAAA/Q,YAAA,UACAsK,EAAAyG,qBACAzG,EAAAyF,WACAzF,EAAA6N,YAQA,IAFA0B,EAAAnY,KAAA4C,KAAA4J,cAEA,cAAA2L,GAAAvP,EAAA4F,aAAA5F,EAAAyG,aAAAlS,OAAA,CASA,IARAqb,EAAA5P,EAAA0H,SAAA4C,SAAA,gBACAmF,EAAA7R,MAAAT,UAAAQ,QAAAjJ,MAAAsL,EAAA0H,SAAA,GAAA7K,YAAA+S,EAAA,KACAF,EAAA9R,MAAAT,UAAAQ,QAAAjJ,MAAAsL,EAAA0H,SAAA,GAAA7K,YAAAyS,EAAA,KACAG,EAAAC,IACAC,EAAAF,EACAA,EAAAC,EACAA,EAAAC,GAEA3S,EAAAyS,EAAmBC,GAAA1S,EAAUA,IAC7B7D,EAAA6G,EAAA0H,SAAA,GAAA7K,WAAAG,GACA,KAAAgD,EAAAyG,aAAA9I,QAAAxE,KACAlE,EAAAkE,GAAA3D,SAAA,UACAwK,EAAAyG,aAAAnJ,KAAAnE,GAGA/B,GAAAnB,qBACI,cAAAsZ,GAAAvP,EAAA8F,YAAA,YAAAyJ,GAAAjZ,KAAAsP,YACJ0J,EAAAf,SAAA,WACAiB,EAAAxP,EAAAyG,aAAA9I,QAAA2R,EAAA,IACAtP,EAAAyG,aAAA/I,OAAA8R,EAAA,GACAF,EAAA5Z,YAAA,WAEAsK,EAAAyG,aAAAnJ,KAAAgS,EAAA9Z,SAAA,eAGAP,EAAA+K,EAAAyG,cAAA/Q,YAAA,UACAsK,EAAAyG,cAAA6I,EAAA9Z,SAAA,cAIAwK,GAAA6P,YACAvZ,KAAAmP,WACAzF,EAAA4B,UAYA0L,gBAAA,SAAAwC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAC,EACAC,EAAAC,EACArQ,EAAA1J,IAEA0J,GAAAwG,eAAAxG,EAAAwG,cAAA9Q,YAAA,UACAsK,EAAAwG,cAAA,KAEAsJ,EAAA7a,EAAA6a,GACAA,EAAAvb,SAEAyL,EAAAwG,cAAAsJ,EAAAta,SAAA,WAEAua,IAAAvQ,EAAAuQ,MAEAE,EAAAjQ,EAAA6H,kBAAA3P,SACAgY,EAAAlQ,EAAAwG,cAAA8J,aAAA,GACAP,EAAA/P,EAAA6H,kBAAA0I,aAAA,EACAJ,EAAAnQ,EAAAwG,cAAAgK,SAAA7N,IAAA3C,EAAA6H,kBAAA2I,SAAA7N,IAAAoN,EACAK,EAAAD,EACAE,EAAAF,EAAAF,EAAAC,EAEAC,EAAAD,EAAAD,EAAAF,EACA/P,EAAA6H,kBAAA4I,OAAAT,SAA4CO,UAAAF,GAAyBL,EAAAhQ,EAAAoE,SAAAsM,eAAA,GAChEX,EAAAI,GACLnQ,EAAA6H,kBAAA4I,OAAAT,SAA4CO,UAAAH,GAAsBJ,EAAAhQ,EAAAoE,SAAAsM,eAAA,MASlExD,UAAA,WACA,GAAAlN,GAAA1J,IACA,YAAA0J,EAAAoE,SAAAgD,OAEApH,EAAAyG,aAAA7I,MAAAT,UAAA9I,MAAAK,MAAAsL,EAAA0H,SAAA4C,SAAA,eAAA9U,SAAA,WACAwK,EAAAyG,aAAAlS,SACAyL,EAAA6P,YACA7P,EAAAyM,SAEAzM,EAAA4B,UAOAiO,UAAA,WACA,GAAA7P,GAAA1J,IAEA0J,GAAAkO,gBAAA,IACAlO,EAAA2H,eAAApF,KAA4BoO,QAAA,EAAAjO,SAAA,WAAAE,KAAA5C,EAAA+E,IAAA,WAC5B/E,EAAA0F,eAAA,GAMAmI,UAAA,WACAvX,KAAAqR,eAAApF,KAA4BoO,QAAA,EAAAjO,SAAA,WAAAE,KAAA,IAC5BtM,KAAAoP,eAAA,GAMA9D,MAAA,WACA,GAAA5B,GAAA1J,IACA0J,GAAAoF,aAEApF,EAAA+F,aAAA,EACA/F,EAAA2H,eAAA,GAAA/F,QACAtC,OAAAsB,WAAA,WACAZ,EAAA+F,aAAA,EACA/F,EAAAgK,WACI,KAQJF,KAAA,SAAAiE,GACAzX,KAAAqR,eAAA,GAAAmC,OACAxT,KAAAyT,OAAA,KAAAgE,IAYA6C,iBAAA,SAAApX,GACA,MAAAlD,MAAA0Q,OAAA4J,iBAAApX,EAAAlD,KAAAua,qBAUAA,iBAAA,WACA,GAAAzM,GAAA9N,KAAA8N,SACA0M,EAAA1M,EAAA2M,SAKA,OAJA,gBAAAD,KACAA,IAAaE,MAAAF,MAIbG,OAAA7M,EAAAzJ,YACAuW,YAAA9M,EAAA+M,kBACAL,SAkBA3U,OAAA,SAAA3C,GACA,GAAAwD,GAAAtJ,EAAA0d,EACApR,EAAA1J,KACA8N,EAAApE,EAAAoE,SACA3Q,EAAA6C,KAAAua,kBAGA,IAAAzM,EAAAiN,QACAD,EAAApR,EAAAoE,SAAAiN,MAAA3c,MAAA4B,MAAAkD,IACA,kBAAA4X,IACA,SAAA3e,OAAA,uEAcA,IATA+G,IAAAwG,EAAAyO,WACAzO,EAAAyO,UAAAjV,EACA9F,EAAAsM,EAAAgH,OAAA7K,OAAA3C,EAAAvE,EAAA0P,OAAAlR,GAA0D4d,MAAAD,KAC1DpR,EAAAmG,eAAAzS,GAEAA,EAAAuB,EAAA0P,QAAA,KAA8B3E,EAAAmG,gBAI9B/B,EAAAiD,aACA,IAAArK,EAAAtJ,EAAAkT,MAAArS,OAAA,EAAqCyI,GAAA,EAAQA,IAC7C,KAAAgD,EAAA4G,MAAAjJ,QAAA+B,EAAAhM,EAAAkT,MAAA5J,GAAAzJ,MACAG,EAAAkT,MAAAlJ,OAAAV,EAAA,EAKA,OAAAtJ,IASAia,eAAA,SAAA2D,GACA,GAAAtU,GAAAuU,EAAAC,EAAAhU,EAAAiU,EAAAC,EAAA5W,EAAA6W,EAAArG,EAAA5E,EAAAlT,EAAAoe,EAAAC,EACAC,EAAAC,EAAAC,CAEA,oBAAAV,KACAA,GAAA,EAGA,IAAAtR,GAAA1J,KACAkD,EAAAvE,EAAA6X,KAAA9M,EAAA2H,eAAAvR,OACAyY,EAAA7O,EAAA7D,OAAA3C,GACAqO,EAAA7H,EAAA6H,kBACAoK,EAAAjS,EAAAwG,eAAA9G,EAAAM,EAAAwG,cAAAhP,KAAA,cAYA,KATAgG,EAAAqR,EAAAjI,MAAArS,OACA,gBAAAyL,GAAAoE,SAAA8N,aACA1U,EAAAsR,KAAAqD,IAAA3U,EAAAwC,EAAAoE,SAAA8N,aAIAT,KACAC,KAEA1U,EAAA,EAAcQ,EAAAR,EAAOA,IAMrB,IALAlC,EAAAkF,EAAAvM,QAAAob,EAAAjI,MAAA5J,GAAAzJ,IACAoe,EAAA3R,EAAAnF,OAAA,SAAAC,GACAwQ,EAAAxQ,EAAAkF,EAAAoE,SAAAgO,gBAAA,GACA1L,EAAAzR,EAAAwV,QAAAa,SAEAiG,EAAA,EAAAC,EAAA9K,KAAAnS,OAAkDid,EAAAD,EAAOA,IACzDjG,EAAA5E,EAAA6K,GACAvR,EAAA0G,UAAA1F,eAAAsK,KACAA,EAAA,IAEAmG,EAAAzQ,eAAAsK,KACAmG,EAAAnG,MACAoG,EAAApU,KAAAgO,IAEAmG,EAAAnG,GAAAhO,KAAAqU,EAeA,KAVArb,KAAA8N,SAAAiO,mBACAX,EAAAZ,KAAA,SAAAwB,EAAAC,GACA,GAAAC,GAAAxS,EAAA0G,UAAA4L,GAAAG,QAAA,EACAC,EAAA1S,EAAA0G,UAAA6L,GAAAE,QAAA,CACA,OAAAD,GAAAE,IAKAlf,KACAwJ,EAAA,EAAAQ,EAAAkU,EAAAnd,OAAuCiJ,EAAAR,EAAOA,IAC9CsO,EAAAoG,EAAA1U,GACAgD,EAAA0G,UAAA1F,eAAAsK,IAAAmG,EAAAnG,GAAA/W,QAGAqd,EAAA5R,EAAAnF,OAAA,kBAAAmF,EAAA0G,UAAA4E,KAAA,GACAsG,GAAAH,EAAAnG,GAAA1C,KAAA,IACApV,EAAA8J,KAAA0C,EAAAnF,OAAA,WAAA5F,EAAA0P,UAAkD3E,EAAA0G,UAAA4E,IAClD9X,KAAAoe,OAGApe,EAAA8J,KAAAmU,EAAAnG,GAAA1C,KAAA,IAOA,IAHAf,EAAArU,OAAAoV,KAAA,KAGA5I,EAAAoE,SAAA1I,WAAAmT,EAAArV,MAAAjF,QAAAsa,EAAA8D,OAAApe,OACA,IAAAyI,EAAA,EAAAQ,EAAAqR,EAAA8D,OAAApe,OAA0CiJ,EAAAR,EAAOA,IACjDtB,EAAAmM,EAAAgH,EAAA8D,OAAA3V,GAAAnB,MAKA,KAAAmE,EAAAoE,SAAAiD,aACA,IAAArK,EAAA,EAAAQ,EAAAwC,EAAA4G,MAAArS,OAAsCiJ,EAAAR,EAAOA,IAC7CgD,EAAA2O,UAAA3O,EAAA4G,MAAA5J,IAAAxH,SAAA,WAKAqc,GAAA7R,EAAA4S,UAAApZ,GACAqY,IACAhK,EAAAgL,QAAA7S,EAAAnF,OAAA,iBAA4D0G,MAAA/H,KAC5DwY,EAAA/c,EAAA4S,EAAA,GAAAhL,WAAA,KAIAmD,EAAAkG,WAAA2I,EAAAjI,MAAArS,OAAA,GAAAsd,EACA7R,EAAAkG,YACA2I,EAAAjI,MAAArS,OAAA,GACAwd,EAAAE,GAAAjS,EAAA2O,UAAAsD,GACAF,KAAAxd,OACAud,EAAAC,EACM,WAAA/R,EAAAoE,SAAAgD,MAAApH,EAAA4G,MAAArS,SACNud,EAAA9R,EAAA2O,UAAA3O,EAAA4G,MAAA,KAEAkL,KAAAvd,SAEAud,EADAE,IAAAhS,EAAAoE,SAAA0O,cACA9S,EAAAqN,kBAAA2E,EAAA,GAEAnK,EAAApR,KAAA,6BAIAqb,EAAAE,EAEAhS,EAAAsN,gBAAAwE,GACAR,IAAAtR,EAAAmF,QAA0CnF,EAAA0M,SAE1C1M,EAAAsN,gBAAA,MACAgE,GAAAtR,EAAAmF,QAAyCnF,EAAAyM,UAgBzCuC,UAAA,SAAApV,GACA,GAAAoD,GAAAQ,EAAAxI,EAAAgL,EAAA1J,IAEA,IAAArB,EAAAwV,QAAA7Q,GACA,IAAAoD,EAAA,EAAAQ,EAAA5D,EAAArF,OAAgCiJ,EAAAR,EAAOA,IACvCgD,EAAAgP,UAAApV,EAAAoD,SAKAhI,EAAAgL,EAAAkH,eAAAtN,MACAoG,EAAA2G,YAAA3R,IAAA,EACAgL,EAAAyO,UAAA,KACAzO,EAAAxJ,QAAA,aAAAxB,EAAA4E,KAUAsN,eAAA,SAAAtN,GACA,GAAA6R,GAAA/L,EAAA9F,EAAAtD,KAAA8N,SAAA3J,YACA,QAAAgR,GAAAnV,KAAA7C,QAAAuN,eAAAyK,IAAA,GACA7R,EAAA6Y,OAAA7Y,EAAA6Y,UAAAnc,KAAAsO,MACAtO,KAAA7C,QAAAgY,GAAA7R,EACA6R,IASAtE,oBAAA,SAAAvN,GACA,GAAA6R,GAAA/L,EAAA9F,EAAAtD,KAAA8N,SAAA2O,oBACA,OAAAtH,IAEA7R,EAAA6Y,OAAA7Y,EAAA6Y,UAAAnc,KAAAsO,MACAtO,KAAAoQ,UAAA+E,GAAA7R,EACA6R,IAJA,GAcAuH,eAAA,SAAAzf,EAAAqG,GACAA,EAAAtD,KAAA8N,SAAA2O,oBAAAxf,GACAA,EAAA+C,KAAA6Q,oBAAAvN,KACAtD,KAAAE,QAAA,eAAAjD,EAAAqG,IASAqZ,kBAAA,SAAA1f,GACA+C,KAAAoQ,UAAA1F,eAAAzN,WACA+C,MAAAoQ,UAAAnT,GACA+C,KAAAuQ,eACAvQ,KAAAE,QAAA,kBAAAjD,KAOA2f,kBAAA,WACA5c,KAAAoQ,aACApQ,KAAAuQ,eACAvQ,KAAAE,QAAA,mBAWA2c,aAAA,SAAAne,EAAA4E,GACA,GACA0V,GAAA8D,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAFAzT,EAAA1J,IAQA,IAJAtB,EAAA0K,EAAA1K,GACAqe,EAAA3T,EAAA9F,EAAAoG,EAAAoE,SAAA3J,aAGA,OAAAzF,GACAgL,EAAAvM,QAAAuN,eAAAhM,GAAA,CACA,mBAAAqe,GAAA,SAAA5gB,OAAA,mCAEAghB,GAAAzT,EAAAvM,QAAAuB,GAAAyd,OAGAY,IAAAre,UACAgL,GAAAvM,QAAAuB,GACAse,EAAAtT,EAAA4G,MAAAjJ,QAAA3I,GACA,KAAAse,GACAtT,EAAA4G,MAAAlJ,OAAA4V,EAAA,EAAAD,IAGAzZ,EAAA6Y,OAAA7Y,EAAA6Y,QAAAgB,EACAzT,EAAAvM,QAAA4f,GAAAzZ,EAGA2Z,EAAAvT,EAAA6G,YAAA,KACA2M,EAAAxT,EAAA6G,YAAA,OAEA0M,UACAA,GAAAve,SACAue,GAAAF,IAEAG,UACAA,GAAAxe,SACAwe,GAAAH,IAIA,KAAArT,EAAA4G,MAAAjJ,QAAA0V,KACA/D,EAAAtP,EAAA0T,QAAA1e,GACAoe,EAAAne,EAAA+K,EAAAnF,OAAA,OAAAjB,IACA0V,EAAAf,SAAA,WAAA6E,EAAA5d,SAAA,UACA8Z,EAAAqE,YAAAP,IAIApT,EAAAyO,UAAA,KAGAzO,EAAAmF,QACAnF,EAAA2N,gBAAA,KAUAiG,aAAA,SAAA5e,EAAAma,GACA,GAAAnP,GAAA1J,IACAtB,GAAA0K,EAAA1K,EAEA,IAAAue,GAAAvT,EAAA6G,YAAA,KACA2M,EAAAxT,EAAA6G,YAAA,MACA0M,aAAAve,GACAwe,YAAAxe,SAEAgL,GAAA2G,YAAA3R,SACAgL,GAAAvM,QAAAuB,GACAgL,EAAAyO,UAAA,KACAzO,EAAAxJ,QAAA,gBAAAxB,GACAgL,EAAA6T,WAAA7e,EAAAma,IAMA2E,aAAA,WACA,GAAA9T,GAAA1J,IAEA0J,GAAAuG,kBACAvG,EAAA2G,eACA3G,EAAA6G,eACA7G,EAAAvM,QAAAuM,EAAAgH,OAAAJ,SACA5G,EAAAyO,UAAA,KACAzO,EAAAxJ,QAAA,gBACAwJ,EAAA8L,SAUA6C,UAAA,SAAA3Z,GACA,MAAAsB,MAAAyd,oBAAA/e,EAAAsB,KAAAuR,kBAAApR,KAAA,uBAWA4W,kBAAA,SAAAyC,EAAArL,GACA,GAAAuP,GAAA1d,KAAAsR,UAAAnR,KAAA,qBACAnC,EAAA0f,EAAA1f,MAAAwb,GAAArL,CAEA,OAAAnQ,IAAA,GAAAA,EAAA0f,EAAAzf,OAAAyf,EAAAC,GAAA3f,GAAAW,KAWA8e,oBAAA,SAAA/e,EAAAkf,GAGA,GAFAlf,EAAA0K,EAAA1K,GAEA,mBAAAA,IAAA,OAAAA,EACA,OAAAgI,GAAA,EAAAQ,EAAA0W,EAAA3f,OAAoCiJ,EAAAR,EAAOA,IAC3C,GAAAkX,EAAAlX,GAAAmX,aAAA,gBAAAnf,EACA,MAAAC,GAAAif,EAAAlX,GAKA,OAAA/H,MAUAye,QAAA,SAAA1e,GACA,MAAAsB,MAAAyd,oBAAA/e,EAAAsB,KAAAoR,SAAA4C,aAUA+E,SAAA,SAAA+E,EAAAjF,GAEA,OADAvI,GAAA3R,EAAAwV,QAAA2J,SACApX,EAAA,EAAAQ,EAAAoJ,EAAArS,OAAoCiJ,EAAAR,EAAOA,IAC3C1G,KAAA+d,UAAA7W,EAAA,EAAAR,EACA1G,KAAAoY,QAAA9H,EAAA5J,GAAAmS,IAWAT,QAAA,SAAA1Z,EAAAma,GACA,GAAAC,GAAAD,MAAA,SAEAtO,GAAAvK,KAAA8Y,EAAA,WACA,GAAAE,GAAAQ,EAAAkE,EAGAM,EAAAC,EAFAvU,EAAA1J,KACAyR,EAAA/H,EAAAoE,SAAAgD,IAIA,OAFApS,GAAA0K,EAAA1K,GAEA,KAAAgL,EAAA4G,MAAAjJ,QAAA3I,QACA,WAAA+S,GAAA/H,EAAAyM,cAIAzM,EAAAvM,QAAAuN,eAAAhM,KACA,WAAA+S,GAAA/H,EAAA8L,MAAAqD,GACA,UAAApH,GAAA/H,EAAA4M,WAEA0C,EAAAra,EAAA+K,EAAAnF,OAAA,OAAAmF,EAAAvM,QAAAuB,KACAuf,EAAAvU,EAAA4M,SACA5M,EAAA4G,MAAAlJ,OAAAsC,EAAAqG,SAAA,EAAArR,GACAgL,EAAAwU,cAAAlF,KACAtP,EAAAqU,YAAAE,GAAAvU,EAAA4M,WACA5M,EAAA2K,eAGA3K,EAAA2F,UACAqO,EAAAhU,EAAA6H,kBAAApR,KAAA,qBAGAuJ,EAAAqU,YACAvE,EAAA9P,EAAA2O,UAAA3Z,GACAsf,EAAAtU,EAAAqN,kBAAAyC,EAAA,GAAAtY,KAAA,cACAwI,EAAA2N,eAAA3N,EAAAyF,WAAA,WAAAsC,GACAuM,GACAtU,EAAAsN,gBAAAtN,EAAA2O,UAAA2F,MAKAN,EAAAzf,QAAAyL,EAAA4M,SACA5M,EAAAyM,QAEAzM,EAAA6J,mBAGA7J,EAAA8K,oBACA9K,EAAAxJ,QAAA,WAAAxB,EAAAsa,GACAtP,EAAA4K,qBAA+BuE,kBAW/B0E,WAAA,SAAA7e,EAAAma,GACA,GACAG,GAAAtS,EAAAwS,EADAxP,EAAA1J,IAGAgZ,GAAA,gBAAAta,KAAAgL,EAAA0T,QAAA1e,GACAA,EAAA0K,EAAA4P,EAAA9X,KAAA,eACAwF,EAAAgD,EAAA4G,MAAAjJ,QAAA3I,GAEA,KAAAgI,IACAsS,EAAAtM,SACAsM,EAAAf,SAAA,YACAiB,EAAAxP,EAAAyG,aAAA9I,QAAA2R,EAAA,IACAtP,EAAAyG,aAAA/I,OAAA8R,EAAA,IAGAxP,EAAA4G,MAAAlJ,OAAAV,EAAA,GACAgD,EAAAyO,UAAA,MACAzO,EAAAoE,SAAAqQ,SAAAzU,EAAA2G,YAAA3F,eAAAhM,IACAgL,EAAA4T,aAAA5e,EAAAma,GAGAnS,EAAAgD,EAAAqG,UACArG,EAAAmO,SAAAnO,EAAAqG,SAAA,GAGArG,EAAA2K,eACA3K,EAAA8K,oBACA9K,EAAA4K,qBAA8BuE,WAC9BnP,EAAA6J,mBACA7J,EAAAxJ,QAAA,cAAAxB,EAAAsa,KAiBAtC,WAAA,SAAAzL,EAAA+P,GACA,GAAAtR,GAAA1J,KACAoe,EAAA1U,EAAAqG,QACA9E,MAAAtM,EAAA6X,KAAA9M,EAAA2H,eAAAvR,OAAA,GAEA,IAAAqD,GAAAgE,oBAAAlJ,OAAA,EAOA,IANA,kBAAAkF,OAAA,cAEA,iBAAA6X,KACAA,GAAA,IAGAtR,EAAA4S,UAAArR,GAEA,MADA9H,MACA,CAGAuG,GAAA2U,MAEA,IAAAlN,GAAA,kBAAAzH,GAAAoE,SAAAxJ,OAAAtE,KAAA8N,SAAAxJ,OAAA,SAAA2G,GACA,GAAA3H,KAGA,OAFAA,GAAAoG,EAAAoE,SAAA1J,YAAA6G,EACA3H,EAAAoG,EAAAoE,SAAA3J,YAAA8G,EACA3H,GAGAgB,EAAAyF,EAAA,SAAAzG,GAGA,GAFAoG,EAAA4U,UAEAhb,GAAA,gBAAAA,GAAA,MAAAH,IACA,IAAAzE,GAAA0K,EAAA9F,EAAAoG,EAAAoE,SAAA3J,YACA,uBAAAzF,GAAAyE,KAEAuG,EAAAkO,gBAAA,IACAlO,EAAAgP,UAAApV,GACAoG,EAAAmO,SAAAuG,GACA1U,EAAA0O,QAAA1Z,GACAgL,EAAA2N,eAAA2D,GAAA,WAAAtR,EAAAoE,SAAAgD,UACA3N,GAAAG,MAGAib,EAAApN,EAAA/S,MAAA4B,MAAAiL,EAAA3G,GAKA,OAJA,mBAAAia,IACAja,EAAAia,IAGA,GAMAhK,aAAA,WACAvU,KAAAmY,UAAA,KAEAnY,KAAAqP,SACArP,KAAAoY,QAAApY,KAAAsQ,OAGAtQ,KAAAqU,eACArU,KAAAsU,uBAOAD,aAAA,WACA,GAAAmK,GAAA9U,EAAA1J,IACA0J,GAAAqF,aACArF,EAAA4G,MAAArS,SAAAyL,EAAAuF,WAAA,GACAvF,EAAA2H,eAAAoN,KAAA,WAAAD,IAEA9U,EAAAgV,kBAMAA,eAAA,WACA,GAAAhV,GAAA1J,KACAsW,EAAA5M,EAAA4M,SACApH,EAAAxF,EAAAwF,QAEAxF,GAAAtG,SACAub,YAAA,MAAAjV,EAAA+E,KAEA/E,EAAA0H,SACAuN,YAAA,QAAAjV,EAAAyF,WACAwP,YAAA,WAAAjV,EAAAoF,YACA6P,YAAA,WAAAjV,EAAAqF,YACA4P,YAAA,UAAAjV,EAAAuF,WACA0P,YAAA,SAAAzP,GACAyP,YAAA,OAAArI,GAAAqI,YAAA,YAAArI,GACAqI,YAAA,eAAAjV,EAAAyF,YAAAzF,EAAA0F,eACAuP,YAAA,kBAAAjV,EAAAmF,QACA8P,YAAA,eAAAhgB,EAAAigB,cAAAlV,EAAAvM,UACAwhB,YAAA,YAAAjV,EAAA4G,MAAArS,OAAA,GAEAyL,EAAA2H,eAAA/N,KAAA,QAAAgT,IAAApH,IASAoH,OAAA,WACA,cAAAtW,KAAA8N,SAAA5J,UAAAlE,KAAAsQ,MAAArS,QAAA+B,KAAA8N,SAAA5J,UAOAoQ,oBAAA,SAAAuK,GACA,GAAAnY,GAAAQ,EAAA/J,EAAA2hB,EAAApV,EAAA1J,IAGA,IAFA6e,QAEAnV,EAAA8E,UAAA3F,EAAA,CAEA,IADA1L,KACAuJ,EAAA,EAAAQ,EAAAwC,EAAA4G,MAAArS,OAAsCiJ,EAAAR,EAAOA,IAC7CoY,EAAApV,EAAAvM,QAAAuM,EAAA4G,MAAA5J,IAAAgD,EAAAoE,SAAA1J,aAAA,GACAjH,EAAA6J,KAAA,kBAAAqC,EAAAK,EAAA4G,MAAA5J,IAAA,yBAAA2C,EAAAyV,GAAA,YAEA3hB,GAAAc,QAAA+B,KAAAH,OAAAqB,KAAA,aACA/D,EAAA6J,KAAA,kDAEA0C,EAAA7J,OAAA3C,KAAAC,EAAAmV,KAAA,SAEA5I,GAAA7J,OAAAC,IAAA4J,EAAAkP,YACAlP,EAAA7J,OAAAqB,KAAA,QAAAwI,EAAA7J,OAAAC,MAGA4J,GAAA2F,UACAwP,EAAAhG,QACAnP,EAAAxJ,QAAA,SAAAwJ,EAAA7J,OAAAC,SASA0U,kBAAA,WACA,GAAAxU,KAAA8N,SAAAd,YAAA,CACA,GAAAnN,GAAAG,KAAAqR,cAEArR,MAAAsQ,MAAArS,OACA4B,EAAAkf,WAAA,eAEAlf,EAAAqB,KAAA,cAAAlB,KAAA8N,SAAAd,aAEAnN,EAAA+N,eAAA,UAAoCP,OAAA,MAOpC+I,KAAA,WACA,GAAA1M,GAAA1J,IAEA0J,GAAAwF,UAAAxF,EAAAmF,QAAA,UAAAnF,EAAAoE,SAAAgD,MAAApH,EAAA4M,WACA5M,EAAA4B,QACA5B,EAAAmF,QAAA,EACAnF,EAAA2K,eACA3K,EAAA4H,UAAArF,KAAuB+S,WAAA,SAAAC,QAAA,UACvBvV,EAAA6J,mBACA7J,EAAA4H,UAAArF,KAAuB+S,WAAA,YACvBtV,EAAAxJ,QAAA,gBAAAwJ,EAAA4H,aAMA6E,MAAA,WACA,GAAAzM,GAAA1J,KACAE,EAAAwJ,EAAAmF,MAEA,YAAAnF,EAAAoE,SAAAgD,MAAApH,EAAA4G,MAAArS,QACAyL,EAAA6P,YAGA7P,EAAAmF,QAAA,EACAnF,EAAA4H,UAAA/O,OACAmH,EAAAsN,gBAAA,MACAtN,EAAA2K,eAEAnU,GAAAwJ,EAAAxJ,QAAA,iBAAAwJ,EAAA4H,YAOAiC,iBAAA,WACA,GAAAnC,GAAApR,KAAAoR,SACA8I,EAAA,SAAAla,KAAA8N,SAAAkE,eAAAZ,EAAA8I,SAAA9I,EAAAhF,UACA8N,GAAA7N,KAAA+E,EAAA4I,aAAA,GAEAha,KAAAsR,UAAArF,KACAtK,MAAAyP,EAAA8N,aACA7S,IAAA6N,EAAA7N,IACAC,KAAA4N,EAAA5N,QAUAkJ,MAAA,SAAAqD,GACA,GAAAnP,GAAA1J,IAEA0J,GAAA4G,MAAArS,SACAyL,EAAA0H,SAAA4C,SAAA,eAAAtH,SACAhD,EAAA4G,SACA5G,EAAAyO,UAAA,KACAzO,EAAAmO,SAAA,GACAnO,EAAA2M,cAAA,MACA3M,EAAA8K,oBACA9K,EAAA4K,qBAA6BuE,WAC7BnP,EAAA2K,eACA3K,EAAA6N,YACA7N,EAAAxJ,QAAA,WASAge,cAAA,SAAAiB,GACA,GAAAf,GAAA5F,KAAAqD,IAAA7b,KAAA+P,SAAA/P,KAAAsQ,MAAArS,OACA,KAAAmgB,EACApe,KAAAoR,SAAAmL,QAAA4C,GAEAxgB,EAAAqB,KAAAoR,SAAA,GAAA7K,WAAA6X,IAAA3U,OAAA0V,GAEAnf,KAAA6X,SAAAuG,EAAA,IASAhH,gBAAA,SAAAtW,GACA,GAAA4F,GAAAQ,EAAAiH,EAAA9C,EAAAyS,EAAAM,EAAAgB,EAAAC,EAAAC,EACA5V,EAAA1J,IAYA,IAVAmO,EAAArN,KAAAgM,UAAAvE,EAAA,KACA8C,EAAAL,EAAAtB,EAAA2H,eAAA,IAEA3H,EAAAwG,gBAAAxG,EAAAoE,SAAAiD,eACAqO,EAAA1V,EAAAqN,kBAAArN,EAAAwG,cAAA,IAAAhP,KAAA,eAIA4c,KAEApU,EAAAyG,aAAAlS,OAAA,CAKA,IAJAqhB,EAAA5V,EAAA0H,SAAA4C,SAAA,YAAA7F,EAAA,mBACAiQ,EAAA1U,EAAA0H,SAAA4C,SAAA,eAAAhW,MAAAshB,GACAnR,EAAA,GAAwBiQ,IAExB1X,EAAA,EAAAQ,EAAAwC,EAAAyG,aAAAlS,OAA6CiJ,EAAAR,EAAOA,IACpDoX,EAAA9W,KAAArI,EAAA+K,EAAAyG,aAAAzJ,IAAAxF,KAAA,cAEAJ,KACAA,EAAAnB,iBACAmB,EAAApB,wBAEIgK,EAAAyF,WAAA,WAAAzF,EAAAoE,SAAAgD,OAAApH,EAAA4G,MAAArS,SACJ,EAAAkQ,GAAA,IAAA9C,EAAAH,OAAA,IAAAG,EAAApN,OACA6f,EAAA9W,KAAA0C,EAAA4G,MAAA5G,EAAAqG,SAAA,IACK5B,EAAA,GAAA9C,EAAAH,QAAAxB,EAAA2H,eAAAvR,MAAA7B,QACL6f,EAAA9W,KAAA0C,EAAA4G,MAAA5G,EAAAqG,WAKA,KAAA+N,EAAA7f,QAAA,kBAAAyL,GAAAoE,SAAAyR,UAAA7V,EAAAoE,SAAAyR,SAAAnhB,MAAAsL,GAAAoU,OAAA,EACA,QAOA,KAHA,mBAAAM,IACA1U,EAAAmO,SAAAuG,GAEAN,EAAA7f,QACAyL,EAAA6T,WAAAO,EAAA0B,MAeA,OAZA9V,GAAA6N,YACA7N,EAAA6J,mBACA7J,EAAA2N,gBAAA,GAGA+H,IACAC,EAAA3V,EAAA2O,UAAA+G,GACAC,EAAAphB,QACAyL,EAAAsN,gBAAAqI,KAIA,GAaAnI,iBAAA,SAAA/I,EAAArN,GACA,GAAA2e,GAAApU,EAAA6N,EAAAwG,EAAAC,EAAAL,EACA5V,EAAA1J,IAEA,KAAAmO,IACAzE,EAAA+E,MAAAN,GAAA,IAEAsR,EAAAtR,EAAA,iBACA9C,EAAAL,EAAAtB,EAAA2H,eAAA,IAEA3H,EAAAyF,YAAAzF,EAAA0F,eACAsQ,EAAAhW,EAAA2H,eAAAvR,MAAA7B,OACA0hB,EAAA,EAAAxR,EACA,IAAA9C,EAAAH,OAAA,IAAAG,EAAApN,OACAoN,EAAAH,QAAAwU,EAEAC,IAAAD,GACAhW,EAAAkW,aAAAzR,EAAArN,KAGAwe,EAAA5V,EAAA0H,SAAA4C,SAAA,WAAAyL,GACAH,EAAArhB,SACAib,EAAAxP,EAAA0H,SAAA4C,SAAA,eAAAhW,MAAAshB,GACA5V,EAAA2M,cAAA,MACA3M,EAAAmO,SAAA1J,EAAA,EAAA+K,EAAA,EAAAA,OAWA0G,aAAA,SAAAzR,EAAArN,GACA,GAAA8I,GAAAiW,EAAAnW,EAAA1J,IAEA,KAAAmO,IAEAvE,EAAAuE,EAAA,gBACAzE,EAAA4F,aACAuQ,EAAAnW,EAAA2H,eAAAzH,KACAiW,EAAA5hB,SACAyL,EAAA6P,YACA7P,EAAA2M,cAAAwJ,GACA/e,KAAAnB,mBAGA+J,EAAAmO,SAAAnO,EAAAqG,SAAA5B,KASA0J,SAAA,SAAAnR,GACA,GAAAgD,GAAA1J,IAQA,IALA0G,EADA,WAAAgD,EAAAoE,SAAAgD,KACApH,EAAA4G,MAAArS,OAEAua,KAAAC,IAAA,EAAAD,KAAAqD,IAAAnS,EAAA4G,MAAArS,OAAAyI,KAGAgD,EAAAqU,UAAA,CAIA,GAAA9C,GAAA/T,EAAA6M,EAAA+L,CAEA,KADA/L,EAAArK,EAAA0H,SAAA4C,SAAA,eACAiH,EAAA,EAAA/T,EAAA6M,EAAA9V,OAAqCiJ,EAAA+T,EAAOA,IAC5C6E,EAAAnhB,EAAAoV,EAAAkH,IAAAhH,SACAvN,EAAAuU,EACAvR,EAAA2H,eAAA5H,OAAAqW,GAEApW,EAAA0H,SAAA2O,OAAAD,GAKApW,EAAAqG,SAAArJ,GAOA2X,KAAA,WACAre,KAAAmW,QACAnW,KAAAkP,UAAA,EACAlP,KAAAqU,gBAMAiK,OAAA,WACAte,KAAAkP,UAAA,EACAlP,KAAAqU,gBAOAI,QAAA,WACA,GAAA/K,GAAA1J,IACA0J,GAAA7J,OAAA4e,KAAA,eACA/U,EAAA2H,eAAAoN,KAAA,eAAAA,KAAA,eACA/U,EAAAoF,YAAA,EACApF,EAAA2U,QAOA2B,OAAA,WACA,GAAAtW,GAAA1J,IACA0J,GAAA7J,OAAA4e,KAAA,eACA/U,EAAA2H,eAAAoN,KAAA,eAAAA,KAAA,WAAA/U,EAAA6E;AACA7E,EAAAoF,YAAA,EACApF,EAAA4U,UAQA2B,QAAA,WACA,GAAAvW,GAAA1J,KACA0O,EAAAhF,EAAAgF,QACAoF,EAAApK,EAAAoK,cAEApK,GAAAxJ,QAAA,WACAwJ,EAAAzC,MACAyC,EAAAtG,SAAAsJ,SACAhD,EAAA4H,UAAA5E,SAEAhD,EAAA7J,OACA3C,KAAA,IACA6iB,OAAAjM,EAAAC,WACAgL,WAAA,YACA3f,YAAA,cACA8B,MAAWgT,SAAAJ,EAAAI,WACX5R,OAEAoH,EAAA2H,eAAA6O,WAAA,QACAxW,EAAA7J,OAAAqgB,WAAA,aAEAvhB,EAAAqK,QAAA/B,IAAAyH,GACA/P,EAAA8C,UAAAwF,IAAAyH,GACA/P,EAAA8C,SAAAqW,MAAA7Q,IAAAyH,SAEAhF,GAAA7J,OAAA,GAAA8E,WAWAJ,OAAA,SAAA4b,EAAA7c,GACA,GAAA5E,GAAAzB,EACAC,EAAA,GACAkjB,GAAA,EACA1W,EAAA1J,KACAqgB,EAAA,0DAQA,QANA,WAAAF,GAAA,SAAAA,KACAzhB,EAAA0K,EAAA9F,EAAAoG,EAAAoE,SAAA3J,aACAic,IAAA1hB,GAIA0hB,IACAlX,EAAAQ,EAAA6G,YAAA4P,MACAzW,EAAA6G,YAAA4P,OAEAzW,EAAA6G,YAAA4P,GAAAzV,eAAAhM,IACAgL,EAAA6G,YAAA4P,GAAAzhB,IAKAxB,EAAAwM,EAAAoE,SAAAvJ,OAAA4b,GAAA/hB,MAAA4B,MAAAsD,EAAA+F,KAGA,WAAA8W,GAAA,kBAAAA,KACAjjB,IAAAW,QAAAwiB,EAAA,wBAEA,aAAAF,IACAljB,EAAAqG,EAAAoG,EAAAoE,SAAA2O,qBAAA,GACAvf,IAAAW,QAAAwiB,EAAA,mBAAA9W,EAAAF,EAAApM,IAAA,OAEA,WAAAkjB,GAAA,SAAAA,KACAjjB,IAAAW,QAAAwiB,EAAA,mBAAA9W,EAAAF,EAAA3K,GAAA,WAIA0hB,IACA1W,EAAA6G,YAAA4P,GAAAzhB,GAAAxB,GAGAA,IAUAojB,WAAA,SAAAH,GACA,GAAAzW,GAAA1J,IACA,oBAAAmgB,GACAzW,EAAA6G,qBAEA7G,GAAA6G,YAAA4P,IAWA7D,UAAA,SAAArR,GACA,GAAAvB,GAAA1J,IACA,KAAA0J,EAAAoE,SAAAxJ,OAAA,QACA,IAAAic,GAAA7W,EAAAoE,SAAA0S,YACA,OAAAvV,GAAAhN,SACA,kBAAAsiB,MAAAniB,MAAAsL,GAAAuB,OACA,gBAAAsV,IAAA,GAAA/a,QAAA+a,GAAA/Z,KAAAyE,QACAsV,YAAA/a,UAAA+a,EAAA/Z,KAAAyE,OAMA4C,EAAAc,MAAA,EACAd,EAAA4S,UACAtjB,WACAiT,aAEAnM,WACAuO,UAAA,IACAD,QAAA,KACA4L,SAAA,EACAxN,YAAA,EACArM,QAAA,EACAyT,cAAA,EACAyI,aAAA,KACApb,WAAA,EACAoS,aAAA,EACAoE,WAAA,IACA1X,SAAA,KACA6M,aAAA,KACAyL,eAAA,EACArF,aAAA,EACAxC,SAAA,EACA+L,kBAAA,EACAxI,kBAAA,EAEAkC,eAAA,GACA3J,aAAA,IACA6H,aAAA,UAEAqI,SAAA,YACA7E,cAAA,WACA3X,WAAA,QACAC,WAAA,OACA0Q,mBAAA,QACA2H,mBAAA,QACAV,mBAAA,EAEAtB,UAAA,SACApW,aAAA,QACAwW,kBAAA,MAEA/J,KAAA,KACAgB,aAAA,oBACAC,WAAA,kBACAE,cAAA,qBACAC,qBAAA,6BAEAF,eAAA,KAEAG,uBAAA,EAsBA5N,WAYA5F,EAAAiL,GAAAjF,UAAA,SAAAic,GACA,GAAAH,GAAA9hB,EAAAiL,GAAAjF,UAAA8b,SACA3S,EAAAnP,EAAA0P,UAAwCoS,EAAAG,GACxCC,EAAA/S,EAAA6S,SACA/L,EAAA9G,EAAA1J,WACA0c,EAAAhT,EAAA3J,WACA0Q,EAAA/G,EAAAgO,cACAiF,EAAAjT,EAAAgH,mBACAkM,EAAAlT,EAAA2O,mBAQAwE,EAAA,SAAAphB,EAAAqhB,GACA,GAAAxa,GAAAQ,EAAA4W,EAAAtZ,EAEA2c,EAAAthB,EAAAqB,KAAA2f,EAEA,IAAAM,EAaA,IADAD,EAAA/jB,QAAAikB,KAAAC,MAAAF,GACAza,EAAA,EAAAQ,EAAAga,EAAA/jB,QAAAc,OAAoDiJ,EAAAR,EAAOA,IAC3Dwa,EAAA5Q,MAAAtJ,KAAAka,EAAA/jB,QAAAuJ,GAAAoa,QAdA,CACA,GAAApiB,GAAAC,EAAA6X,KAAA3W,EAAAC,OAAA,GACA,KAAAgO,EAAA4S,mBAAAhiB,EAAAT,OAAA,MAEA,KADA6f,EAAApf,EAAA+X,MAAA3I,EAAA0E,WACA9L,EAAA,EAAAQ,EAAA4W,EAAA7f,OAAkCiJ,EAAAR,EAAOA,IACzClC,KACAA,EAAAoQ,GAAAkJ,EAAApX,GACAlC,EAAAsc,GAAAhD,EAAApX,GACAwa,EAAA/jB,QAAA6J,KAAAxC,EAEA0c,GAAA5Q,MAAAwN,IAeAwD,EAAA,SAAAzhB,EAAAqhB,GACA,GAAAxa,GAAAQ,EAAAT,EAAAsN,EACA5W,EAAA+jB,EAAA/jB,QACAokB,KAEAC,EAAA,SAAArC,GACA,GAAA7b,GAAAud,GAAA1B,EAAAje,KAAA2f,EACA,uBAAAvd,MAAArF,OACAmjB,KAAAC,MAAA/d,GAEA,MAGAoV,EAAA,SAAAc,EAAAiI,GACAjI,EAAA7a,EAAA6a,EAEA,IAAA9a,GAAA0K,EAAAoQ,EAAAtY,KAAA,SACA,IAAAxC,GAAAoP,EAAA4S,iBAMA,GAAAa,EAAA7W,eAAAhM,IACA,GAAA+iB,EAAA,CACA,GAAAC,GAAAH,EAAA7iB,GAAAmW,EACA6M,GAEO/iB,EAAAwV,QAAAuN,GAGPA,EAAA1a,KAAAya,GAFAF,EAAA7iB,GAAAmW,IAAA6M,EAAAD,GAFAF,EAAA7iB,GAAAmW,GAAA4M,OAJA,CAcA,GAAAjd,GAAAgd,EAAAhI,MACAhV,GAAAoQ,GAAApQ,EAAAoQ,IAAA4E,EAAA9N,OACAlH,EAAAsc,GAAAtc,EAAAsc,IAAApiB,EACA8F,EAAAqQ,GAAArQ,EAAAqQ,IAAA4M,EAEAF,EAAA7iB,GAAA8F,EACArH,EAAA6J,KAAAxC,GAEAgV,EAAAxK,GAAA,cACAkS,EAAA5Q,MAAAtJ,KAAAtI,KAIAijB,EAAA,SAAAC,GACA,GAAAlb,GAAAQ,EAAAjK,EAAA+X,EAAA0I,CAaA,KAXAkE,EAAAjjB,EAAAijB,GACA3kB,EAAA2kB,EAAA1gB,KAAA,SAEAjE,IACA+X,EAAAwM,EAAAI,OACA5M,EAAA+L,GAAA9jB,EACA+X,EAAAgM,GAAA/jB,EACAikB,EAAA9Q,UAAApJ,KAAAgO,IAGA0I,EAAA/e,EAAA,SAAAijB,GACAlb,EAAA,EAAAQ,EAAAwW,EAAAzf,OAAoCiJ,EAAAR,EAAOA,IAC3CgS,EAAAgF,EAAAhX,GAAAzJ,GAOA,KAHAikB,EAAAhd,SAAArE,EAAAqB,KAAA,mBAEA6S,EAAAlU,EAAAmU,WACAtN,EAAA,EAAAQ,EAAA6M,EAAA9V,OAAoCiJ,EAAAR,EAAOA,IAC3CD,EAAAsN,EAAArN,GAAAD,QAAA6G,cACA,aAAA7G,EACAkb,EAAA5N,EAAArN,IACK,WAAAD,GACLiS,EAAA3E,EAAArN,IAKA,OAAA1G,MAAA2G,KAAA,WACA,IAAA3G,KAAA2E,UAAA,CAEA,GAAAkd,GACAhiB,EAAAlB,EAAAqB,MACA8hB,EAAA9hB,KAAAyG,QAAA6G,cACAN,EAAAnN,EAAAqB,KAAA,gBAAArB,EAAAqB,KAAA,mBACA8L,IAAAc,EAAA4S,mBACA1T,EAAAnN,EAAAmU,SAAA,oBAAAtI,OAGA,IAAAwV,IACAlU,cACA7P,WACAiT,aACAE,SAGA,YAAAwR,EACAR,EAAAzhB,EAAAqhB,GAEAD,EAAAphB,EAAAqhB,GAGAW,EAAA,GAAAhU,GAAAhO,EAAAlB,EAAA0P,QAAA,KAAqDoS,EAAAS,EAAAN,QAIrDjiB,EAAAiL,GAAAjF,UAAA8b,SAAA5S,EAAA4S,SACA9hB,EAAAiL,GAAAjF,UAAAod,SACA9Y,SAAAF,GAIA8E,EAAAmU,OAAA,qBAAA7kB,GACA,IAAAwB,EAAAiL,GAAAqY,SAAA,SAAA9lB,OAAA,wDACA,cAAA6D,KAAA8N,SAAAgD,KAAA,CACA,GAAApH,GAAA1J,IAEA0J,GAAA2U,KAAA,WACA,GAAAxU,GAAAH,EAAA2U,IACA,mBACA,GAAA4D,GAAAvY,EAAA0H,SAAA9N,KAAA,WAEA,OADA2e,MAAAxN,UACA5K,EAAAzL,MAAAsL,EAAAvC,eAIAuC,EAAA4U,OAAA,WACA,GAAAzU,GAAAH,EAAA4U,MACA,mBACA,GAAA2D,GAAAvY,EAAA0H,SAAA9N,KAAA,WAEA,OADA2e,MAAAjC,SACAnW,EAAAzL,MAAAsL,EAAAvC,eAIAuC,EAAAyH,MAAA,WACA,GAAAtH,GAAAH,EAAAyH,KACA,mBACAtH,EAAAzL,MAAA4B,KAAAmH,UAEA,IAAAiK,GAAA1H,EAAA0H,SAAA6Q,UACA3R,MAAA,eACA4R,sBAAA,EACAC,SAAAzY,EAAAwF,SACAhE,MAAA,SAAApK,EAAAshB,GACAA,EAAApV,YAAAf,IAAA,QAAAmW,EAAAC,OAAApW,IAAA,UACAmF,EAAAnF,KAAoBqW,SAAA,aAEpBnI,KAAA,WACA/I,EAAAnF,KAAoBqW,SAAA,UACpB,IAAAC,GAAA7Y,EAAAyG,aAAAzG,EAAAyG,aAAApS,QAAA,KACA+f,IACA1M,GAAA4C,SAAA,gBAAArN,KAAA,WACAmX,EAAA9W,KAAArI,EAAAqB,MAAAkB,KAAA,iBAEAwI,EAAA0K,SAAA0J,GACApU,EAAA2M,cAAAkM,aAQA1U,EAAAmU,OAAA,2BAAA7kB,GACA,GAAAuM,GAAA1J,IAEA7C,GAAAwB,EAAA0P,QACAmU,MAAA,WACAC,YAAA,4BACAC,cAAA,kCACAC,WAAA,kCACAC,WAAA,kCAEA1lB,KAAA,SAAAoG,GACA,MACA,eAAAA,EAAAmf,YAAA,iBACAnf,EAAAof,cAAA,kBACApf,EAAAqf,WAAA,KAAArf,EAAAkf,MAAA,8CACAlf,EAAAsf,WAAA,8BAKGzlB,GAEHuM,EAAAyH,MAAA,WACA,GAAAtH,GAAAH,EAAAyH,KACA,mBACAtH,EAAAzL,MAAAsL,EAAAvC,WACAuC,EAAAmZ,iBAAAlkB,EAAAxB,EAAAD,KAAAC,IACAuM,EAAA4H,UAAAiL,QAAA7S,EAAAmZ,wBAMAhV,EAAAmU,OAAA,4BAAA7kB,GACA,GAAAuM,GAAA1J,IAEA7C,GAAAwB,EAAA0P,QACAyU,eAAA,EACAC,gBAAA,GACG5lB,GAEH6C,KAAA+W,kBAAA,SAAAyC,EAAArL,GACA,GAAAuP,GAAAlE,EAAAwJ,QAAA,gBAAA7iB,KAAA,qBACAnC,EAAA0f,EAAA1f,MAAAwb,GAAArL,CAEA,OAAAnQ,IAAA,GAAAA,EAAA0f,EAAAzf,OAAAyf,EAAAC,GAAA3f,GAAAW,KAGAqB,KAAAiT,UAAA,WACA,GAAApJ,GAAAH,EAAAuJ,SACA,iBAAAnS,GACA,GAAA9C,GAAAwb,EAAAkE,EAAAkE,CAEA,QAAA5hB,KAAA6O,QAAA/N,EAAAgM,UAAA7E,GAAAnH,EAAAgM,UAAA1E,EAmBAyB,EAAAzL,MAAA4B,KAAAmH,YAlBAuC,EAAAiG,aAAA,EACAiS,EAAA5hB,KAAAkQ,cAAA8S,QAAA,gBACAhlB,EAAA4jB,EAAAzhB,KAAA,qBAAAnC,MAAAgC,KAAAkQ,eAGA0R,EADA9gB,EAAAgM,UAAA7E,EACA2Z,EAAAve,KAAA,gBAEAue,EAAAqB,KAAA,gBAGAvF,EAAAkE,EAAAzhB,KAAA,qBACAqZ,EAAAkE,EAAAC,GAAAnF,KAAAqD,IAAA6B,EAAAzf,OAAA,EAAAD,SACAwb,EAAAvb,QACA+B,KAAAgX,gBAAAwC,QASA,IAAA0J,GAAA,WACA,GAAAC,GACAxhB,EAAAuhB,EAAAvhB,MACAyhB,EAAA3hB,QAUA,OARA,mBAAAE,KACAwhB,EAAAC,EAAA1hB,cAAA,OACAyhB,EAAAE,UAAA,8IACAF,IAAAG,WACAF,EAAAtL,KAAA1R,YAAA+c,GACAxhB,EAAAuhB,EAAAvhB,MAAAwhB,EAAAI,YAAAJ,EAAAK,YACAJ,EAAAtL,KAAA2L,YAAAN,IAEAxhB,GAGA+hB,EAAA,WACA,GAAAhd,GAAAQ,EAAAyc,EAAAhiB,EAAAiiB,EAAAC,EAAAC,CAIA,IAFAA,EAAAnlB,EAAA,eAAA+K,EAAA6H,mBACArK,EAAA4c,EAAA7lB,OACAiJ,GAAAwC,EAAA6H,kBAAA5P,QAAA,CAEA,GAAAxE,EAAA4lB,eAAA,CAEA,IADAY,EAAA,EACAjd,EAAA,EAAeQ,EAAAR,EAAOA,IACtBid,EAAAnL,KAAAC,IAAAkL,EAAAG,EAAAnG,GAAAjX,GAAA9E,SAEAkiB,GAAA7X,KAAoBrK,OAAA+hB,IAGpBxmB,EAAA2lB,gBACAe,EAAAna,EAAA6H,kBAAAwS,aAAAb,IACAvhB,EAAA6W,KAAAwL,MAAAH,EAAA3c,GACA4c,EAAA7X,KAAoBtK,UACpBuF,EAAA,IACA0c,EAAAC,EAAAliB,GAAAuF,EAAA,GACA4c,EAAAnG,GAAAzW,EAAA,GAAA+E,KAA+BtK,MAAAiiB,SAK/BzmB,EAAA4lB,gBAAA5lB,EAAA2lB,iBACAtZ,EAAAM,MAAA9J,KAAA,mBAAA0jB,GACAla,EAAAM,MAAA9J,KAAA,iBAAA0jB,MAMA7V,EAAAmU,OAAA,yBAAA7kB,GACA,cAAA6C,KAAA8N,SAAAgD,KAAA,CAEA3T,EAAAwB,EAAA0P,QACAyQ,MAAA,UACA0D,MAAA,SACAzc,UAAA,SACAga,QAAA,GACG5iB,EAEH,IAAAuM,GAAA1J,KACA9C,EAAA,uCAAAC,EAAA4I,UAAA,0BAAAsD,EAAAlM,EAAAqlB,OAAA,KAAArlB,EAAA2hB,MAAA,OASAiB,EAAA,SAAAkE,EAAAC,GACA,GAAAte,GAAAqe,EAAApe,OAAA,kBACA,OAAAoe,GAAA1W,UAAA,EAAA3H,GAAAse,EAAAD,EAAA1W,UAAA3H,GAGA5F,MAAAmR,MAAA,WACA,GAAAtH,GAAAH,EAAAyH,KACA,mBAEA,GAAAhU,EAAA4iB,OAAA,CACA,GAAAoE,GAAAza,EAAAoE,SAAAvJ,OAAA1B,IACA6G,GAAAoE,SAAAvJ,OAAA1B,KAAA,SAAAS,GACA,MAAAyc,GAAAoE,EAAA/lB,MAAA4B,KAAAmH,WAAAjK,IAIA2M,EAAAzL,MAAA4B,KAAAmH,WAGAnH,KAAAoR,SAAA/Q,GAAA,YAAAlD,EAAA4I,UAAA,SAAAjF,GAEA,GADAA,EAAAnB,kBACA+J,EAAAwF,SAAA,CAEA,GAAA8J,GAAAra,EAAAmC,EAAAiK,eAAAqZ,QACA1a,GAAA2M,cAAA2C,GACAtP,EAAA0N,mBACA1N,EAAAmO,SAAAnO,EAAA4G,MAAArS,kBASA4P,EAAAmU,OAAA,gCAAA7kB,GACA,GAAAuM,GAAA1J,IAEA7C,GAAAuO,KAAAvO,EAAAuO,MAAA,SAAAlH,GACA,MAAAA,GAAAxE,KAAA8N,SAAA1J,aAGApE,KAAAiT,UAAA,WACA,GAAApJ,GAAAH,EAAAuJ,SACA,iBAAAnS,GACA,GAAA9C,GAAAwG,CACA,OAAA1D,GAAAgM,UAAAvE,GAAA,KAAAvI,KAAAqR,eAAAvR,QAAAE,KAAAmQ,aAAAlS,SACAD,EAAAgC,KAAA+P,SAAA,EACA/R,GAAA,GAAAA,EAAAgC,KAAAsQ,MAAArS,SACAuG,EAAAxE,KAAA7C,QAAA6C,KAAAsQ,MAAAtS,IACAgC,KAAAoX,gBAAAtW,KACAd,KAAA4X,gBAAAza,EAAAuO,KAAAtN,MAAA4B,MAAAwE,KACAxE,KAAAqX,gBAAA,QAEAvW,GAAAnB,kBAIAkK,EAAAzL,MAAA4B,KAAAmH,iBAMA0G,KLiQM,SAASjS,EAAQC,EAASC,GMjvGhC,GAAA8I,GAAAE,GAgBA,SAAAC,EAAAC,GAEAJ,EAAA,EAAAE,EAAA,kBAAAF,KAAA2C,KAAA1L,EAAAC,EAAAD,EAAAD,GAAAgJ,IAAAK,SAAAH,IAAAlJ,EAAAC,QAAAiJ,KAMC9E,KAAA,WAWD,GAAAkF,GAAA,SAAAoL,EAAAxC,GACA9N,KAAAsQ,QACAtQ,KAAA8N,aAA+B6C,YAAA,GAU/BzL,GAAA2B,UAAAwd,SAAA,SAAAnhB,GAEA,GADAA,EAAAsT,EAAA/I,OAAAvK,GAAA,IAAAoK,gBACApK,MAAAjF,OAAA,QAEA,IAAAyI,GAAAQ,EAAA3B,EAAA+e,EACAjI,KACAkI,EAAArhB,EAAAuT,MAAA,KAEA,KAAA/P,EAAA,EAAAQ,EAAAqd,EAAAtmB,OAA+BiJ,EAAAR,EAAOA,IAAA,CAEtC,GADAnB,EAAAif,EAAAD,EAAA7d,IACA1G,KAAA8N,SAAA6C,WACA,IAAA2T,IAAAG,GACAA,EAAA/Z,eAAA4Z,KACA/e,IAAA1H,QAAA,GAAA2H,QAAA8e,EAAA,KAAAG,EAAAH,IAIAjI,GAAArV,MACA0d,OAAAH,EAAA7d,GACAnB,MAAA,GAAAC,QAAAD,EAAA,OAIA,MAAA8W,IAcAnX,EAAA2B,UAAA8d,SAAA,SAAAxb,EAAAhG,GACA,GAAAwhB,EAEAA,GADAC,EAAAzb,GACA7B,MAAAT,UAAAge,SAAA,SAAA1hB,GACA,OAAAuD,GAAA,EAAAQ,EAAAlH,KAAA/B,OAAoCiJ,EAAAR,EAAOA,IAC3CvD,EAAAnD,KAAA0G,KAAA1G,OAIA,SAAAmD,GACA,OAAAgS,KAAAnV,MACAA,KAAA0K,eAAAyK,IACAhS,EAAAnD,KAAAmV,KAAAnV,OAMA2kB,EAAAvmB,MAAA+K,GAAAhG,KAaA+B,EAAA2B,UAAAyT,iBAAA,SAAAzU,EAAA1I,GACA,GAAAuM,GAAAiR,EAAA0B,EAAAyI,CAEApb,GAAA1J,KACA6F,EAAA6D,EAAAqb,cAAAlf,EAAA1I,GACAkf,EAAAxW,EAAAwW,OACA1B,EAAA9U,EAAA1I,QAAAwd,OACAmK,EAAAzI,EAAApe,MAUA,IAAA+mB,GAAA,SAAAtmB,EAAAumB,GACA,GAAAlK,GAAAnV,CAEA,OAAAlH,IACAA,EAAA+O,OAAA/O,GAAA,IACAkH,EAAAlH,EAAAmH,OAAAof,EAAA1f,OACA,KAAAK,EAAA,GACAmV,EAAAkK,EAAAP,OAAAzmB,OAAAS,EAAAT,OACA,IAAA2H,IAAAmV,GAAA,IACAA,IANA,GAiBAmK,EAAA,WACA,GAAAC,GAAAxK,EAAA1c,MACA,OAAAknB,GAGA,IAAAA,EACA,SAAAF,EAAA3hB,GACA,MAAA0hB,GAAA1hB,EAAAqX,EAAA,IAAAsK,IAGA,SAAAA,EAAA3hB,GACA,OAAAoD,GAAA,EAAA0e,EAAA,EAA4BD,EAAAze,EAAiBA,IAC7C0e,GAAAJ,EAAA1hB,EAAAqX,EAAAjU,IAAAue,EAEA,OAAAG,GAAAD,GAXA,WAAuB,YAevB,OAAAL,GAGA,IAAAA,EACA,SAAAxhB,GACA,MAAA4hB,GAAA7I,EAAA,GAAA/Y,IAIA,QAAAuC,EAAA1I,QAAAyd,YACA,SAAAtX,GAEA,OADAyX,GACArU,EAAA,EAAA0e,EAAA,EAA4BN,EAAApe,EAAiBA,IAAA,CAE7C,GADAqU,EAAAmK,EAAA7I,EAAA3V,GAAApD,GACA,GAAAyX,EAAA,QACAqK,IAAArK,EAEA,MAAAqK,GAAAN,GAGA,SAAAxhB,GACA,OAAAoD,GAAA,EAAA0e,EAAA,EAA4BN,EAAApe,EAAiBA,IAC7C0e,GAAAF,EAAA7I,EAAA3V,GAAApD,EAEA,OAAA8hB,GAAAN,GAvBA,WAAsB,WAqCtB5f,EAAA2B,UAAAwe,gBAAA,SAAAxf,EAAA1I,GACA,GAAAuJ,GAAAQ,EAAAwC,EAAAgR,EAAAC,EAAA2K,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlL,CAqBA,IAnBA9Q,EAAA1J,KACA6F,EAAA6D,EAAAqb,cAAAlf,EAAA1I,GACAqd,GAAA3U,EAAA3C,OAAA/F,EAAAwoB,YAAAxoB,EAAAqd,KAUAiL,EAAA,SAAAtjB,EAAA/E,GACA,iBAAA+E,EAAA/E,EAAA2d,MACArR,EAAA4G,MAAAlT,EAAAH,IAAAkF,IAIAwY,KACAH,EACA,IAAA9T,EAAA,EAAAQ,EAAAsT,EAAAvc,OAA+BiJ,EAAAR,EAAOA,KACtCb,EAAA3C,OAAA,WAAAsX,EAAA9T,GAAAgU,QACAC,EAAA3T,KAAAwT,EAAA9T,GAOA,IAAAb,EAAA3C,MAAA,CAEA,IADAwiB,GAAA,EACAhf,EAAA,EAAAQ,EAAAyT,EAAA1c,OAAiCiJ,EAAAR,EAAOA,IACxC,cAAAiU,EAAAjU,GAAAgU,MAAA,CACAgL,GAAA,CACA,OAGAA,GACA/K,EAAAiL,SAAoBlL,MAAA,SAAAvM,UAAA,aAGpB,KAAAzH,EAAA,EAAAQ,EAAAyT,EAAA1c,OAAiCiJ,EAAAR,EAAOA,IACxC,cAAAiU,EAAAjU,GAAAgU,MAAA,CACAC,EAAAvT,OAAAV,EAAA,EACA,OAMA,IADA8e,KACA9e,EAAA,EAAAQ,EAAAyT,EAAA1c,OAAgCiJ,EAAAR,EAAOA,IACvC8e,EAAAxe,KAAA,SAAA2T,EAAAjU,GAAAyH,UAAA,KAKA,OADAmX,GAAA3K,EAAA1c,OACAqnB,EAEG,IAAAA,GACH5K,EAAAC,EAAA,GAAAD,MACA6K,EAAAC,EAAA,GACA,SAAAxJ,EAAAC,GACA,MAAAsJ,GAAAM,EACAJ,EAAA/K,EAAAsB,GACAyJ,EAAA/K,EAAAuB,MAIA,SAAAD,EAAAC,GACA,GAAAvV,GAAAtJ,EAAAsd,CACA,KAAAhU,EAAA,EAAe4e,EAAA5e,EAAkBA,IAMjC,GALAgU,EAAAC,EAAAjU,GAAAgU,MACAtd,EAAAooB,EAAA9e,GAAAmf,EACAJ,EAAA/K,EAAAsB,GACAyJ,EAAA/K,EAAAuB,IAEA,MAAA7e,EAEA,WArBA,MAmCA8H,EAAA2B,UAAAke,cAAA,SAAA7hB,EAAA/F,GACA,mBAAA+F,GAAA,MAAAA,EAEA/F,GAAAkR,KAAqBlR,EAErB,IAAA2oB,GAAA3oB,EAAAwd,OACAoL,EAAA5oB,EAAAqd,KACAwL,EAAA7oB,EAAAwoB,UAMA,OAJAG,KAAAlB,EAAAkB,KAAA3oB,EAAAwd,QAAAmL,IACAC,IAAAnB,EAAAmB,KAAA5oB,EAAAqd,MAAAuL,IACAC,IAAApB,EAAAoB,KAAA7oB,EAAAwoB,YAAAK,KAGA7oB,UACA+F,MAAAuK,OAAAvK,GAAA,IAAAoK,cACA+O,OAAArc,KAAAqkB,SAAAnhB,GACA+iB,MAAA,EACA3V,WA2BApL,EAAA2B,UAAAhB,OAAA,SAAA3C,EAAA/F,GACA,GAAA4d,GAAAlV,EACAqgB,EACAC,EAFAzc,EAAA1J,IAkCA,OA9BA6F,GAAA7F,KAAA+kB,cAAA7hB,EAAA/F,GACAA,EAAA0I,EAAA1I,QACA+F,EAAA2C,EAAA3C,MAGAijB,EAAAhpB,EAAA4d,OAAArR,EAAA4Q,iBAAAzU,GAGA3C,EAAAjF,OACAyL,EAAAib,SAAAjb,EAAA4G,MAAA,SAAAzN,EAAA5F,GACA8d,EAAAoL,EAAAtjB,IACA1F,EAAAojB,UAAA,GAAAxF,EAAA,IACAlV,EAAAyK,MAAAtJ,MAAwB+T,QAAA9d,SAIxByM,EAAAib,SAAAjb,EAAA4G,MAAA,SAAAzN,EAAA5F,GACA4I,EAAAyK,MAAAtJ,MAAuB+T,MAAA,EAAA9d,SAIvBipB,EAAAxc,EAAA2b,gBAAAxf,EAAA1I,GACA+oB,GAAArgB,EAAAyK,MAAAkK,KAAA0L,GAGArgB,EAAAogB,MAAApgB,EAAAyK,MAAArS,OACA,gBAAAd,GAAAipB,QACAvgB,EAAAyK,MAAAzK,EAAAyK,MAAAvS,MAAA,EAAAZ,EAAAipB,QAGAvgB,EAMA,IAAAggB,GAAA,SAAA7J,EAAAC,GACA,sBAAAD,IAAA,gBAAAC,GACAD,EAAAC,EAAA,EAAAA,EAAAD,EAAA,MAEAA,EAAAqK,EAAA5Y,OAAAuO,GAAA,KACAC,EAAAoK,EAAA5Y,OAAAwO,GAAA,KACAD,EAAAC,EAAA,EACAA,EAAAD,EAAA,GACA,IAGA3N,EAAA,SAAA2N,EAAAC,GACA,GAAAvV,GAAAQ,EAAAgU,EAAA/R,CACA,KAAAzC,EAAA,EAAAQ,EAAAC,UAAAlJ,OAAmCiJ,EAAAR,EAAOA,IAE1C,GADAyC,EAAAhC,UAAAT,GAEA,IAAAwU,IAAA/R,GACAA,EAAAuB,eAAAwQ,KACAc,EAAAd,GAAA/R,EAAA+R,GAIA,OAAAc,IAGAxF,EAAA,SAAAlN,GACA,OAAAA,EAAA,IAAAzL,QAAA,mBAGA2mB,EAAA,SAAAlb,GACA,OAAAA,EAAA,IAAAzL,QAAA,yBAA8C,SAG9C+mB,EAAAtd,MAAA6M,SAAA,mBAAAxV,MAAAwV,SAAA,SAAAhL,GACA,yBAAApM,OAAA8J,UAAAyf,SAAA/e,KAAA4B,IAGAsb,GACAzI,EAAA,sBACAuK,EAAA,YACAC,EAAA,WACA1lB,EAAA,oBACA4F,EAAA,gBACA+f,EAAA,QACAvf,EAAA,YACAwf,EAAA,qBACAC,EAAA,QACAC,EAAA,UACAC,EAAA,QACAC,EAAA,kBACAjN,EAAA,UACAkN,EAAA,aAGAV,EAAA,WACA,GAAA3f,GAAAQ,EAAAgU,EAAA8L,EACAC,EAAA,GACAC,IACA,KAAAhM,IAAAuJ,GACA,GAAAA,EAAA/Z,eAAAwQ,GAGA,IAFA8L,EAAAvC,EAAAvJ,GAAA3N,UAAA,EAAAkX,EAAAvJ,GAAAjd,OAAA,GACAgpB,GAAAD,EACAtgB,EAAA,EAAAQ,EAAA8f,EAAA/oB,OAAiCiJ,EAAAR,EAAOA,IACxCwgB,EAAAF,EAAAG,OAAAzgB,IAAAwU,CAIA,IAAAkM,GAAA,GAAA5hB,QAAA,IAAAyhB,EAAA,QACA,iBAAA3d,GACA,MAAAA,GAAAzL,QAAAupB,EAAA,SAAAC,GACA,MAAAH,GAAAG,KACI/Z,iBAQJ,OAAApI,MN0vGM,SAAStJ,EAAQC,EAASC,GO9sHhC,GAAA8I,GAAAE,GAgBA,SAAAC,EAAAC,GAEAJ,EAAA,EAAAE,EAAA,kBAAAF,KAAA2C,KAAA1L,EAAAC,EAAAD,EAAAD,GAAAgJ,IAAAK,SAAAH,IAAAlJ,EAAAC,QAAAiJ,KAMC9E,KAAA,WACD,GAAAmF,KAEAA,GAAAqC,MAAA,SAAA8f,GACAA,EAAArjB,WAiBAqjB,EAAAzgB,UAAAmK,kBAAA,SAAA/M,GACA,GAAAyC,GAAAQ,EAAAiO,EACAzL,EAAA1J,KACAunB,IASA,IAPA7d,EAAAzF,SACAoO,SACAvE,YACA0Z,aACAC,WAGAC,EAAAvT,QAAAlQ,GACA,IAAAyC,EAAA,EAAAQ,EAAAjD,EAAAhG,OAAmCiJ,EAAAR,EAAOA,IAC1C,gBAAAzC,GAAAyC,GACA6gB,EAAAvgB,KAAA/C,EAAAyC,KAEAgD,EAAAzF,QAAA6J,SAAA7J,EAAAyC,GAAAvE,MAAA8B,EAAAyC,GAAAvJ,QACAoqB,EAAAvgB,KAAA/C,EAAAyC,GAAAvE,WAGI,IAAA8B,EACJ,IAAAkR,IAAAlR,GACAA,EAAAyG,eAAAyK,KACAzL,EAAAzF,QAAA6J,SAAAqH,GAAAlR,EAAAkR,GACAoS,EAAAvgB,KAAAmO,GAKA,MAAAoS,EAAAtpB,QACAyL,EAAAie,QAAAJ,EAAAta,UAIAqa,EAAAzgB,UAAA+gB,WAAA,SAAAzlB,GACA,GAAAuH,GAAA1J,KACAiE,EAAAyF,EAAAzF,QACA4jB,EAAAP,EAAArjB,QAAA9B,EAEA,KAAAmlB,EAAArjB,QAAAyG,eAAAvI,GACA,SAAAhG,OAAA,mBAAAgG,EAAA,WAGA8B,GAAAujB,UAAArlB,IAAA,EACA8B,EAAAwjB,OAAAtlB,GAAA0lB,EAAAje,GAAAxL,MAAAsL,KAAAzF,QAAA6J,SAAA3L,SACA8B,EAAAoO,MAAArL,KAAA7E,IAQAmlB,EAAAzgB,UAAA8gB,QAAA,SAAAxlB,GACA,GAAAuH,GAAA1J,KACAiE,EAAAyF,EAAAzF,OAEA,KAAAyF,EAAAzF,QAAAwjB,OAAA/c,eAAAvI,GAAA,CACA,GAAA8B,EAAAujB,UAAArlB,GACA,SAAAhG,OAAA,oCAAAgG,EAAA,KAEAuH,GAAAke,WAAAzlB,GAGA,MAAA8B,GAAAwjB,OAAAtlB,IASAmlB,EAAAtF,OAAA,SAAA7f,EAAAyH,GACA0d,EAAArjB,QAAA9B,IACAA,OACAyH,OAKA,IAAA8d,IACAvT,QAAA7M,MAAA6M,SAAA,SAAA2T,GACA,yBAAA/qB,OAAA8J,UAAAyf,SAAA/e,KAAAugB,IAIA,OAAA3iB,MPqtHM,SAASvJ,EAAQC,EAASC,GQ11HhC,YRk2HC,SAAS0G,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GQp0H1F,QAASslB,GAAWllB,GAEhB,GAAIwC,GAAW9B,EAAA,WAAEvD,KAAKH,QAClBmoB,EAAiBC,EAAiBplB,KAClCqlB,EAAc7iB,EAAS/B,MAK3B,OAJG,gBAAkB4kB,IAAe3kB,EAAA,WAAE2kB,EAAYtlB,cAAc3E,SAC5D+pB,EAAiBzkB,EAAA,WAAE2kB,EAAYtlB,cAAc1F,QAG1CirB,EAAeH,EAAgBnlB,GAG1C,QAASulB,GAAavlB,EAAMC,GAExB,GAAIuC,GAAW9B,EAAA,WAAEvD,KAAKH,QAClBmoB,EAAiBC,EAAiBzjB,OAClC0jB,EAAc7iB,EAAS/B,MAK3B,OAJG,kBAAoB4kB,IAAe3kB,EAAA,WAAE2kB,EAAYllB,gBAAgB/E,SAChE+pB,EAAiBzkB,EAAA,WAAE2kB,EAAYllB,gBAAgB9F,QAG5CirB,EAAeH,EAAgBnlB,GAI1C,QAASwlB,GAAUnlB,EAAOC,GAEtB,GAAIhG,GAAUoG,EAAA,WAAEvD,KAAKH,QAAQyD,MAE7B,KAAIJ,EAAMjF,OACN,MAAOkF,IAGX,IAAImlB,KACJA,GAAMtoB,KAAK8N,SAASzJ,aAAenB,EAEnCK,EAAA,WAAEC,MACEC,IAAKtG,EAAQsG,IACbH,KAAMglB,EACN5kB,KAAMvG,EAAQwM,QAAU,MACxBpL,MAAO,WACH4E,KAEJS,QAAS,SAASC,GACdV,EAASU,MRoxHpB9G,OAAO0B,eAAe5C,EAAS,cAC3B6C,OAAO,GAKX,IAAIqF,GAAUjI,EQh2HD,GRk2HTyH,EAAWf,EAAuBuB,EQp2HvCjI,GAAQ,EAIR,IAAIysB,GACAL,EACA7iB,EACA8iB,EAAiBrsB,EAAQ,GAEzB0sB,GACAvkB,SAAU,iBACVC,SAAU,EACVC,WAAY,MACZC,WAAY,OACZC,YAAa,OACbC,QAAQ,EACRC,QACI1B,KAAQklB,EACRvjB,OAAU4jB,GAEdrnB,KAAMsnB,GAGNJ,GACAplB,KAAQ,2BACR2B,OAAU,2IAoDd+jB,GAAW,SAAC1pB,GACRwG,EAAW9B,EAAA,WAAE1E,GACbqpB,EAAc7iB,EAAS/B,MACvB,IAAImlB,GAAoBllB,EAAA,WAAE8K,UAAWma,EAAiBN,EACtD3kB,GAAA,WAAE1E,GAAS8F,UAAU8jB,IRs2HxB5sB,EAAQ,WQn2HM0sB,ERo2Hd3sB,EAAOC,QAAUA,EAAQ","file":"1.1.js","sourcesContent":["webpackJsonp([1,2],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./TemplateEngine\": 5,\n\t\t\"./TemplateEngine.js\": 5,\n\t\t\"./dropzoneUploader\": 6,\n\t\t\"./dropzoneUploader.js\": 6,\n\t\t\"./index\": 3,\n\t\t\"./index.js\": 3,\n\t\t\"./tagger\": 8,\n\t\t\"./tagger.js\": 8,\n\t\t\"./taxonomy\": 12,\n\t\t\"./taxonomy.js\": 12\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 4;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (html, options) {\n\t\tvar re = /<%(.+?)%>/g,\n\t\t    reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g,\n\t\t    code = 'with(obj) { var r=[];\\n',\n\t\t    cursor = 0,\n\t\t    result;\n\t\tvar add = function add(line, js) {\n\t\t\tjs ? code += line.match(reExp) ? line + '\\n' : 'r.push(' + line + ');\\n' : code += line != '' ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : '';\n\t\t\treturn add;\n\t\t};\n\t\tvar match = re.exec(html);\n\t\twhile (match) {\n\t\t\tadd(html.slice(cursor, match.index))(match[1], true);\n\t\t\tcursor = match.index + match[0].length;\n\t\t\tmatch = re.exec(html);\n\t\t}\n\t\tadd(html.substr(cursor, html.length - cursor));\n\t\tcode = (code + 'return r.join(\"\"); }').replace(/[\\r\\t\\n]/g, '');\n\t\ttry {\n\t\t\tresult = new Function('obj', code).apply(options, [options]);\n\t\t} catch (err) {\n\t\t\tconsole.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n\t\t}\n\t\treturn result;\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// Dependecies\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar $ = __webpack_require__(7);\n\t\n\tvar _module = function _module(element) {\n\t  var dropZone = $(element);\n\t  var $input = dropZone.find('input'); // TODO: Change this selector name\n\t  var $altInput = dropZone.find('[data-trigger=\"file\"]');\n\t\n\t  dropZone.on({\n\t    dragover: cbDragOver,\n\t    dragleave: cbDragLeave,\n\t    drop: cbDrop\n\t  });\n\t\n\t  $input.on({\n\t    change: cbChangeFile\n\t  });\n\t\n\t  $altInput.on({\n\t    click: cbTriggerFile\n\t  });\n\t\n\t  function cbDragOver(event) {\n\t    console.log('Make some when file is over of element');\n\t    dropZone.addClass('hover');\n\t    return false;\n\t  }\n\t\n\t  function cbDragLeave(event) {\n\t    console.log('Make some when file is leaved of element');\n\t    dropZone.removeClass('hover');\n\t    return false;\n\t  }\n\t\n\t  function cbDrop(event) {\n\t    var file = event.originalEvent.dataTransfer.files[0];\n\t\n\t    event.stopPropagation();\n\t    event.preventDefault();\n\t    dropZone.removeClass('hover');\n\t\n\t    readFile(file);\n\t    $input.files = file;\n\t    $input.val('');\n\t    return false;\n\t  }\n\t\n\t  function cbChangeFile(event) {\n\t    readFile(this.files[0]);\n\t    return false;\n\t  }\n\t\n\t  function cbTriggerFile(event) {\n\t    $input.trigger('click');\n\t  }\n\t};\n\t\n\tvar readFile = function readFile(file) {\n\t  var reader = new FileReader();\n\t\n\t  reader.onload = function (e) {\n\t    var image = $('<img/>').load(function () {\n\t      createPreview(file, getCanvasImage(this));\n\t    }).attr('src', e.target.result);\n\t  };\n\t  reader.readAsDataURL(file);\n\t};\n\t\n\tvar getCanvasImage = function getCanvasImage(image) {\n\t\n\t  var imgWidth = 500,\n\t      imgHeight = 500;\n\t\n\t  var canvas = document.createElement('canvas');\n\t  canvas.width = imgWidth;\n\t  canvas.height = imgHeight;\n\t\n\t  var ctx = canvas.getContext('2d');\n\t  ctx.drawImage(image, 0, 0, imgWidth, imgHeight);\n\t\n\t  return canvas.toDataURL('image/jpeg');\n\t};\n\t\n\tvar createPreview = function createPreview(file, newURL) {\n\t  var fileName = file.name.substr(0, file.name.lastIndexOf('.')); //subtract file extension\n\t  var filePath = newURL;\n\t  var image = '<img src=\"' + filePath + '\" class=\"img-responsive\" alt=\"' + fileName + '\"/>';\n\t  //append new image through jQuery Template\n\t  $('[data-content=\"file\"]').html(image).show();\n\t  $('.custom-file-content').hide();\n\t};\n\t\n\texports['default'] = _module;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */,\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _jquery = __webpack_require__(7);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\t__webpack_require__(9);\n\t\n\tvar _ref = [{\n\t    plugins: ['remove_button'],\n\t    maxItems: 5,\n\t    valueField: 'url',\n\t    labelField: 'name',\n\t    searchField: 'name',\n\t    create: false,\n\t    render: {\n\t        item: templateItem,\n\t        option: templateOption\n\t    },\n\t    load: loadUsers\n\t}, {}];\n\tvar suggest = _ref[0];\n\t\n\tvar tagger = function tagger(element) {\n\t    var type = (0, _jquery2['default'])(element).data('taggerType');\n\t    switch (type) {\n\t        case 'suggest':\n\t            (0, _jquery2['default'])(element).selectize(suggest);\n\t    }\n\t};\n\t\n\tfunction templateItem(item, escape) {\n\t    console.log('ITEM');\n\t    console.dir(this);\n\t    var name = item.name ? escape(item.name) : '';\n\t    return '<div>' + name + '</div>';\n\t}\n\tfunction templateOption(item, escape) {\n\t    console.log('OPTION');\n\t    console.dir(this.$input);\n\t    var name = item.name ? escape(item.name) : '';\n\t    return '<div class=\"item-float-notification\">\\n    <span><img src=\"http://placehold.it/20\" alt=\"' + name + '\"></span>\\n    <span>' + name + '</span>\\n  </div>';\n\t}\n\t\n\tfunction loadUsers(query, callback) {\n\t    var options = this.$wrapper.prev().data();\n\t    if (!query.length) {\n\t        return callback();\n\t    }\n\t    _jquery2['default'].ajax({\n\t        url: options.url,\n\t        type: 'GET',\n\t        data: {\n\t            criteria: query\n\t        },\n\t        error: function error() {\n\t            callback();\n\t        },\n\t        success: function success(res) {\n\t            callback(res.users);\n\t        }\n\t    });\n\t}\n\t\n\texports['default'] = tagger;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * selectize.js (v0.12.1)\n\t * Copyright (c) 2013–2015 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\t\n\t/*jshint curly:false */\n\t/*jshint browser:true */\n\t\n\t(function(root, factory) {\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7),__webpack_require__(10),__webpack_require__(11)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof exports === 'object') {\n\t\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t\t} else {\n\t\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t\t}\n\t}(this, function($, Sifter, MicroPlugin) {\n\t\t'use strict';\n\t\n\t\tvar highlight = function($element, pattern) {\n\t\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\t\n\t\t\tvar highlight = function(node) {\n\t\t\t\tvar skip = 0;\n\t\t\t\tif (node.nodeType === 3) {\n\t\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\t\tskip = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {\n\t\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn skip;\n\t\t\t};\n\t\t\n\t\t\treturn $element.each(function() {\n\t\t\t\thighlight(this);\n\t\t\t});\n\t\t};\n\t\t\n\t\tvar MicroEvent = function() {};\n\t\tMicroEvent.prototype = {\n\t\t\ton: function(event, fct){\n\t\t\t\tthis._events = this._events || {};\n\t\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\t\tthis._events[event].push(fct);\n\t\t\t},\n\t\t\toff: function(event, fct){\n\t\t\t\tvar n = arguments.length;\n\t\t\t\tif (n === 0) return delete this._events;\n\t\t\t\tif (n === 1) return delete this._events[event];\n\t\t\n\t\t\t\tthis._events = this._events || {};\n\t\t\t\tif (event in this._events === false) return;\n\t\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t\t},\n\t\t\ttrigger: function(event /* , args... */){\n\t\t\t\tthis._events = this._events || {};\n\t\t\t\tif (event in this._events === false) return;\n\t\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\t/**\n\t\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t\t *\n\t\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t\t *\n\t\t * @param {object} the object which will support MicroEvent\n\t\t */\n\t\tMicroEvent.mixin = function(destObject){\n\t\t\tvar props = ['on', 'off', 'trigger'];\n\t\t\tfor (var i = 0; i < props.length; i++){\n\t\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\t\n\t\tvar KEY_A         = 65;\n\t\tvar KEY_COMMA     = 188;\n\t\tvar KEY_RETURN    = 13;\n\t\tvar KEY_ESC       = 27;\n\t\tvar KEY_LEFT      = 37;\n\t\tvar KEY_UP        = 38;\n\t\tvar KEY_P         = 80;\n\t\tvar KEY_RIGHT     = 39;\n\t\tvar KEY_DOWN      = 40;\n\t\tvar KEY_N         = 78;\n\t\tvar KEY_BACKSPACE = 8;\n\t\tvar KEY_DELETE    = 46;\n\t\tvar KEY_SHIFT     = 16;\n\t\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\t\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\t\tvar KEY_TAB       = 9;\n\t\t\n\t\tvar TAG_SELECT    = 1;\n\t\tvar TAG_INPUT     = 2;\n\t\t\n\t\t// for now, android support in general is too spotty to support validity\n\t\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('form').validity;\n\t\t\n\t\tvar isset = function(object) {\n\t\t\treturn typeof object !== 'undefined';\n\t\t};\n\t\t\n\t\t/**\n\t\t * Converts a scalar to its best string representation\n\t\t * for hash keys and HTML attribute values.\n\t\t *\n\t\t * Transformations:\n\t\t *   'str'     -> 'str'\n\t\t *   null      -> ''\n\t\t *   undefined -> ''\n\t\t *   true      -> '1'\n\t\t *   false     -> '0'\n\t\t *   0         -> '0'\n\t\t *   1         -> '1'\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {string|null}\n\t\t */\n\t\tvar hash_key = function(value) {\n\t\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\t\treturn value + '';\n\t\t};\n\t\t\n\t\t/**\n\t\t * Escapes a string for use within HTML.\n\t\t *\n\t\t * @param {string} str\n\t\t * @returns {string}\n\t\t */\n\t\tvar escape_html = function(str) {\n\t\t\treturn (str + '')\n\t\t\t\t.replace(/&/g, '&amp;')\n\t\t\t\t.replace(/</g, '&lt;')\n\t\t\t\t.replace(/>/g, '&gt;')\n\t\t\t\t.replace(/\"/g, '&quot;');\n\t\t};\n\t\t\n\t\t/**\n\t\t * Escapes \"$\" characters in replacement strings.\n\t\t *\n\t\t * @param {string} str\n\t\t * @returns {string}\n\t\t */\n\t\tvar escape_replace = function(str) {\n\t\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t\t};\n\t\t\n\t\tvar hook = {};\n\t\t\n\t\t/**\n\t\t * Wraps `method` on `self` so that `fn`\n\t\t * is invoked before the original method.\n\t\t *\n\t\t * @param {object} self\n\t\t * @param {string} method\n\t\t * @param {function} fn\n\t\t */\n\t\thook.before = function(self, method, fn) {\n\t\t\tvar original = self[method];\n\t\t\tself[method] = function() {\n\t\t\t\tfn.apply(self, arguments);\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t};\n\t\t\n\t\t/**\n\t\t * Wraps `method` on `self` so that `fn`\n\t\t * is invoked after the original method.\n\t\t *\n\t\t * @param {object} self\n\t\t * @param {string} method\n\t\t * @param {function} fn\n\t\t */\n\t\thook.after = function(self, method, fn) {\n\t\t\tvar original = self[method];\n\t\t\tself[method] = function() {\n\t\t\t\tvar result = original.apply(self, arguments);\n\t\t\t\tfn.apply(self, arguments);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t};\n\t\t\n\t\t/**\n\t\t * Wraps `fn` so that it can only be invoked once.\n\t\t *\n\t\t * @param {function} fn\n\t\t * @returns {function}\n\t\t */\n\t\tvar once = function(fn) {\n\t\t\tvar called = false;\n\t\t\treturn function() {\n\t\t\t\tif (called) return;\n\t\t\t\tcalled = true;\n\t\t\t\tfn.apply(this, arguments);\n\t\t\t};\n\t\t};\n\t\t\n\t\t/**\n\t\t * Wraps `fn` so that it can only be called once\n\t\t * every `delay` milliseconds (invoked on the falling edge).\n\t\t *\n\t\t * @param {function} fn\n\t\t * @param {int} delay\n\t\t * @returns {function}\n\t\t */\n\t\tvar debounce = function(fn, delay) {\n\t\t\tvar timeout;\n\t\t\treturn function() {\n\t\t\t\tvar self = this;\n\t\t\t\tvar args = arguments;\n\t\t\t\twindow.clearTimeout(timeout);\n\t\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\t\tfn.apply(self, args);\n\t\t\t\t}, delay);\n\t\t\t};\n\t\t};\n\t\t\n\t\t/**\n\t\t * Debounce all fired events types listed in `types`\n\t\t * while executing the provided `fn`.\n\t\t *\n\t\t * @param {object} self\n\t\t * @param {array} types\n\t\t * @param {function} fn\n\t\t */\n\t\tvar debounce_events = function(self, types, fn) {\n\t\t\tvar type;\n\t\t\tvar trigger = self.trigger;\n\t\t\tvar event_args = {};\n\t\t\n\t\t\t// override trigger method\n\t\t\tself.trigger = function() {\n\t\t\t\tvar type = arguments[0];\n\t\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\t\tevent_args[type] = arguments;\n\t\t\t\t} else {\n\t\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t\t}\n\t\t\t};\n\t\t\n\t\t\t// invoke provided function\n\t\t\tfn.apply(self, []);\n\t\t\tself.trigger = trigger;\n\t\t\n\t\t\t// trigger queued events\n\t\t\tfor (type in event_args) {\n\t\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\t/**\n\t\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t\t *\n\t\t * @param {object} $parent - Parent element to listen on.\n\t\t * @param {string} event - Event name.\n\t\t * @param {string} selector - Descendant selector to filter by.\n\t\t * @param {function} fn - Event handler.\n\t\t */\n\t\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t\t$parent.on(event, selector, function(e) {\n\t\t\t\tvar child = e.target;\n\t\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\t\tchild = child.parentNode;\n\t\t\t\t}\n\t\t\t\te.currentTarget = child;\n\t\t\t\treturn fn.apply(this, [e]);\n\t\t\t});\n\t\t};\n\t\t\n\t\t/**\n\t\t * Determines the current selection within a text input control.\n\t\t * Returns an object containing:\n\t\t *   - start\n\t\t *   - length\n\t\t *\n\t\t * @param {object} input\n\t\t * @returns {object}\n\t\t */\n\t\tvar getSelection = function(input) {\n\t\t\tvar result = {};\n\t\t\tif ('selectionStart' in input) {\n\t\t\t\tresult.start = input.selectionStart;\n\t\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t\t} else if (document.selection) {\n\t\t\t\tinput.focus();\n\t\t\t\tvar sel = document.selection.createRange();\n\t\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\t\tresult.start = sel.text.length - selLen;\n\t\t\t\tresult.length = selLen;\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Copies CSS properties from one element to another.\n\t\t *\n\t\t * @param {object} $from\n\t\t * @param {object} $to\n\t\t * @param {array} properties\n\t\t */\n\t\tvar transferStyles = function($from, $to, properties) {\n\t\t\tvar i, n, styles = {};\n\t\t\tif (properties) {\n\t\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstyles = $from.css();\n\t\t\t}\n\t\t\t$to.css(styles);\n\t\t};\n\t\t\n\t\t/**\n\t\t * Measures the width of a string within a\n\t\t * parent element (in pixels).\n\t\t *\n\t\t * @param {string} str\n\t\t * @param {object} $parent\n\t\t * @returns {int}\n\t\t */\n\t\tvar measureString = function(str, $parent) {\n\t\t\tif (!str) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\n\t\t\tvar $test = $('<test>').css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: -99999,\n\t\t\t\tleft: -99999,\n\t\t\t\twidth: 'auto',\n\t\t\t\tpadding: 0,\n\t\t\t\twhiteSpace: 'pre'\n\t\t\t}).text(str).appendTo('body');\n\t\t\n\t\t\ttransferStyles($parent, $test, [\n\t\t\t\t'letterSpacing',\n\t\t\t\t'fontSize',\n\t\t\t\t'fontFamily',\n\t\t\t\t'fontWeight',\n\t\t\t\t'textTransform'\n\t\t\t]);\n\t\t\n\t\t\tvar width = $test.width();\n\t\t\t$test.remove();\n\t\t\n\t\t\treturn width;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Sets up an input to grow horizontally as the user\n\t\t * types. If the value is changed manually, you can\n\t\t * trigger the \"update\" handler to resize:\n\t\t *\n\t\t * $input.trigger('update');\n\t\t *\n\t\t * @param {object} $input\n\t\t */\n\t\tvar autoGrow = function($input) {\n\t\t\tvar currentWidth = null;\n\t\t\n\t\t\tvar update = function(e, options) {\n\t\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\t\tvar shift, character, selection;\n\t\t\t\te = e || window.event || {};\n\t\t\t\toptions = options || {};\n\t\t\n\t\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\t\n\t\t\t\tvalue = $input.val();\n\t\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\t\tprintable = (\n\t\t\t\t\t\t(keyCode >= 97 && keyCode <= 122) || // a-z\n\t\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)  || // A-Z\n\t\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t\t);\n\t\t\n\t\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (printable) {\n\t\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\t\tvalue += character;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\t\tif (!value && placeholder) {\n\t\t\t\t\tvalue = placeholder;\n\t\t\t\t}\n\t\t\n\t\t\t\twidth = measureString(value, $input) + 4;\n\t\t\t\tif (width !== currentWidth) {\n\t\t\t\t\tcurrentWidth = width;\n\t\t\t\t\t$input.width(width);\n\t\t\t\t\t$input.triggerHandler('resize');\n\t\t\t\t}\n\t\t\t};\n\t\t\n\t\t\t$input.on('keydown keyup update blur', update);\n\t\t\tupdate();\n\t\t};\n\t\t\n\t\tvar Selectize = function($input, settings) {\n\t\t\tvar key, i, n, dir, input, self = this;\n\t\t\tinput = $input[0];\n\t\t\tinput.selectize = self;\n\t\t\n\t\t\t// detect rtl environment\n\t\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\t\n\t\t\t// setup default state\n\t\t\t$.extend(self, {\n\t\t\t\torder            : 0,\n\t\t\t\tsettings         : settings,\n\t\t\t\t$input           : $input,\n\t\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\t\trtl              : /rtl/i.test(dir),\n\t\t\n\t\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\t\thighlightedValue : null,\n\t\t\t\tisOpen           : false,\n\t\t\t\tisDisabled       : false,\n\t\t\t\tisRequired       : $input.is('[required]'),\n\t\t\t\tisInvalid        : false,\n\t\t\t\tisLocked         : false,\n\t\t\t\tisFocused        : false,\n\t\t\t\tisInputHidden    : false,\n\t\t\t\tisSetup          : false,\n\t\t\t\tisShiftDown      : false,\n\t\t\t\tisCmdDown        : false,\n\t\t\t\tisCtrlDown       : false,\n\t\t\t\tignoreFocus      : false,\n\t\t\t\tignoreBlur       : false,\n\t\t\t\tignoreHover      : false,\n\t\t\t\thasOptions       : false,\n\t\t\t\tcurrentResults   : null,\n\t\t\t\tlastValue        : '',\n\t\t\t\tcaretPos         : 0,\n\t\t\t\tloading          : 0,\n\t\t\t\tloadedSearches   : {},\n\t\t\n\t\t\t\t$activeOption    : null,\n\t\t\t\t$activeItems     : [],\n\t\t\n\t\t\t\toptgroups        : {},\n\t\t\t\toptions          : {},\n\t\t\t\tuserOptions      : {},\n\t\t\t\titems            : [],\n\t\t\t\trenderCache      : {},\n\t\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t\t});\n\t\t\n\t\t\t// search system\n\t\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\t\n\t\t\t// build options table\n\t\t\tif (self.settings.options) {\n\t\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t\t}\n\t\t\t\tdelete self.settings.options;\n\t\t\t}\n\t\t\n\t\t\t// build optgroup table\n\t\t\tif (self.settings.optgroups) {\n\t\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t\t}\n\t\t\t\tdelete self.settings.optgroups;\n\t\t\t}\n\t\t\n\t\t\t// option-dependent defaults\n\t\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t\t}\n\t\t\n\t\t\tself.initializePlugins(self.settings.plugins);\n\t\t\tself.setupCallbacks();\n\t\t\tself.setupTemplates();\n\t\t\tself.setup();\n\t\t};\n\t\t\n\t\t// mixins\n\t\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\t\n\t\tMicroEvent.mixin(Selectize);\n\t\tMicroPlugin.mixin(Selectize);\n\t\t\n\t\t// methods\n\t\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\t\n\t\t$.extend(Selectize.prototype, {\n\t\t\n\t\t\t/**\n\t\t\t * Creates all elements and sets up event bindings.\n\t\t\t */\n\t\t\tsetup: function() {\n\t\t\t\tvar self      = this;\n\t\t\t\tvar settings  = self.settings;\n\t\t\t\tvar eventNS   = self.eventNS;\n\t\t\t\tvar $window   = $(window);\n\t\t\t\tvar $document = $(document);\n\t\t\t\tvar $input    = self.$input;\n\t\t\n\t\t\t\tvar $wrapper;\n\t\t\t\tvar $control;\n\t\t\t\tvar $control_input;\n\t\t\t\tvar $dropdown;\n\t\t\t\tvar $dropdown_content;\n\t\t\t\tvar $dropdown_parent;\n\t\t\t\tvar inputMode;\n\t\t\t\tvar timeout_blur;\n\t\t\t\tvar timeout_focus;\n\t\t\t\tvar classes;\n\t\t\t\tvar classes_plugins;\n\t\t\n\t\t\t\tinputMode         = self.settings.mode;\n\t\t\t\tclasses           = $input.attr('class') || '';\n\t\t\n\t\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\t\n\t\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t\t$dropdown.addClass(classes);\n\t\t\t\t}\n\t\t\n\t\t\t\t$wrapper.css({\n\t\t\t\t\twidth: $input[0].style.width\n\t\t\t\t});\n\t\t\n\t\t\t\tif (self.plugins.names.length) {\n\t\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t\t}\n\t\t\n\t\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t\t}\n\t\t\n\t\t\t\tif (self.settings.placeholder) {\n\t\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t\t}\n\t\t\n\t\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t\t}\n\t\t\n\t\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t\t}\n\t\t\n\t\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t\t}\n\t\t\n\t\t\t\tself.$wrapper          = $wrapper;\n\t\t\t\tself.$control          = $control;\n\t\t\t\tself.$control_input    = $control_input;\n\t\t\t\tself.$dropdown         = $dropdown;\n\t\t\t\tself.$dropdown_content = $dropdown_content;\n\t\t\n\t\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\t\tautoGrow($control_input);\n\t\t\n\t\t\t\t$control.on({\n\t\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t\t});\n\t\t\n\t\t\t\t$control_input.on({\n\t\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t\t});\n\t\t\n\t\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t\t});\n\t\t\n\t\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t\t});\n\t\t\n\t\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// blur on click outside\n\t\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\n\t\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\t\tself.ignoreHover = false;\n\t\t\t\t});\n\t\t\n\t\t\t\t// store original children and tab index so that they can be\n\t\t\t\t// restored when the destroy() method is called.\n\t\t\t\tthis.revertSettings = {\n\t\t\t\t\t$children : $input.children().detach(),\n\t\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t\t};\n\t\t\n\t\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\t\n\t\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\t\tself.setValue(settings.items);\n\t\t\t\t\tdelete settings.items;\n\t\t\t\t}\n\t\t\n\t\t\t\t// feature detect for the validation API\n\t\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\t\tself.refreshState();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\n\t\t\t\tself.updateOriginalInput();\n\t\t\t\tself.refreshItems();\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.isSetup = true;\n\t\t\n\t\t\t\tif ($input.is(':disabled')) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\n\t\t\t\tself.on('change', this.onChange);\n\t\t\n\t\t\t\t$input.data('selectize', self);\n\t\t\t\t$input.addClass('selectized');\n\t\t\t\tself.trigger('initialize');\n\t\t\n\t\t\t\t// preload options\n\t\t\t\tif (settings.preload === true) {\n\t\t\t\t\tself.onSearchChange('');\n\t\t\t\t}\n\t\t\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Sets up default rendering functions.\n\t\t\t */\n\t\t\tsetupTemplates: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tvar field_label = self.settings.labelField;\n\t\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\t\n\t\t\t\tvar templates = {\n\t\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t\t},\n\t\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t\t},\n\t\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t\t},\n\t\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t\t},\n\t\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\n\t\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Maps fired events to callbacks provided\n\t\t\t * in the settings used when creating the control.\n\t\t\t */\n\t\t\tsetupCallbacks: function() {\n\t\t\t\tvar key, fn, callbacks = {\n\t\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t\t'change'          : 'onChange',\n\t\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t\t'type'            : 'onType',\n\t\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t\t'blur'            : 'onBlur'\n\t\t\t\t};\n\t\t\n\t\t\t\tfor (key in callbacks) {\n\t\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the main control element\n\t\t\t * has a click event.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @return {boolean}\n\t\t\t */\n\t\t\tonClick: function(e) {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t\t// is ignored unless invoked within a click event)\n\t\t\t\tif (!self.isFocused) {\n\t\t\t\t\tself.focus();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the main control element\n\t\t\t * has a mouse down event.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @return {boolean}\n\t\t\t */\n\t\t\tonMouseDown: function(e) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\t\tvar $target = $(e.target);\n\t\t\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// give control focus\n\t\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\t\tself.focus();\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the value of the control has been changed.\n\t\t\t * This should propagate the event to the original DOM\n\t\t\t * input / select element.\n\t\t\t */\n\t\t\tonChange: function() {\n\t\t\t\tthis.$input.trigger('change');\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> paste.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonPaste: function(e) {\n\t\t\t\tvar self = this;\n\t\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t\t\t// input and create Items for each separate value\n\t\t\t\t\tif (self.settings.splitOn) {\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tvar splitInput = $.trim(self.$control_input.val() || '').split(self.settings.splitOn);\n\t\t\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> keypress.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonKeyPress: function(e) {\n\t\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\t\tthis.createItem();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> keydown.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonKeyDown: function(e) {\n\t\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.isLocked) {\n\t\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tswitch (e.keyCode) {\n\t\t\t\t\tcase KEY_A:\n\t\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase KEY_ESC:\n\t\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tself.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_N:\n\t\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\t\tself.open();\n\t\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_P:\n\t\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\t\tcase KEY_UP:\n\t\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_TAB:\n\t\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\n\t\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> keyup.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonKeyUp: function(e) {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\t\tvar value = self.$control_input.val() || '';\n\t\t\t\tif (self.lastValue !== value) {\n\t\t\t\t\tself.lastValue = value;\n\t\t\t\t\tself.onSearchChange(value);\n\t\t\t\t\tself.refreshOptions();\n\t\t\t\t\tself.trigger('type', value);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Invokes the user-provide option provider / loader.\n\t\t\t *\n\t\t\t * Note: this function is debounced in the Selectize\n\t\t\t * constructor (by `settings.loadDelay` milliseconds)\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t */\n\t\t\tonSearchChange: function(value) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar fn = self.settings.load;\n\t\t\t\tif (!fn) return;\n\t\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\t\tself.loadedSearches[value] = true;\n\t\t\t\tself.load(function(callback) {\n\t\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t\t});\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> focus.\n\t\t\t *\n\t\t\t * @param {object} e (optional)\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonFocus: function(e) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar wasFocused = self.isFocused;\n\t\t\n\t\t\t\tif (self.isDisabled) {\n\t\t\t\t\tself.blur();\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\n\t\t\t\tif (self.ignoreFocus) return;\n\t\t\t\tself.isFocused = true;\n\t\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\t\n\t\t\t\tif (!wasFocused) self.trigger('focus');\n\t\t\n\t\t\t\tif (!self.$activeItems.length) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t\t}\n\t\t\n\t\t\t\tself.refreshState();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> blur.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @param {Element} dest\n\t\t\t */\n\t\t\tonBlur: function(e, dest) {\n\t\t\t\tvar self = this;\n\t\t\t\tif (!self.isFocused) return;\n\t\t\t\tself.isFocused = false;\n\t\t\n\t\t\t\tif (self.ignoreFocus) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\t\tself.ignoreBlur = true;\n\t\t\t\t\tself.onFocus(e);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tvar deactivate = function() {\n\t\t\t\t\tself.close();\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setActiveOption(null);\n\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\tself.refreshState();\n\t\t\n\t\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\t\t(dest || document.body).focus();\n\t\t\n\t\t\t\t\tself.ignoreFocus = false;\n\t\t\t\t\tself.trigger('blur');\n\t\t\t\t};\n\t\t\n\t\t\t\tself.ignoreFocus = true;\n\t\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t\t} else {\n\t\t\t\t\tdeactivate();\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the user rolls over\n\t\t\t * an option in the autocomplete dropdown menu.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonOptionHover: function(e) {\n\t\t\t\tif (this.ignoreHover) return;\n\t\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the user clicks on an option\n\t\t\t * in the autocomplete dropdown menu.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonOptionSelect: function(e) {\n\t\t\t\tvar value, $target, $option, self = this;\n\t\t\n\t\t\t\tif (e.preventDefault) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\n\t\t\t\t$target = $(e.currentTarget);\n\t\t\t\tif ($target.hasClass('create')) {\n\t\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\t\tself.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\t\tself.addItem(value);\n\t\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\t\tself.close();\n\t\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the user clicks on an item\n\t\t\t * that has been selected.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonItemSelect: function(e) {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.isLocked) return;\n\t\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Invokes the provided method that provides\n\t\t\t * results to a callback---which are then added\n\t\t\t * as options to the control.\n\t\t\t *\n\t\t\t * @param {function} fn\n\t\t\t */\n\t\t\tload: function(fn) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\t\n\t\t\t\tself.loading++;\n\t\t\t\tfn.apply(self, [function(results) {\n\t\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\t\tif (results && results.length) {\n\t\t\t\t\t\tself.addOption(results);\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t\t}\n\t\t\t\t\tif (!self.loading) {\n\t\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t\t}\n\t\t\t\t\tself.trigger('load', results);\n\t\t\t\t}]);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Sets the input field of the control to the specified value.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t */\n\t\t\tsetTextboxValue: function(value) {\n\t\t\t\tvar $input = this.$control_input;\n\t\t\t\tvar changed = $input.val() !== value;\n\t\t\t\tif (changed) {\n\t\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\t\tthis.lastValue = value;\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns the value of the control. If multiple items\n\t\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t\t * an array. If only one item can be selected, this\n\t\t\t * returns a string.\n\t\t\t *\n\t\t\t * @returns {mixed}\n\t\t\t */\n\t\t\tgetValue: function() {\n\t\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\t\treturn this.items;\n\t\t\t\t} else {\n\t\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Resets the selected items to the given value.\n\t\t\t *\n\t\t\t * @param {mixed} value\n\t\t\t */\n\t\t\tsetValue: function(value, silent) {\n\t\t\t\tvar events = silent ? [] : ['change'];\n\t\t\n\t\t\t\tdebounce_events(this, events, function() {\n\t\t\t\t\tthis.clear(silent);\n\t\t\t\t\tthis.addItems(value, silent);\n\t\t\t\t});\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Sets the selected item.\n\t\t\t *\n\t\t\t * @param {object} $item\n\t\t\t * @param {object} e (optional)\n\t\t\t */\n\t\t\tsetActiveItem: function($item, e) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar eventName;\n\t\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\t\tvar $last;\n\t\t\n\t\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t\t$item = $($item);\n\t\t\n\t\t\t\t// clear the active selection\n\t\t\t\tif (!$item.length) {\n\t\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\t\tself.$activeItems = [];\n\t\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t\tself.showInput();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\t// modify selection\n\t\t\t\teventName = e && e.type.toLowerCase();\n\t\t\n\t\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\t\tif (begin > end) {\n\t\t\t\t\t\tswap  = begin;\n\t\t\t\t\t\tbegin = end;\n\t\t\t\t\t\tend   = swap;\n\t\t\t\t\t}\n\t\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t\t}\n\t\t\n\t\t\t\t// ensure control has focus\n\t\t\t\tself.hideInput();\n\t\t\t\tif (!this.isFocused) {\n\t\t\t\t\tself.focus();\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Sets the selected item in the dropdown menu\n\t\t\t * of available options.\n\t\t\t *\n\t\t\t * @param {object} $object\n\t\t\t * @param {boolean} scroll\n\t\t\t * @param {boolean} animate\n\t\t\t */\n\t\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\t\tvar height_menu, height_item, y;\n\t\t\t\tvar scroll_top, scroll_bottom;\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\t\tself.$activeOption = null;\n\t\t\n\t\t\t\t$option = $($option);\n\t\t\t\tif (!$option.length) return;\n\t\t\n\t\t\t\tself.$activeOption = $option.addClass('active');\n\t\t\n\t\t\t\tif (scroll || !isset(scroll)) {\n\t\t\n\t\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\t\tscroll_top    = y;\n\t\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\t\n\t\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Selects all items (CTRL + A).\n\t\t\t */\n\t\t\tselectAll: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tif (self.settings.mode === 'single') return;\n\t\t\n\t\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\t\tif (self.$activeItems.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.focus();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Hides the input element out of view, while\n\t\t\t * retaining its focus.\n\t\t\t */\n\t\t\thideInput: function() {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\t\tself.isInputHidden = true;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Restores input visibility.\n\t\t\t */\n\t\t\tshowInput: function() {\n\t\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\t\tthis.isInputHidden = false;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Gives the control focus.\n\t\t\t */\n\t\t\tfocus: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tif (self.isDisabled) return;\n\t\t\n\t\t\t\tself.ignoreFocus = true;\n\t\t\t\tself.$control_input[0].focus();\n\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\tself.ignoreFocus = false;\n\t\t\t\t\tself.onFocus();\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Forces the control out of focus.\n\t\t\t *\n\t\t\t * @param {Element} dest\n\t\t\t */\n\t\t\tblur: function(dest) {\n\t\t\t\tthis.$control_input[0].blur();\n\t\t\t\tthis.onBlur(null, dest);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns a function that scores an object\n\t\t\t * to show how good of a match it is to the\n\t\t\t * provided query.\n\t\t\t *\n\t\t\t * @param {string} query\n\t\t\t * @param {object} options\n\t\t\t * @return {function}\n\t\t\t */\n\t\t\tgetScoreFunction: function(query) {\n\t\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns search options for sifter (the system\n\t\t\t * for scoring and sorting results).\n\t\t\t *\n\t\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t\t * @return {object}\n\t\t\t */\n\t\t\tgetSearchOptions: function() {\n\t\t\t\tvar settings = this.settings;\n\t\t\t\tvar sort = settings.sortField;\n\t\t\t\tif (typeof sort === 'string') {\n\t\t\t\t\tsort = [{field: sort}];\n\t\t\t\t}\n\t\t\n\t\t\t\treturn {\n\t\t\t\t\tfields      : settings.searchField,\n\t\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\t\tsort        : sort\n\t\t\t\t};\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Searches through available options and returns\n\t\t\t * a sorted array of matches.\n\t\t\t *\n\t\t\t * Returns an object containing:\n\t\t\t *\n\t\t\t *   - query {string}\n\t\t\t *   - tokens {array}\n\t\t\t *   - total {int}\n\t\t\t *   - items {array}\n\t\t\t *\n\t\t\t * @param {string} query\n\t\t\t * @returns {object}\n\t\t\t */\n\t\t\tsearch: function(query) {\n\t\t\t\tvar i, value, score, result, calculateScore;\n\t\t\t\tvar self     = this;\n\t\t\t\tvar settings = self.settings;\n\t\t\t\tvar options  = this.getSearchOptions();\n\t\t\n\t\t\t\t// validate user-provided result scoring function\n\t\t\t\tif (settings.score) {\n\t\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// perform search\n\t\t\t\tif (query !== self.lastQuery) {\n\t\t\t\t\tself.lastQuery = query;\n\t\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\t\tself.currentResults = result;\n\t\t\t\t} else {\n\t\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t\t}\n\t\t\n\t\t\t\t// filter out selected items\n\t\t\t\tif (settings.hideSelected) {\n\t\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Refreshes the list of available options shown\n\t\t\t * in the autocomplete dropdown menu.\n\t\t\t *\n\t\t\t * @param {boolean} triggerDropdown\n\t\t\t */\n\t\t\trefreshOptions: function(triggerDropdown) {\n\t\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\t\tvar $active, $active_before, $create;\n\t\t\n\t\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\t\ttriggerDropdown = true;\n\t\t\t\t}\n\t\t\n\t\t\t\tvar self              = this;\n\t\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\t\tvar results           = self.search(query);\n\t\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\t\n\t\t\t\t// build markup\n\t\t\t\tn = results.items.length;\n\t\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t\t}\n\t\t\n\t\t\t\t// render and group available options individually\n\t\t\t\tgroups = {};\n\t\t\t\tgroups_order = [];\n\t\t\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\t\toption_html = self.render('option', option);\n\t\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\t\n\t\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\t\tgroups[optgroup] = [];\n\t\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgroups[optgroup].push(option_html);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// sort optgroups\n\t\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\n\t\t\t\t// render optgroup headers & join groups\n\t\t\t\thtml = [];\n\t\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\t\toptgroup = groups_order[i];\n\t\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].length) {\n\t\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\t\thtml_children = self.render('optgroup_header', self.optgroups[optgroup]) || '';\n\t\t\t\t\t\thtml_children += groups[optgroup].join('');\n\t\t\t\t\t\thtml.push(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\t\thtml: html_children\n\t\t\t\t\t\t})));\n\t\t\t\t\t} else {\n\t\t\t\t\t\thtml.push(groups[optgroup].join(''));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t$dropdown_content.html(html.join(''));\n\t\t\n\t\t\t\t// highlight matching terms inline\n\t\t\t\tif (self.settings.highlight && results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// add \"selected\" class to selected options\n\t\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// add create option\n\t\t\t\thas_create_option = self.canCreate(query);\n\t\t\t\tif (has_create_option) {\n\t\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t\t}\n\t\t\n\t\t\t\t// activate\n\t\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\t\tif (self.hasOptions) {\n\t\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$active = $create;\n\t\t\t\t\t}\n\t\t\t\t\tself.setActiveOption($active);\n\t\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t\t} else {\n\t\t\t\t\tself.setActiveOption(null);\n\t\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Adds an available option. If it already exists,\n\t\t\t * nothing will happen. Note: this does not refresh\n\t\t\t * the options list dropdown (use `refreshOptions`\n\t\t\t * for that).\n\t\t\t *\n\t\t\t * Usage:\n\t\t\t *\n\t\t\t *   this.addOption(data)\n\t\t\t *\n\t\t\t * @param {object|array} data\n\t\t\t */\n\t\t\taddOption: function(data) {\n\t\t\t\tvar i, n, value, self = this;\n\t\t\n\t\t\t\tif ($.isArray(data)) {\n\t\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\t\tself.userOptions[value] = true;\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Registers an option to the pool of options.\n\t\t\t *\n\t\t\t * @param {object} data\n\t\t\t * @return {boolean|string}\n\t\t\t */\n\t\t\tregisterOption: function(data) {\n\t\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\t\tif (!key || this.options.hasOwnProperty(key)) return false;\n\t\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\t\tthis.options[key] = data;\n\t\t\t\treturn key;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Registers an option group to the pool of option groups.\n\t\t\t *\n\t\t\t * @param {object} data\n\t\t\t * @return {boolean|string}\n\t\t\t */\n\t\t\tregisterOptionGroup: function(data) {\n\t\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\t\tif (!key) return false;\n\t\t\n\t\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\t\tthis.optgroups[key] = data;\n\t\t\t\treturn key;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Registers a new optgroup for options\n\t\t\t * to be bucketed into.\n\t\t\t *\n\t\t\t * @param {string} id\n\t\t\t * @param {object} data\n\t\t\t */\n\t\t\taddOptionGroup: function(id, data) {\n\t\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Removes an existing option group.\n\t\t\t *\n\t\t\t * @param {string} id\n\t\t\t */\n\t\t\tremoveOptionGroup: function(id) {\n\t\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\t\tdelete this.optgroups[id];\n\t\t\t\t\tthis.renderCache = {};\n\t\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Clears all existing option groups.\n\t\t\t */\n\t\t\tclearOptionGroups: function() {\n\t\t\t\tthis.optgroups = {};\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_clear');\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Updates an option available for selection. If\n\t\t\t * it is visible in the selected items or options\n\t\t\t * dropdown, it will be re-rendered automatically.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @param {object} data\n\t\t\t */\n\t\t\tupdateOption: function(value, data) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar $item, $item_new;\n\t\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\t\n\t\t\t\tvalue     = hash_key(value);\n\t\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\t\n\t\t\t\t// sanity checks\n\t\t\t\tif (value === null) return;\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\t\n\t\t\t\torder_old = self.options[value].$order;\n\t\t\n\t\t\t\t// update references\n\t\t\t\tif (value_new !== value) {\n\t\t\t\t\tdelete self.options[value];\n\t\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdata.$order = data.$order || order_old;\n\t\t\t\tself.options[value_new] = data;\n\t\t\n\t\t\t\t// invalidate render cache\n\t\t\t\tcache_items = self.renderCache['item'];\n\t\t\t\tcache_options = self.renderCache['option'];\n\t\t\n\t\t\t\tif (cache_items) {\n\t\t\t\t\tdelete cache_items[value];\n\t\t\t\t\tdelete cache_items[value_new];\n\t\t\t\t}\n\t\t\t\tif (cache_options) {\n\t\t\t\t\tdelete cache_options[value];\n\t\t\t\t\tdelete cache_options[value_new];\n\t\t\t\t}\n\t\t\n\t\t\t\t// update the item if it's selected\n\t\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t\t$item = self.getItem(value);\n\t\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t\t$item.replaceWith($item_new);\n\t\t\t\t}\n\t\t\n\t\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\t\tself.lastQuery = null;\n\t\t\n\t\t\t\t// update dropdown contents\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.refreshOptions(false);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Removes a single option.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @param {boolean} silent\n\t\t\t */\n\t\t\tremoveOption: function(value, silent) {\n\t\t\t\tvar self = this;\n\t\t\t\tvalue = hash_key(value);\n\t\t\n\t\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\t\tif (cache_items) delete cache_items[value];\n\t\t\t\tif (cache_options) delete cache_options[value];\n\t\t\n\t\t\t\tdelete self.userOptions[value];\n\t\t\t\tdelete self.options[value];\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_remove', value);\n\t\t\t\tself.removeItem(value, silent);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Clears all options.\n\t\t\t */\n\t\t\tclearOptions: function() {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tself.loadedSearches = {};\n\t\t\t\tself.userOptions = {};\n\t\t\t\tself.renderCache = {};\n\t\t\t\tself.options = self.sifter.items = {};\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_clear');\n\t\t\t\tself.clear();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns the jQuery element of the option\n\t\t\t * matching the given value.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @returns {object}\n\t\t\t */\n\t\t\tgetOption: function(value) {\n\t\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns the jQuery element of the next or\n\t\t\t * previous selectable option.\n\t\t\t *\n\t\t\t * @param {object} $option\n\t\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t\t * @return {object}\n\t\t\t */\n\t\t\tgetAdjacentOption: function($option, direction) {\n\t\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\t\tvar index    = $options.index($option) + direction;\n\t\t\n\t\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Finds the first element with a \"data-value\" attribute\n\t\t\t * that matches the given value.\n\t\t\t *\n\t\t\t * @param {mixed} value\n\t\t\t * @param {object} $els\n\t\t\t * @return {object}\n\t\t\t */\n\t\t\tgetElementWithValue: function(value, $els) {\n\t\t\t\tvalue = hash_key(value);\n\t\t\n\t\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\treturn $();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns the jQuery element of the item\n\t\t\t * matching the given value.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @returns {object}\n\t\t\t */\n\t\t\tgetItem: function(value) {\n\t\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t\t * at the current caret position.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @param {boolean} silent\n\t\t\t */\n\t\t\taddItems: function(values, silent) {\n\t\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * \"Selects\" an item. Adds it to the list\n\t\t\t * at the current caret position.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @param {boolean} silent\n\t\t\t */\n\t\t\taddItem: function(value, silent) {\n\t\t\t\tvar events = silent ? [] : ['change'];\n\t\t\n\t\t\t\tdebounce_events(this, events, function() {\n\t\t\t\t\tvar $item, $option, $options;\n\t\t\t\t\tvar self = this;\n\t\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\t\tvalue = hash_key(value);\n\t\t\n\t\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\t\n\t\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\t\twasFull = self.isFull();\n\t\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\t\tself.insertAtCaret($item);\n\t\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\t\tself.refreshState();\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\t\n\t\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\t\tself.close();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Removes the selected item matching\n\t\t\t * the provided value.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t */\n\t\t\tremoveItem: function(value, silent) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar $item, i, idx;\n\t\t\n\t\t\t\t$item = (typeof value === 'object') ? value : self.getItem(value);\n\t\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\t\ti = self.items.indexOf(value);\n\t\t\n\t\t\t\tif (i !== -1) {\n\t\t\t\t\t$item.remove();\n\t\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tself.items.splice(i, 1);\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tself.refreshState();\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Invokes the `create` method provided in the\n\t\t\t * selectize options that should provide the data\n\t\t\t * for the new item, given the user input.\n\t\t\t *\n\t\t\t * Once this completes, it will be added\n\t\t\t * to the item list.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @param {boolean} [triggerDropdown]\n\t\t\t * @param {function} [callback]\n\t\t\t * @return {boolean}\n\t\t\t */\n\t\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\t\tvar self  = this;\n\t\t\t\tvar caret = self.caretPos;\n\t\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\t\n\t\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\t\n\t\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\t\ttriggerDropdown = true;\n\t\t\t\t}\n\t\t\n\t\t\t\tif (!self.canCreate(input)) {\n\t\t\t\t\tcallback();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\n\t\t\t\tself.lock();\n\t\t\n\t\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\t\tvar data = {};\n\t\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\t\t\n\t\t\t\tvar create = once(function(data) {\n\t\t\t\t\tself.unlock();\n\t\t\n\t\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\t\tif (typeof value !== 'string') return callback();\n\t\t\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addOption(data);\n\t\t\t\t\tself.setCaret(caret);\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\t\tcallback(data);\n\t\t\t\t});\n\t\t\n\t\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\t\tcreate(output);\n\t\t\t\t}\n\t\t\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Re-renders the selected item lists.\n\t\t\t */\n\t\t\trefreshItems: function() {\n\t\t\t\tthis.lastQuery = null;\n\t\t\n\t\t\t\tif (this.isSetup) {\n\t\t\t\t\tthis.addItem(this.items);\n\t\t\t\t}\n\t\t\n\t\t\t\tthis.refreshState();\n\t\t\t\tthis.updateOriginalInput();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Updates all state-dependent attributes\n\t\t\t * and CSS classes.\n\t\t\t */\n\t\t\trefreshState: function() {\n\t\t\t\tvar invalid, self = this;\n\t\t\t\tif (self.isRequired) {\n\t\t\t\t\tif (self.items.length) self.isInvalid = false;\n\t\t\t\t\tself.$control_input.prop('required', invalid);\n\t\t\t\t}\n\t\t\t\tself.refreshClasses();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Updates all state-dependent CSS classes.\n\t\t\t */\n\t\t\trefreshClasses: function() {\n\t\t\t\tvar self     = this;\n\t\t\t\tvar isFull   = self.isFull();\n\t\t\t\tvar isLocked = self.isLocked;\n\t\t\n\t\t\t\tself.$wrapper\n\t\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\t\n\t\t\t\tself.$control\n\t\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\t\n\t\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Determines whether or not more items can be added\n\t\t\t * to the control without exceeding the user-defined maximum.\n\t\t\t *\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisFull: function() {\n\t\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Refreshes the original <select> or <input>\n\t\t\t * element to reflect the current state.\n\t\t\t */\n\t\t\tupdateOriginalInput: function(opts) {\n\t\t\t\tvar i, n, options, label, self = this;\n\t\t\t\topts = opts || {};\n\t\t\n\t\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\t\toptions = [];\n\t\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t\t}\n\t\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t\t}\n\t\t\t\t\tself.$input.html(options.join(''));\n\t\t\t\t} else {\n\t\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t\t}\n\t\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\tif (!opts.silent) {\n\t\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Shows/hide the input placeholder depending\n\t\t\t * on if there items in the list already.\n\t\t\t */\n\t\t\tupdatePlaceholder: function() {\n\t\t\t\tif (!this.settings.placeholder) return;\n\t\t\t\tvar $input = this.$control_input;\n\t\t\n\t\t\t\tif (this.items.length) {\n\t\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t\t} else {\n\t\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t\t}\n\t\t\t\t$input.triggerHandler('update', {force: true});\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Shows the autocomplete dropdown containing\n\t\t\t * the available options.\n\t\t\t */\n\t\t\topen: function() {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\t\tself.focus();\n\t\t\t\tself.isOpen = true;\n\t\t\t\tself.refreshState();\n\t\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Closes the autocomplete dropdown menu.\n\t\t\t */\n\t\t\tclose: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tvar trigger = self.isOpen;\n\t\t\n\t\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t}\n\t\t\n\t\t\t\tself.isOpen = false;\n\t\t\t\tself.$dropdown.hide();\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.refreshState();\n\t\t\n\t\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Calculates and applies the appropriate\n\t\t\t * position of the dropdown.\n\t\t\t */\n\t\t\tpositionDropdown: function() {\n\t\t\t\tvar $control = this.$control;\n\t\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\t\toffset.top += $control.outerHeight(true);\n\t\t\n\t\t\t\tthis.$dropdown.css({\n\t\t\t\t\twidth : $control.outerWidth(),\n\t\t\t\t\ttop   : offset.top,\n\t\t\t\t\tleft  : offset.left\n\t\t\t\t});\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Resets / clears all selected items\n\t\t\t * from the control.\n\t\t\t *\n\t\t\t * @param {boolean} silent\n\t\t\t */\n\t\t\tclear: function(silent) {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (!self.items.length) return;\n\t\t\t\tself.$control.children(':not(input)').remove();\n\t\t\t\tself.items = [];\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.setCaret(0);\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.refreshState();\n\t\t\t\tself.showInput();\n\t\t\t\tself.trigger('clear');\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * A helper method for inserting an element\n\t\t\t * at the current caret position.\n\t\t\t *\n\t\t\t * @param {object} $el\n\t\t\t */\n\t\t\tinsertAtCaret: function($el) {\n\t\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\t\tif (caret === 0) {\n\t\t\t\t\tthis.$control.prepend($el);\n\t\t\t\t} else {\n\t\t\t\t\t$(this.$control[0].childNodes[caret]).before($el);\n\t\t\t\t}\n\t\t\t\tthis.setCaret(caret + 1);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Removes the current selected item(s).\n\t\t\t *\n\t\t\t * @param {object} e (optional)\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tdeleteSelection: function(e) {\n\t\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\t\tselection = getSelection(self.$control_input[0]);\n\t\t\n\t\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t\t}\n\t\t\n\t\t\t\t// determine items that will be removed\n\t\t\t\tvalues = [];\n\t\t\n\t\t\t\tif (self.$activeItems.length) {\n\t\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tif (direction > 0) { caret++; }\n\t\t\n\t\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t\t}\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// allow the callback to abort\n\t\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\n\t\t\t\t// perform removal\n\t\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\t\tself.setCaret(caret);\n\t\t\t\t}\n\t\t\t\twhile (values.length) {\n\t\t\t\t\tself.removeItem(values.pop());\n\t\t\t\t}\n\t\t\n\t\t\t\tself.showInput();\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.refreshOptions(true);\n\t\t\n\t\t\t\t// select previous option\n\t\t\t\tif (option_select) {\n\t\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\t\tif ($option_select.length) {\n\t\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Selects the previous / next item (depending\n\t\t\t * on the `direction` argument).\n\t\t\t *\n\t\t\t * > 0 - right\n\t\t\t * < 0 - left\n\t\t\t *\n\t\t\t * @param {int} direction\n\t\t\t * @param {object} e (optional)\n\t\t\t */\n\t\t\tadvanceSelection: function(direction, e) {\n\t\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (direction === 0) return;\n\t\t\t\tif (self.rtl) direction *= -1;\n\t\t\n\t\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\t\tselection = getSelection(self.$control_input[0]);\n\t\t\n\t\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t\t: selection.start === valueLength;\n\t\t\n\t\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\t\tif ($tail.length) {\n\t\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Moves the caret left / right.\n\t\t\t *\n\t\t\t * @param {int} direction\n\t\t\t * @param {object} e (optional)\n\t\t\t */\n\t\t\tadvanceCaret: function(direction, e) {\n\t\t\t\tvar self = this, fn, $adj;\n\t\t\n\t\t\t\tif (direction === 0) return;\n\t\t\n\t\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\t\tif (self.isShiftDown) {\n\t\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\t\tif ($adj.length) {\n\t\t\t\t\t\tself.hideInput();\n\t\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\t\te && e.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Moves the caret to the specified index.\n\t\t\t *\n\t\t\t * @param {int} i\n\t\t\t */\n\t\t\tsetCaret: function(i) {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\ti = self.items.length;\n\t\t\t\t} else {\n\t\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t\t}\n\t\t\n\t\t\t\tif(!self.isPending) {\n\t\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t\t// on mobile webkit devices\n\t\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tself.caretPos = i;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Disables user input on the control. Used while\n\t\t\t * items are being asynchronously created.\n\t\t\t */\n\t\t\tlock: function() {\n\t\t\t\tthis.close();\n\t\t\t\tthis.isLocked = true;\n\t\t\t\tthis.refreshState();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Re-enables user input on the control.\n\t\t\t */\n\t\t\tunlock: function() {\n\t\t\t\tthis.isLocked = false;\n\t\t\t\tthis.refreshState();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Disables user input on the control completely.\n\t\t\t * While disabled, it cannot receive focus.\n\t\t\t */\n\t\t\tdisable: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tself.$input.prop('disabled', true);\n\t\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\t\tself.isDisabled = true;\n\t\t\t\tself.lock();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Enables the control so that it can respond\n\t\t\t * to focus and user input.\n\t\t\t */\n\t\t\tenable: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tself.$input.prop('disabled', false);\n\t\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\t\tself.isDisabled = false;\n\t\t\t\tself.unlock();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Completely destroys the control and\n\t\t\t * unbinds all event listeners so that it can\n\t\t\t * be garbage collected.\n\t\t\t */\n\t\t\tdestroy: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tvar eventNS = self.eventNS;\n\t\t\t\tvar revertSettings = self.revertSettings;\n\t\t\n\t\t\t\tself.trigger('destroy');\n\t\t\t\tself.off();\n\t\t\t\tself.$wrapper.remove();\n\t\t\t\tself.$dropdown.remove();\n\t\t\n\t\t\t\tself.$input\n\t\t\t\t\t.html('')\n\t\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t\t.removeClass('selectized')\n\t\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t\t.show();\n\t\t\n\t\t\t\tself.$control_input.removeData('grow');\n\t\t\t\tself.$input.removeData('selectize');\n\t\t\n\t\t\t\t$(window).off(eventNS);\n\t\t\t\t$(document).off(eventNS);\n\t\t\t\t$(document.body).off(eventNS);\n\t\t\n\t\t\t\tdelete self.$input[0].selectize;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * A helper method for rendering \"item\" and\n\t\t\t * \"option\" templates, given the data.\n\t\t\t *\n\t\t\t * @param {string} templateName\n\t\t\t * @param {object} data\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\trender: function(templateName, data) {\n\t\t\t\tvar value, id, label;\n\t\t\t\tvar html = '';\n\t\t\t\tvar cache = false;\n\t\t\t\tvar self = this;\n\t\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\t\n\t\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\t\tcache = !!value;\n\t\t\t\t}\n\t\t\n\t\t\t\t// pull markup from cache if it exists\n\t\t\t\tif (cache) {\n\t\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t\t}\n\t\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// render markup\n\t\t\t\thtml = self.settings.render[templateName].apply(this, [data, escape_html]);\n\t\t\n\t\t\t\t// add mandatory attributes\n\t\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\t\thtml = html.replace(regex_tag, '<$1 data-selectable');\n\t\t\t\t}\n\t\t\t\tif (templateName === 'optgroup') {\n\t\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\t\thtml = html.replace(regex_tag, '<$1 data-group=\"' + escape_replace(escape_html(id)) + '\"');\n\t\t\t\t}\n\t\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\t\thtml = html.replace(regex_tag, '<$1 data-value=\"' + escape_replace(escape_html(value || '')) + '\"');\n\t\t\t\t}\n\t\t\n\t\t\t\t// update cache\n\t\t\t\tif (cache) {\n\t\t\t\t\tself.renderCache[templateName][value] = html;\n\t\t\t\t}\n\t\t\n\t\t\t\treturn html;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Clears the render cache for a template. If\n\t\t\t * no template is given, clears all render\n\t\t\t * caches.\n\t\t\t *\n\t\t\t * @param {string} templateName\n\t\t\t */\n\t\t\tclearCache: function(templateName) {\n\t\t\t\tvar self = this;\n\t\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\t\tself.renderCache = {};\n\t\t\t\t} else {\n\t\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Determines whether or not to display the\n\t\t\t * create item prompt, given a user input.\n\t\t\t *\n\t\t\t * @param {string} input\n\t\t\t * @return {boolean}\n\t\t\t */\n\t\t\tcanCreate: function(input) {\n\t\t\t\tvar self = this;\n\t\t\t\tif (!self.settings.create) return false;\n\t\t\t\tvar filter = self.settings.createFilter;\n\t\t\t\treturn input.length\n\t\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t\t}\n\t\t\n\t\t});\n\t\t\n\t\t\n\t\tSelectize.count = 0;\n\t\tSelectize.defaults = {\n\t\t\toptions: [],\n\t\t\toptgroups: [],\n\t\t\n\t\t\tplugins: [],\n\t\t\tdelimiter: ',',\n\t\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\t\tpersist: true,\n\t\t\tdiacritics: true,\n\t\t\tcreate: false,\n\t\t\tcreateOnBlur: false,\n\t\t\tcreateFilter: null,\n\t\t\thighlight: true,\n\t\t\topenOnFocus: true,\n\t\t\tmaxOptions: 1000,\n\t\t\tmaxItems: null,\n\t\t\thideSelected: null,\n\t\t\taddPrecedence: false,\n\t\t\tselectOnTab: false,\n\t\t\tpreload: false,\n\t\t\tallowEmptyOption: false,\n\t\t\tcloseAfterSelect: false,\n\t\t\n\t\t\tscrollDuration: 60,\n\t\t\tloadThrottle: 300,\n\t\t\tloadingClass: 'loading',\n\t\t\n\t\t\tdataAttr: 'data-data',\n\t\t\toptgroupField: 'optgroup',\n\t\t\tvalueField: 'value',\n\t\t\tlabelField: 'text',\n\t\t\toptgroupLabelField: 'label',\n\t\t\toptgroupValueField: 'value',\n\t\t\tlockOptgroupOrder: false,\n\t\t\n\t\t\tsortField: '$order',\n\t\t\tsearchField: ['text'],\n\t\t\tsearchConjunction: 'and',\n\t\t\n\t\t\tmode: null,\n\t\t\twrapperClass: 'selectize-control',\n\t\t\tinputClass: 'selectize-input',\n\t\t\tdropdownClass: 'selectize-dropdown',\n\t\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\t\n\t\t\tdropdownParent: null,\n\t\t\n\t\t\tcopyClassesToDropdown: true,\n\t\t\n\t\t\t/*\n\t\t\tload                 : null, // function(query, callback) { ... }\n\t\t\tscore                : null, // function(search) { ... }\n\t\t\tonInitialize         : null, // function() { ... }\n\t\t\tonChange             : null, // function(value) { ... }\n\t\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\t\tonItemRemove         : null, // function(value) { ... }\n\t\t\tonClear              : null, // function() { ... }\n\t\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\t\tonOptionRemove       : null, // function(value) { ... }\n\t\t\tonOptionClear        : null, // function() { ... }\n\t\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\t\tonOptionGroupClear   : null, // function() { ... }\n\t\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\t\tonType               : null, // function(str) { ... }\n\t\t\tonDelete             : null, // function(values) { ... }\n\t\t\t*/\n\t\t\n\t\t\trender: {\n\t\t\t\t/*\n\t\t\t\titem: null,\n\t\t\t\toptgroup: null,\n\t\t\t\toptgroup_header: null,\n\t\t\t\toption: null,\n\t\t\t\toption_create: null\n\t\t\t\t*/\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t$.fn.selectize = function(settings_user) {\n\t\t\tvar defaults             = $.fn.selectize.defaults;\n\t\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\t\tvar attr_data            = settings.dataAttr;\n\t\t\tvar field_label          = settings.labelField;\n\t\t\tvar field_value          = settings.valueField;\n\t\t\tvar field_optgroup       = settings.optgroupField;\n\t\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\t\n\t\t\t/**\n\t\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t\t *\n\t\t\t * @param {object} $input\n\t\t\t * @param {object} settings_element\n\t\t\t */\n\t\t\tvar init_textbox = function($input, settings_element) {\n\t\t\t\tvar i, n, values, option;\n\t\t\n\t\t\t\tvar data_raw = $input.attr(attr_data);\n\t\t\n\t\t\t\tif (!data_raw) {\n\t\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\toption = {};\n\t\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t\t}\n\t\t\t\t\tsettings_element.items = values;\n\t\t\t\t} else {\n\t\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\n\t\t\t/**\n\t\t\t * Initializes selectize from a <select> element.\n\t\t\t *\n\t\t\t * @param {object} $input\n\t\t\t * @param {object} settings_element\n\t\t\t */\n\t\t\tvar init_select = function($input, settings_element) {\n\t\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\t\tvar options = settings_element.options;\n\t\t\t\tvar optionsMap = {};\n\t\t\n\t\t\t\tvar readData = function($el) {\n\t\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t};\n\t\t\n\t\t\t\tvar addOption = function($option, group) {\n\t\t\t\t\t$option = $($option);\n\t\t\n\t\t\t\t\tvar value = hash_key($option.attr('value'));\n\t\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\t\n\t\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\t\tif (group) {\n\t\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\t\n\t\t\t\t\toptionsMap[value] = option;\n\t\t\t\t\toptions.push(option);\n\t\t\n\t\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\n\t\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\t\tvar i, n, id, optgroup, $options;\n\t\t\n\t\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\t\tid = $optgroup.attr('label');\n\t\t\n\t\t\t\t\tif (id) {\n\t\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\n\t\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\t\n\t\t\t\t$children = $input.children();\n\t\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\t\taddOption($children[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\n\t\t\treturn this.each(function() {\n\t\t\t\tif (this.selectize) return;\n\t\t\n\t\t\t\tvar instance;\n\t\t\t\tvar $input = $(this);\n\t\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t\t}\n\t\t\n\t\t\t\tvar settings_element = {\n\t\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t\t'options'     : [],\n\t\t\t\t\t'optgroups'   : [],\n\t\t\t\t\t'items'       : []\n\t\t\t\t};\n\t\t\n\t\t\t\tif (tag_name === 'select') {\n\t\t\t\t\tinit_select($input, settings_element);\n\t\t\t\t} else {\n\t\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t\t}\n\t\t\n\t\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t\t});\n\t\t};\n\t\t\n\t\t$.fn.selectize.defaults = Selectize.defaults;\n\t\t$.fn.selectize.support = {\n\t\t\tvalidity: SUPPORTS_VALIDITY_API\n\t\t};\n\t\t\n\t\t\n\t\tSelectize.define('drag_drop', function(options) {\n\t\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\t\tif (this.settings.mode !== 'multi') return;\n\t\t\tvar self = this;\n\t\t\n\t\t\tself.lock = (function() {\n\t\t\t\tvar original = self.lock;\n\t\t\t\treturn function() {\n\t\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\t\treturn original.apply(self, arguments);\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t\tself.unlock = (function() {\n\t\t\t\tvar original = self.unlock;\n\t\t\t\treturn function() {\n\t\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\t\treturn original.apply(self, arguments);\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t\tself.setup = (function() {\n\t\t\t\tvar original = self.setup;\n\t\t\t\treturn function() {\n\t\t\t\t\toriginal.apply(this, arguments);\n\t\t\n\t\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t});\n\t\t\n\t\tSelectize.define('dropdown_header', function(options) {\n\t\t\tvar self = this;\n\t\t\n\t\t\toptions = $.extend({\n\t\t\t\ttitle         : 'Untitled',\n\t\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\t\n\t\t\t\thtml: function(data) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t\t'</div>'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}, options);\n\t\t\n\t\t\tself.setup = (function() {\n\t\t\t\tvar original = self.setup;\n\t\t\t\treturn function() {\n\t\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t});\n\t\t\n\t\tSelectize.define('optgroup_columns', function(options) {\n\t\t\tvar self = this;\n\t\t\n\t\t\toptions = $.extend({\n\t\t\t\tequalizeWidth  : true,\n\t\t\t\tequalizeHeight : true\n\t\t\t}, options);\n\t\t\n\t\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\t\tvar index    = $options.index($option) + direction;\n\t\t\n\t\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t\t};\n\t\t\n\t\t\tthis.onKeyDown = (function() {\n\t\t\t\tvar original = self.onKeyDown;\n\t\t\t\treturn function(e) {\n\t\t\t\t\tvar index, $option, $options, $optgroup;\n\t\t\n\t\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\t\n\t\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\treturn original.apply(this, arguments);\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t\tvar getScrollbarWidth = function() {\n\t\t\t\tvar div;\n\t\t\t\tvar width = getScrollbarWidth.width;\n\t\t\t\tvar doc = document;\n\t\t\n\t\t\t\tif (typeof width === 'undefined') {\n\t\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\t\tdiv = div.firstChild;\n\t\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\t\tdoc.body.removeChild(div);\n\t\t\t\t}\n\t\t\t\treturn width;\n\t\t\t};\n\t\t\n\t\t\tvar equalizeSizes = function() {\n\t\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\t\n\t\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\t\tn = $optgroups.length;\n\t\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\t\n\t\t\t\tif (options.equalizeHeight) {\n\t\t\t\t\theight_max = 0;\n\t\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t\t}\n\t\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t\t}\n\t\t\n\t\t\t\tif (options.equalizeWidth) {\n\t\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t\t$optgroups.css({width: width});\n\t\t\t\t\tif (n > 1) {\n\t\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\n\t\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t\t}\n\t\t\n\t\t\n\t\t});\n\t\t\n\t\tSelectize.define('remove_button', function(options) {\n\t\t\tif (this.settings.mode === 'single') return;\n\t\t\n\t\t\toptions = $.extend({\n\t\t\t\tlabel     : '&times;',\n\t\t\t\ttitle     : 'Remove',\n\t\t\t\tclassName : 'remove',\n\t\t\t\tappend    : true\n\t\t\t}, options);\n\t\t\n\t\t\tvar self = this;\n\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\t\n\t\t\t/**\n\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t *\n\t\t\t * @param {string} html_container\n\t\t\t * @param {string} html_element\n\t\t\t * @return {string}\n\t\t\t */\n\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t\t};\n\t\t\n\t\t\tthis.setup = (function() {\n\t\t\t\tvar original = self.setup;\n\t\t\t\treturn function() {\n\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\treturn append(render_item.apply(this, arguments), html);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\toriginal.apply(this, arguments);\n\t\t\n\t\t\t\t\t// add event listener\n\t\t\t\t\tthis.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tif (self.isLocked) return;\n\t\t\n\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t});\n\t\t\n\t\tSelectize.define('restore_on_backspace', function(options) {\n\t\t\tvar self = this;\n\t\t\n\t\t\toptions.text = options.text || function(option) {\n\t\t\t\treturn option[this.settings.labelField];\n\t\t\t};\n\t\t\n\t\t\tthis.onKeyDown = (function() {\n\t\t\t\tvar original = self.onKeyDown;\n\t\t\t\treturn function(e) {\n\t\t\t\t\tvar index, option;\n\t\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn original.apply(this, arguments);\n\t\t\t\t};\n\t\t\t})();\n\t\t});\n\t\t\n\t\n\t\treturn Selectize;\n\t}));\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * sifter.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\t\n\t(function(root, factory) {\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof exports === 'object') {\n\t\t\tmodule.exports = factory();\n\t\t} else {\n\t\t\troot.Sifter = factory();\n\t\t}\n\t}(this, function() {\n\t\n\t\t/**\n\t\t * Textually searches arrays and hashes of objects\n\t\t * by property (or multiple properties). Designed\n\t\t * specifically for autocomplete.\n\t\t *\n\t\t * @constructor\n\t\t * @param {array|object} items\n\t\t * @param {object} items\n\t\t */\n\t\tvar Sifter = function(items, settings) {\n\t\t\tthis.items = items;\n\t\t\tthis.settings = settings || {diacritics: true};\n\t\t};\n\t\n\t\t/**\n\t\t * Splits a search string into an array of individual\n\t\t * regexps to be used to match results.\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {array}\n\t\t */\n\t\tSifter.prototype.tokenize = function(query) {\n\t\t\tquery = trim(String(query || '').toLowerCase());\n\t\t\tif (!query || !query.length) return [];\n\t\n\t\t\tvar i, n, regex, letter;\n\t\t\tvar tokens = [];\n\t\t\tvar words = query.split(/ +/);\n\t\n\t\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\t\tregex = escape_regex(words[i]);\n\t\t\t\tif (this.settings.diacritics) {\n\t\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttokens.push({\n\t\t\t\t\tstring : words[i],\n\t\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\treturn tokens;\n\t\t};\n\t\n\t\t/**\n\t\t * Iterates over arrays and hashes.\n\t\t *\n\t\t * ```\n\t\t * this.iterator(this.items, function(item, id) {\n\t\t *    // invoked for each item\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * @param {array|object} object\n\t\t */\n\t\tSifter.prototype.iterator = function(object, callback) {\n\t\t\tvar iterator;\n\t\t\tif (is_array(object)) {\n\t\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\titerator = function(callback) {\n\t\t\t\t\tfor (var key in this) {\n\t\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\titerator.apply(object, [callback]);\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a function to be used to score individual results.\n\t\t *\n\t\t * Good matches will have a higher score than poor matches.\n\t\t * If an item is not a match, 0 will be returned by the function.\n\t\t *\n\t\t * @param {object|string} search\n\t\t * @param {object} options (optional)\n\t\t * @returns {function}\n\t\t */\n\t\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\t\tvar self, fields, tokens, token_count;\n\t\n\t\t\tself        = this;\n\t\t\tsearch      = self.prepareSearch(search, options);\n\t\t\ttokens      = search.tokens;\n\t\t\tfields      = search.options.fields;\n\t\t\ttoken_count = tokens.length;\n\t\n\t\t\t/**\n\t\t\t * Calculates how close of a match the\n\t\t\t * given value is against a search token.\n\t\t\t *\n\t\t\t * @param {mixed} value\n\t\t\t * @param {object} token\n\t\t\t * @return {number}\n\t\t\t */\n\t\t\tvar scoreValue = function(value, token) {\n\t\t\t\tvar score, pos;\n\t\n\t\t\t\tif (!value) return 0;\n\t\t\t\tvalue = String(value || '');\n\t\t\t\tpos = value.search(token.regex);\n\t\t\t\tif (pos === -1) return 0;\n\t\t\t\tscore = token.string.length / value.length;\n\t\t\t\tif (pos === 0) score += 0.5;\n\t\t\t\treturn score;\n\t\t\t};\n\t\n\t\t\t/**\n\t\t\t * Calculates the score of an object\n\t\t\t * against the search query.\n\t\t\t *\n\t\t\t * @param {object} token\n\t\t\t * @param {object} data\n\t\t\t * @return {number}\n\t\t\t */\n\t\t\tvar scoreObject = (function() {\n\t\t\t\tvar field_count = fields.length;\n\t\t\t\tif (!field_count) {\n\t\t\t\t\treturn function() { return 0; };\n\t\t\t\t}\n\t\t\t\tif (field_count === 1) {\n\t\t\t\t\treturn function(token, data) {\n\t\t\t\t\t\treturn scoreValue(data[fields[0]], token);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\t\tsum += scoreValue(data[fields[i]], token);\n\t\t\t\t\t}\n\t\t\t\t\treturn sum / field_count;\n\t\t\t\t};\n\t\t\t})();\n\t\n\t\t\tif (!token_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (token_count === 1) {\n\t\t\t\treturn function(data) {\n\t\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tif (search.options.conjunction === 'and') {\n\t\t\t\treturn function(data) {\n\t\t\t\t\tvar score;\n\t\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\t\tsum += score;\n\t\t\t\t\t}\n\t\t\t\t\treturn sum / token_count;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn function(data) {\n\t\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t\t}\n\t\t\t\t\treturn sum / token_count;\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a function that can be used to compare two\n\t\t * results, for sorting purposes. If no sorting should\n\t\t * be performed, `null` will be returned.\n\t\t *\n\t\t * @param {string|object} search\n\t\t * @param {object} options\n\t\t * @return function(a,b)\n\t\t */\n\t\tSifter.prototype.getSortFunction = function(search, options) {\n\t\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\t\n\t\t\tself   = this;\n\t\t\tsearch = self.prepareSearch(search, options);\n\t\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\t\n\t\t\t/**\n\t\t\t * Fetches the specified sort field value\n\t\t\t * from a search result item.\n\t\t\t *\n\t\t\t * @param  {string} name\n\t\t\t * @param  {object} result\n\t\t\t * @return {mixed}\n\t\t\t */\n\t\t\tget_field = function(name, result) {\n\t\t\t\tif (name === '$score') return result.score;\n\t\t\t\treturn self.items[result.id][name];\n\t\t\t};\n\t\n\t\t\t// parse options\n\t\t\tfields = [];\n\t\t\tif (sort) {\n\t\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// the \"$score\" field is implied to be the primary\n\t\t\t// sort field, unless it's manually specified\n\t\t\tif (search.query) {\n\t\t\t\timplicit_score = true;\n\t\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\t\timplicit_score = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (implicit_score) {\n\t\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tmultipliers = [];\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t\t}\n\t\n\t\t\t// build function\n\t\t\tfields_count = fields.length;\n\t\t\tif (!fields_count) {\n\t\t\t\treturn null;\n\t\t\t} else if (fields_count === 1) {\n\t\t\t\tfield = fields[0].field;\n\t\t\t\tmultiplier = multipliers[0];\n\t\t\t\treturn function(a, b) {\n\t\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn function(a, b) {\n\t\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (result) return result;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Parses a search query and returns an object\n\t\t * with tokens and fields ready to be populated\n\t\t * with results.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @returns {object}\n\t\t */\n\t\tSifter.prototype.prepareSearch = function(query, options) {\n\t\t\tif (typeof query === 'object') return query;\n\t\n\t\t\toptions = extend({}, options);\n\t\n\t\t\tvar option_fields     = options.fields;\n\t\t\tvar option_sort       = options.sort;\n\t\t\tvar option_sort_empty = options.sort_empty;\n\t\n\t\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\t\n\t\t\treturn {\n\t\t\t\toptions : options,\n\t\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\t\ttokens  : this.tokenize(query),\n\t\t\t\ttotal   : 0,\n\t\t\t\titems   : []\n\t\t\t};\n\t\t};\n\t\n\t\t/**\n\t\t * Searches through all items and returns a sorted array of matches.\n\t\t *\n\t\t * The `options` parameter can contain:\n\t\t *\n\t\t *   - fields {string|array}\n\t\t *   - sort {array}\n\t\t *   - score {function}\n\t\t *   - filter {bool}\n\t\t *   - limit {integer}\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - options {object}\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @returns {object}\n\t\t */\n\t\tSifter.prototype.search = function(query, options) {\n\t\t\tvar self = this, value, score, search, calculateScore;\n\t\t\tvar fn_sort;\n\t\t\tvar fn_score;\n\t\n\t\t\tsearch  = this.prepareSearch(query, options);\n\t\t\toptions = search.options;\n\t\t\tquery   = search.query;\n\t\n\t\t\t// generate result scoring function\n\t\t\tfn_score = options.score || self.getScoreFunction(search);\n\t\n\t\t\t// perform search and sort\n\t\t\tif (query.length) {\n\t\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\t\tscore = fn_score(item);\n\t\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tfn_sort = self.getSortFunction(search, options);\n\t\t\tif (fn_sort) search.items.sort(fn_sort);\n\t\n\t\t\t// apply limits\n\t\t\tsearch.total = search.items.length;\n\t\t\tif (typeof options.limit === 'number') {\n\t\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t\t}\n\t\n\t\t\treturn search;\n\t\t};\n\t\n\t\t// utilities\n\t\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t\tvar cmp = function(a, b) {\n\t\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t\t}\n\t\t\ta = asciifold(String(a || ''));\n\t\t\tb = asciifold(String(b || ''));\n\t\t\tif (a > b) return 1;\n\t\t\tif (b > a) return -1;\n\t\t\treturn 0;\n\t\t};\n\t\n\t\tvar extend = function(a, b) {\n\t\t\tvar i, n, k, object;\n\t\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\t\tobject = arguments[i];\n\t\t\t\tif (!object) continue;\n\t\t\t\tfor (k in object) {\n\t\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\t\ta[k] = object[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\t\n\t\tvar trim = function(str) {\n\t\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t\t};\n\t\n\t\tvar escape_regex = function(str) {\n\t\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t\t};\n\t\n\t\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t\t};\n\t\n\t\tvar DIACRITICS = {\n\t\t\t'a': '[aÀÁÂÃÄÅàáâãäåĀāąĄ]',\n\t\t\t'c': '[cÇçćĆčČ]',\n\t\t\t'd': '[dđĐďĎð]',\n\t\t\t'e': '[eÈÉÊËèéêëěĚĒēęĘ]',\n\t\t\t'i': '[iÌÍÎÏìíîïĪī]',\n\t\t\t'l': '[lłŁ]',\n\t\t\t'n': '[nÑñňŇńŃ]',\n\t\t\t'o': '[oÒÓÔÕÕÖØòóôõöøŌō]',\n\t\t\t'r': '[rřŘ]',\n\t\t\t's': '[sŠšśŚ]',\n\t\t\t't': '[tťŤ]',\n\t\t\t'u': '[uÙÚÛÜùúûüůŮŪū]',\n\t\t\t'y': '[yŸÿýÝ]',\n\t\t\t'z': '[zŽžżŻźŹ]'\n\t\t};\n\t\n\t\tvar asciifold = (function() {\n\t\t\tvar i, n, k, chunk;\n\t\t\tvar foreignletters = '';\n\t\t\tvar lookup = {};\n\t\t\tfor (k in DIACRITICS) {\n\t\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\t\tforeignletters += chunk;\n\t\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\t\treturn function(str) {\n\t\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\t\treturn lookup[foreignletter];\n\t\t\t\t}).toLowerCase();\n\t\t\t};\n\t\t})();\n\t\n\t\n\t\t// export\n\t\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t\treturn Sifter;\n\t}));\n\t\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * microplugin.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\t\n\t(function(root, factory) {\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof exports === 'object') {\n\t\t\tmodule.exports = factory();\n\t\t} else {\n\t\t\troot.MicroPlugin = factory();\n\t\t}\n\t}(this, function() {\n\t\tvar MicroPlugin = {};\n\t\n\t\tMicroPlugin.mixin = function(Interface) {\n\t\t\tInterface.plugins = {};\n\t\n\t\t\t/**\n\t\t\t * Initializes the listed plugins (with options).\n\t\t\t * Acceptable formats:\n\t\t\t *\n\t\t\t * List (without options):\n\t\t\t *   ['a', 'b', 'c']\n\t\t\t *\n\t\t\t * List (with options):\n\t\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t\t *\n\t\t\t * Hash (with options):\n\t\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t\t *\n\t\t\t * @param {mixed} plugins\n\t\t\t */\n\t\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\t\tvar i, n, key;\n\t\t\t\tvar self  = this;\n\t\t\t\tvar queue = [];\n\t\n\t\t\t\tself.plugins = {\n\t\t\t\t\tnames     : [],\n\t\t\t\t\tsettings  : {},\n\t\t\t\t\trequested : {},\n\t\t\t\t\tloaded    : {}\n\t\t\t\t};\n\t\n\t\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (plugins) {\n\t\t\t\t\tfor (key in plugins) {\n\t\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\twhile (queue.length) {\n\t\t\t\t\tself.require(queue.shift());\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\t\tvar self    = this;\n\t\t\t\tvar plugins = self.plugins;\n\t\t\t\tvar plugin  = Interface.plugins[name];\n\t\n\t\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t\t}\n\t\n\t\t\t\tplugins.requested[name] = true;\n\t\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\t\tplugins.names.push(name);\n\t\t\t};\n\t\n\t\t\t/**\n\t\t\t * Initializes a plugin.\n\t\t\t *\n\t\t\t * @param {string} name\n\t\t\t */\n\t\t\tInterface.prototype.require = function(name) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar plugins = self.plugins;\n\t\n\t\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t\t}\n\t\t\t\t\tself.loadPlugin(name);\n\t\t\t\t}\n\t\n\t\t\t\treturn plugins.loaded[name];\n\t\t\t};\n\t\n\t\t\t/**\n\t\t\t * Registers a plugin.\n\t\t\t *\n\t\t\t * @param {string} name\n\t\t\t * @param {function} fn\n\t\t\t */\n\t\t\tInterface.define = function(name, fn) {\n\t\t\t\tInterface.plugins[name] = {\n\t\t\t\t\t'name' : name,\n\t\t\t\t\t'fn'   : fn\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\n\t\tvar utils = {\n\t\t\tisArray: Array.isArray || function(vArg) {\n\t\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t\t}\n\t\t};\n\t\n\t\treturn MicroPlugin;\n\t}));\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _jquery = __webpack_require__(7);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\t__webpack_require__(9);\n\t\n\tvar taxonomy,\n\t    elementData,\n\t    $element,\n\t    TemplateEngine = __webpack_require__(5);\n\t\n\tvar defaultSettings = {\n\t    plugins: ['remove_button'],\n\t    maxItems: 5,\n\t    valueField: 'url',\n\t    labelField: 'name',\n\t    searchField: 'name',\n\t    create: false,\n\t    render: {\n\t        'item': renderItem,\n\t        'option': renderOption\n\t    },\n\t    load: loadItems\n\t};\n\t\n\tvar defaultTemplates = {\n\t    'item': '<div><%this.name%></div>',\n\t    'option': '<div class=\"item-float-notification\"><span><img src=\"http://placehold.it/20\" alt=\"<%this.name%>\"></span><span><%this.name%></span></div>'\n\t};\n\t\n\tfunction renderItem(item) {\n\t\n\t    var $element = (0, _jquery2['default'])(this.$input);\n\t    var renderTemplate = defaultTemplates.item;\n\t    var elementData = $element.data();\n\t    if ('templateItem' in elementData && (0, _jquery2['default'])(elementData.templateItem).length) {\n\t        renderTemplate = (0, _jquery2['default'])(elementData.templateItem).html();\n\t    }\n\t\n\t    return TemplateEngine(renderTemplate, item);\n\t}\n\t\n\tfunction renderOption(item, escape) {\n\t\n\t    var $element = (0, _jquery2['default'])(this.$input);\n\t    var renderTemplate = defaultTemplates.option;\n\t    var elementData = $element.data();\n\t    if ('templateOption' in elementData && (0, _jquery2['default'])(elementData.templateOption).length) {\n\t        renderTemplate = (0, _jquery2['default'])(elementData.templateOption).html();\n\t    }\n\t\n\t    return TemplateEngine(renderTemplate, item);\n\t}\n\t\n\tfunction loadItems(query, callback) {\n\t\n\t    var options = (0, _jquery2['default'])(this.$input).data();\n\t\n\t    if (!query.length) {\n\t        return callback();\n\t    }\n\t\n\t    var _data = {};\n\t    _data[this.settings.searchField] = query;\n\t\n\t    _jquery2['default'].ajax({\n\t        url: options.url,\n\t        data: _data,\n\t        type: options.method || 'GET',\n\t        error: function error() {\n\t            callback();\n\t        },\n\t        success: function success(res) {\n\t            callback(res);\n\t        }\n\t    });\n\t}\n\t\n\ttaxonomy = function (element) {\n\t    $element = (0, _jquery2['default'])(element);\n\t    elementData = $element.data();\n\t    var selectizeSettings = _jquery2['default'].extend({}, defaultSettings, elementData);\n\t    (0, _jquery2['default'])(element).selectize(selectizeSettings);\n\t};\n\t\n\texports['default'] = taxonomy;\n\tmodule.exports = exports['default'];\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** 1.1.js\n **/","var map = {\n\t\"./TemplateEngine\": 5,\n\t\"./TemplateEngine.js\": 5,\n\t\"./dropzoneUploader\": 6,\n\t\"./dropzoneUploader.js\": 6,\n\t\"./index\": 3,\n\t\"./index.js\": 3,\n\t\"./tagger\": 8,\n\t\"./tagger.js\": 8,\n\t\"./taxonomy\": 12,\n\t\"./taxonomy.js\": 12\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./asyncModules ^\\.\\/.*$\n ** module id = 4\n ** module chunks = 1\n **/","module.exports = function(html, options) {\n\tvar re = /<%(.+?)%>/g, \n\t\treExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g, \n\t\tcode = 'with(obj) { var r=[];\\n', \n\t\tcursor = 0, \n\t\tresult;\n\tvar add = function(line, js) {\n\t\tjs? (code += line.match(reExp) ? line + '\\n' : 'r.push(' + line + ');\\n') :\n\t\t\t(code += line != '' ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : '');\n\t\treturn add;\n\t}\n\tvar match = re.exec(html);\n\twhile(match) {\n\t\tadd(html.slice(cursor, match.index))(match[1], true);\n\t\tcursor = match.index + match[0].length;\n\t\tmatch = re.exec(html);\n\t}\n\tadd(html.substr(cursor, html.length - cursor));\n\tcode = (code + 'return r.join(\"\"); }').replace(/[\\r\\t\\n]/g, '');\n\ttry { result = new Function('obj', code).apply(options, [options]); }\n\tcatch(err) { console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\"); }\n\treturn result;\n};\n\n\n/** WEBPACK FOOTER **\n ** ./asyncModules/TemplateEngine.js\n **/","'use strict'\n\n// Dependecies\nconst $ =  require('jquery')\n\nvar module = (element) => {\n  const dropZone = $(element)\n  let $input = dropZone.find('input') // TODO: Change this selector name\n  let $altInput = dropZone.find('[data-trigger=\"file\"]')\n\n  dropZone.on({\n    dragover: cbDragOver,\n    dragleave: cbDragLeave,\n    drop: cbDrop\n  })\n\n  $input.on({\n    change: cbChangeFile\n  })\n\n  $altInput.on({\n    click: cbTriggerFile\n  })\n\n  function cbDragOver (event) {\n    console.log('Make some when file is over of element')\n    dropZone.addClass('hover')\n    return false\n  }\n\n  function cbDragLeave (event) {\n    console.log('Make some when file is leaved of element')\n    dropZone.removeClass('hover')\n    return false\n  }\n\n  function cbDrop (event) {\n    let file = event.originalEvent.dataTransfer.files[0]\n\n    event.stopPropagation()\n    event.preventDefault()\n    dropZone.removeClass('hover')\n\n    readFile(file)\n    $input.files = file\n    $input.val('')\n    return false\n  }\n\n  function cbChangeFile (event) {\n    readFile(this.files[0])\n    return false\n  }\n\n  function cbTriggerFile (event) {\n    $input.trigger('click')\n  }\n\n}\n\nvar readFile = function (file) {\n  var reader = new FileReader();\n\n  reader.onload = function(e) {\n      var image = $('<img/>')\n      .load(function() {\n          createPreview(file, getCanvasImage(this))\n      })\n      .attr('src', e.target.result);\n  }\n  reader.readAsDataURL(file);\n}\n\nvar getCanvasImage = function(image) {\n\n  let imgWidth = 500,\n      imgHeight = 500;\n\n  let canvas = document.createElement('canvas');\n  canvas.width = imgWidth;\n  canvas.height = imgHeight;\n\n  let ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, imgWidth, imgHeight);\n\n  return canvas.toDataURL('image/jpeg');\n}\n\nvar createPreview = function(file, newURL) {\n  let fileName = file.name.substr(0, file.name.lastIndexOf('.')) //subtract file extension\n  let filePath = newURL\n  let image = `<img src=\"${filePath}\" class=\"img-responsive\" alt=\"${fileName}\"/>`\n  //append new image through jQuery Template\n  $('[data-content=\"file\"]').html(image).show()\n  $('.custom-file-content').hide()\n}\n\nexport default module\n\n\n/** WEBPACK FOOTER **\n ** ./asyncModules/dropzoneUploader.js\n **/","'use strict'\n\nimport $ from 'jquery'\nrequire('selectize')\n\nconst [suggest] = [{\n  plugins: ['remove_button']\n  , maxItems: 5\n  , valueField: 'url'\n  , labelField: 'name'\n  , searchField: 'name'\n  , create: false\n  , render: {\n    item: templateItem\n    , option: templateOption\n  }\n  , load: loadUsers\n}, {\n\n\n\n}]\n\nvar tagger = (element) => {\n    var type = $(element).data('taggerType')\n    switch (type) {\n        case 'suggest':\n            $(element).selectize(suggest)\n    }\n}\n\nfunction templateItem (item, escape) {\n  console.log('ITEM');\n  console.dir(this);\n  let name = item.name ? escape(item.name) : ''\n  return `<div>${name}</div>`\n}\nfunction templateOption (item, escape) {\n  console.log('OPTION');\n  console.dir(this.$input);\n  let name = item.name ? escape(item.name) : ''\n  return `<div class=\"item-float-notification\">\n    <span><img src=\"http://placehold.it/20\" alt=\"${name}\"></span>\n    <span>${name}</span>\n  </div>`\n}\n\nfunction loadUsers(query, callback) {\n    var options = this.$wrapper.prev().data();\n    if (!query.length) {\n        return callback()\n    }\n    $.ajax({\n        url: options.url,\n        type: 'GET',\n        data: {\n            criteria: query\n        },\n        error: function () {\n            callback()\n        },\n        success: function (res) {\n            callback(res.users);\n        }\n    })\n}\n\n\nexport default tagger\n\n\n/** WEBPACK FOOTER **\n ** ./asyncModules/tagger.js\n **/","/**\n * selectize.js (v0.12.1)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['jquery','sifter','microplugin'], factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t} else {\n\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t}\n}(this, function($, Sifter, MicroPlugin) {\n\t'use strict';\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\t\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\t\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\t\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\t\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\t\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\t\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('form').validity;\n\t\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\t\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\t\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\t\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\t\n\tvar hook = {};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\t\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\t\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\t\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\t\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\t\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\t\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar $test = $('<test>').css({\n\t\t\tposition: 'absolute',\n\t\t\ttop: -99999,\n\t\t\tleft: -99999,\n\t\t\twidth: 'auto',\n\t\t\tpadding: 0,\n\t\t\twhiteSpace: 'pre'\n\t\t}).text(str).appendTo('body');\n\t\n\t\ttransferStyles($parent, $test, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\t\n\t\tvar width = $test.width();\n\t\t$test.remove();\n\t\n\t\treturn width;\n\t};\n\t\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\t\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\t\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 97 && keyCode <= 122) || // a-z\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)  || // A-Z\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\t\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\t\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\t\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\t\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\t\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\t\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\t\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\t\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\t\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\t\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\t\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\t\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\t\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\tMicroEvent.mixin(Selectize);\n\tMicroPlugin.mixin(Selectize);\n\t\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t$.extend(Selectize.prototype, {\n\t\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\t\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\t\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\t\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\t\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\t\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\t\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\t\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\t\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tautoGrow($control_input);\n\t\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\t\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\t\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\t\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\t\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\t\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\t\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\t\n\t\t\tself.on('change', this.onChange);\n\t\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\t\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\t\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\t\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t\t\tif (!self.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\t\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t} else {\n\t\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t\t// input and create Items for each separate value\n\t\t\t\tif (self.settings.splitOn) {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tvar splitInput = $.trim(self.$control_input.val() || '').split(self.settings.splitOn);\n\t\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is debounced in the Selectize\n\t\t * constructor (by `settings.loadDelay` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\t\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\n\t\t\tif (!wasFocused) self.trigger('focus');\n\t\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\t\n\t\t\tself.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\t\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\t\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\t(dest || document.body).focus();\n\t\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\t\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\t\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\t\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\t\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\t\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\t\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\t\n\t\t\tself.$activeOption = $option.addClass('active');\n\t\n\t\t\tif (scroll || !isset(scroll)) {\n\t\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\t\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\t\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\t\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\t\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\t\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\t\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\t\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\t\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\t\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\t\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\t\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\t\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = [];\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].push(option_html);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = [];\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = self.render('optgroup_header', self.optgroups[optgroup]) || '';\n\t\t\t\t\thtml_children += groups[optgroup].join('');\n\t\t\t\t\thtml.push(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.push(groups[optgroup].join(''));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$dropdown_content.html(html.join(''));\n\t\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight && results.query.length && results.tokens.length) {\n\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\t\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\t\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\tif (!key || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\t\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\n\t\t\tvalue     = hash_key(value);\n\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\n\t\t\torder_old = self.options[value].$order;\n\t\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\t\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\t\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\t\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\t\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\t\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\t\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tself.options = self.sifter.items = {};\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t\tself.clear();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\t\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn $();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = hash_key(value);\n\t\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\t\n\t\t\t$item = (typeof value === 'object') ? value : self.getItem(value);\n\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\t\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\t\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tself.lock();\n\t\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\t\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\t\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\t\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tvar invalid, self = this;\n\t\t\tif (self.isRequired) {\n\t\t\t\tif (self.items.length) self.isInvalid = false;\n\t\t\t\tself.$control_input.prop('required', invalid);\n\t\t\t}\n\t\t\tself.refreshClasses();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\t\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\t\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\t\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\t\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\t\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\t\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t}\n\t\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\t\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\t\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control.outerWidth(),\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tif (caret === 0) {\n\t\t\t\tthis.$control.prepend($el);\n\t\t\t} else {\n\t\t\t\t$(this.$control[0].childNodes[caret]).before($el);\n\t\t\t}\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\t\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\t\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\t\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\t\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\t\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\t\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\t\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\t\n\t\t\tif (direction === 0) return;\n\t\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\t\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.caretPos = i;\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\t\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\t\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\t\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\t\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\t\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\t\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\t\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\t\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// render markup\n\t\t\thtml = self.settings.render[templateName].apply(this, [data, escape_html]);\n\t\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\thtml = html.replace(regex_tag, '<$1 data-selectable');\n\t\t\t}\n\t\t\tif (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml = html.replace(regex_tag, '<$1 data-group=\"' + escape_replace(escape_html(id)) + '\"');\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml = html.replace(regex_tag, '<$1 data-value=\"' + escape_replace(escape_html(value || '')) + '\"');\n\t\t\t}\n\t\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html;\n\t\t\t}\n\t\n\t\t\treturn html;\n\t\t},\n\t\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\t\n\t});\n\t\n\t\n\tSelectize.count = 0;\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\t\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\t\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\t\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\t\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\t\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\n\t\tdropdownParent: null,\n\t\n\t\tcopyClassesToDropdown: true,\n\t\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\t\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\t\n\t\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\t\n\t\t\tvar data_raw = $input.attr(attr_data);\n\t\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\t\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\t\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\t\n\t\t\t\tvar value = hash_key($option.attr('value'));\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\t\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\t\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\t\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\t\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\t\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\t\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\t\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\t\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\t\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: SUPPORTS_VALIDITY_API\n\t};\n\t\n\t\n\tSelectize.define('drag_drop', function(options) {\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\tif (this.settings.mode !== 'multi') return;\n\t\tvar self = this;\n\t\n\t\tself.lock = (function() {\n\t\t\tvar original = self.lock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.unlock = (function() {\n\t\t\tvar original = self.unlock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t},\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('dropdown_header', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\ttitle         : 'Untitled',\n\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\n\t\t\thtml: function(data) {\n\t\t\t\treturn (\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t}\n\t\t}, options);\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\t\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\t\n\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\t\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\t\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\t\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\t\n\t\n\t});\n\t\n\tSelectize.define('remove_button', function(options) {\n\t\tif (this.settings.mode === 'single') return;\n\t\n\t\toptions = $.extend({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, options);\n\t\n\t\tvar self = this;\n\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t/**\n\t\t * Appends an element as a child (with raw HTML).\n\t\t *\n\t\t * @param {string} html_container\n\t\t * @param {string} html_element\n\t\t * @return {string}\n\t\t */\n\t\tvar append = function(html_container, html_element) {\n\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t};\n\t\n\t\tthis.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\tif (options.append) {\n\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\treturn append(render_item.apply(this, arguments), html);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\t// add event listener\n\t\t\t\tthis.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('restore_on_backspace', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions.text = options.text || function(option) {\n\t\t\treturn option[this.settings.labelField];\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, option;\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t});\n\t\n\n\treturn Selectize;\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /home/raphael/workspace/rede_gsti/resources/~/selectize/dist/js/selectize.js\n ** module id = 9\n ** module chunks = 1\n **/","/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.Sifter = factory();\n\t}\n}(this, function() {\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tvar Sifter = function(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\tSifter.prototype.tokenize = function(query) {\n\t\tquery = trim(String(query || '').toLowerCase());\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\tSifter.prototype.iterator = function(object, callback) {\n\t\tvar iterator;\n\t\tif (is_array(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @param {object|string} search\n\t * @param {object} options (optional)\n\t * @returns {function}\n\t */\n\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\tvar self, fields, tokens, token_count;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(search, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(data[fields[0]], token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(data[fields[i]], token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @param {object} options\n\t * @return function(a,b)\n\t */\n\tSifter.prototype.getSortFunction = function(search, options) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {mixed}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn self.items[result.id][name];\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.prepareSearch = function(query, options) {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = extend({}, options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t * The `options` parameter can contain:\n\t *\n\t *   - fields {string|array}\n\t *   - sort {array}\n\t *   - score {function}\n\t *   - filter {bool}\n\t *   - limit {integer}\n\t *\n\t * Returns an object containing:\n\t *\n\t *   - options {object}\n\t *   - query {string}\n\t *   - tokens {array}\n\t *   - total {int}\n\t *   - items {array}\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.search = function(query, options) {\n\t\tvar self = this, value, score, search, calculateScore;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n\n\t// utilities\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tvar cmp = function(a, b) {\n\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t}\n\t\ta = asciifold(String(a || ''));\n\t\tb = asciifold(String(b || ''));\n\t\tif (a > b) return 1;\n\t\tif (b > a) return -1;\n\t\treturn 0;\n\t};\n\n\tvar extend = function(a, b) {\n\t\tvar i, n, k, object;\n\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\tobject = arguments[i];\n\t\t\tif (!object) continue;\n\t\t\tfor (k in object) {\n\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\ta[k] = object[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\n\tvar trim = function(str) {\n\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t};\n\n\tvar escape_regex = function(str) {\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t};\n\n\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t};\n\n\tvar DIACRITICS = {\n\t\t'a': '[aÀÁÂÃÄÅàáâãäåĀāąĄ]',\n\t\t'c': '[cÇçćĆčČ]',\n\t\t'd': '[dđĐďĎð]',\n\t\t'e': '[eÈÉÊËèéêëěĚĒēęĘ]',\n\t\t'i': '[iÌÍÎÏìíîïĪī]',\n\t\t'l': '[lłŁ]',\n\t\t'n': '[nÑñňŇńŃ]',\n\t\t'o': '[oÒÓÔÕÕÖØòóôõöøŌō]',\n\t\t'r': '[rřŘ]',\n\t\t's': '[sŠšśŚ]',\n\t\t't': '[tťŤ]',\n\t\t'u': '[uÙÚÛÜùúûüůŮŪū]',\n\t\t'y': '[yŸÿýÝ]',\n\t\t'z': '[zŽžżŻźŹ]'\n\t};\n\n\tvar asciifold = (function() {\n\t\tvar i, n, k, chunk;\n\t\tvar foreignletters = '';\n\t\tvar lookup = {};\n\t\tfor (k in DIACRITICS) {\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\tforeignletters += chunk;\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\treturn function(str) {\n\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\treturn lookup[foreignletter];\n\t\t\t}).toLowerCase();\n\t\t};\n\t})();\n\n\n\t// export\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\treturn Sifter;\n}));\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /home/raphael/workspace/rede_gsti/resources/~/selectize/~/sifter/sifter.js\n ** module id = 10\n ** module chunks = 1\n **/","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.MicroPlugin = factory();\n\t}\n}(this, function() {\n\tvar MicroPlugin = {};\n\n\tMicroPlugin.mixin = function(Interface) {\n\t\tInterface.plugins = {};\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {mixed} plugins\n\t\t */\n\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t};\n\n\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t};\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\tInterface.prototype.require = function(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tInterface.define = function(name, fn) {\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t};\n\t};\n\n\tvar utils = {\n\t\tisArray: Array.isArray || function(vArg) {\n\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t}\n\t};\n\n\treturn MicroPlugin;\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /home/raphael/workspace/rede_gsti/resources/~/selectize/~/microplugin/src/microplugin.js\n ** module id = 11\n ** module chunks = 1\n **/","'use strict';\n\nrequire('selectize');\n\nimport $ from 'jquery';\n\nvar taxonomy,\n    elementData,\n    $element,\n    TemplateEngine = require('./TemplateEngine');\n\nvar defaultSettings = {\n    plugins: ['remove_button'],\n    maxItems: 5,\n    valueField: 'url',\n    labelField: 'name',\n    searchField: 'name',\n    create: false,\n    render: {\n        'item': renderItem,\n        'option': renderOption\n    },\n    load: loadItems\n};\n\nvar defaultTemplates = {\n    'item': '<div><%this.name%></div>',\n    'option': '<div class=\"item-float-notification\"><span><img src=\"http://placehold.it/20\" alt=\"<%this.name%>\"></span><span><%this.name%></span></div>'\n};\n\nfunction renderItem(item){\n\n    var $element = $(this.$input);\n    var renderTemplate = defaultTemplates.item;\n    var elementData = $element.data();\n    if('templateItem' in elementData && $(elementData.templateItem).length){\n        renderTemplate = $(elementData.templateItem).html();\n    }\n\n    return TemplateEngine(renderTemplate, item);\n}\n\nfunction renderOption(item, escape){\n\n    var $element = $(this.$input);\n    var renderTemplate = defaultTemplates.option;\n    var elementData = $element.data();\n    if('templateOption' in elementData && $(elementData.templateOption).length){\n        renderTemplate = $(elementData.templateOption).html();\n    }\n\n    return TemplateEngine(renderTemplate, item);\n\n}\n\nfunction loadItems(query, callback) {\n\n    var options = $(this.$input).data();\n\n    if(!query.length){\n        return callback();\n    }\n\n    var _data = {};\n    _data[this.settings.searchField] = query;\n\n    $.ajax({\n        url: options.url,\n        data: _data,\n        type: options.method || 'GET',\n        error: function(){\n            callback()\n        },\n        success: function(res){\n            callback(res);\n        }\n    });\n}\n\ntaxonomy = (element) => {\n    $element = $(element);\n    elementData = $element.data();\n    var selectizeSettings = $.extend({}, defaultSettings, elementData);\n    $(element).selectize(selectizeSettings);\n};\n\nexport default taxonomy\n\n\n/** WEBPACK FOOTER **\n ** ./asyncModules/taxonomy.js\n **/"],"sourceRoot":""}