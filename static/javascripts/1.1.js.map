{"version":3,"sources":["webpack:///1.1.js","webpack:///./asyncModules ^\\.\\/.*$","webpack:///./asyncModules/TemplateEngine.js","webpack:///./asyncModules/dropzoneUploader.js","webpack:///./asyncModules/tagger.js","webpack:////home/raphael/workspace/rede_gsti/resources/~/selectize/dist/js/selectize.js","webpack:////home/raphael/workspace/rede_gsti/resources/~/selectize/~/sifter/sifter.js","webpack:////home/raphael/workspace/rede_gsti/resources/~/selectize/~/microplugin/src/microplugin.js","webpack:///./asyncModules/taxonomy.js"],"names":["webpackJsonp","module","exports","__webpack_require__","webpackContext","req","webpackContextResolve","map","Error","./TemplateEngine","./TemplateEngine.js","./dropzoneUploader","./dropzoneUploader.js","./index","./index.js","./tagger","./tagger.js","./taxonomy","./taxonomy.js","keys","Object","resolve","id","html","options","result","re","reExp","code","cursor","add","line","js","match","replace","exec","slice","index","length","substr","Function","apply","err","console","error","message","defineProperty","value","$","_module","element","cbDragOver","event","log","dropZone","addClass","cbDragLeave","removeClass","cbDrop","file","originalEvent","dataTransfer","files","stopPropagation","preventDefault","readFile","$input","val","cbChangeFile","this","cbTriggerFile","trigger","find","$altInput","defaultImage","data","fakeLoad","on","dragover","dragleave","drop","change","click","name","src","load","createPreview","getCanvasImage","attr","reader","FileReader","onload","e","target","readAsDataURL","image","imgWidth","imgHeight","canvas","document","createElement","width","height","ctx","getContext","drawImage","toDataURL","filename","newURL","fileName","lastIndexOf","filePath","show","hide","_interopRequireDefault","obj","__esModule","default","templateItem","item","escape","templateOption","img","loadUsers","query","callback","$wrapper","prev","_jquery2","ajax","url","type","criteria","success","res","users","_jquery","suggest","plugins","maxItems","valueField","labelField","searchField","create","render","option","tagger","selectize","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","Sifter","MicroPlugin","highlight","$element","pattern","regex","RegExp","node","skip","nodeType","pos","search","spannode","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","i","each","MicroEvent","prototype","fct","_events","push","off","n","arguments","splice","indexOf","Array","call","mixin","destObject","props","IS_MAC","navigator","userAgent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_P","KEY_RIGHT","KEY_DOWN","KEY_N","KEY_BACKSPACE","KEY_DELETE","KEY_SHIFT","KEY_CMD","KEY_CTRL","KEY_TAB","TAG_SELECT","TAG_INPUT","SUPPORTS_VALIDITY_API","window","validity","isset","object","hash_key","escape_html","str","escape_replace","hook","before","self","method","fn","original","after","once","called","debounce","delay","timeout","args","clearTimeout","setTimeout","debounce_events","types","event_args","hasOwnProperty","watchChildEvent","$parent","selector","child","currentTarget","getSelection","input","start","selectionStart","selectionEnd","selection","focus","sel","createRange","selLen","text","moveStart","transferStyles","$from","$to","properties","styles","css","measureString","$test","position","top","left","padding","whiteSpace","appendTo","remove","autoGrow","currentWidth","update","keyCode","printable","placeholder","shift","character","metaKey","altKey","force","toLowerCase","substring","shiftKey","String","fromCharCode","toUpperCase","triggerHandler","Selectize","settings","dir","computedStyle","getComputedStyle","getPropertyValue","currentStyle","direction","parents","extend","order","tabIndex","tagType","rtl","eventNS","count","highlightedValue","isOpen","isDisabled","isRequired","is","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","optgroups","userOptions","items","renderCache","onSearchChange","loadThrottle","sifter","diacritics","registerOption","registerOptionGroup","mode","hideSelected","initializePlugins","setupCallbacks","setupTemplates","setup","$control","$control_input","$dropdown","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","$window","$document","wrapperClass","inputClass","dropdownParent","dropdownClass","dropdownContentClass","copyClassesToDropdown","style","names","join","splitOn","delimiter","delimiterEscaped","onOptionHover","onOptionSelect","onItemSelect","mousedown","onMouseDown","onClick","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","resize","positionDropdown","blur","onBlur","onFocus","paste","onPaste","has","revertSettings","$children","children","detach","tabindex","isArray","setValue","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","disable","onChange","preload","field_label","field_optgroup","optgroupLabelField","templates","optgroup","optgroup_header","option_create","key","callbacks","initialize","item_add","item_remove","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","defaultPrevented","isDefaultPrevented","close","open","setActiveItem","isFull","splitInput","trim","split","createItem","which","selectAll","ctrlKey","$next","getAdjacentOption","setActiveOption","$prev","advanceSelection","selectOnTab","deleteSelection","refreshOptions","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","body","createOnBlur","$target","hasClass","closeAfterSelect","lastQuery","addItem","getOption","loadingClass","results","Math","max","addOption","changed","getValue","silent","events","addItems","$item","eventName","idx","begin","end","swap","$last","hideInput","$option","scroll","animate","height_menu","height_item","y","scroll_top","scroll_bottom","outerHeight","scrollTop","offset","stop","scrollDuration","opacity","getScoreFunction","getSearchOptions","sort","sortField","field","fields","conjunction","searchConjunction","calculateScore","score","triggerDropdown","j","k","groups","groups_order","option_html","html_children","has_create_option","$active","$active_before","$create","active_before","maxOptions","min","optgroupField","lockOptgroupOrder","a","b","a_order","$order","b_order","tokens","canCreate","prepend","addPrecedence","optgroupValueField","addOptionGroup","removeOptionGroup","clearOptionGroups","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","removeOption","removeItem","clearOptions","getElementWithValue","$options","eq","$els","getAttribute","values","isPending","value_next","wasFull","insertAtCaret","persist","caret","lock","unlock","output","invalid","prop","refreshClasses","toggleClass","isEmptyObject","opts","label","removeAttr","visibility","display","outerWidth","$el","option_select","$option_select","$tail","onDelete","pop","tail","valueLength","cursorAtEdge","advanceCaret","$adj","$child","append","enable","destroy","removeData","templateName","cache","regex_tag","clearCache","filter","createFilter","defaults","allowEmptyOption","dataAttr","settings_user","attr_data","field_value","field_optgroup_label","field_optgroup_value","init_textbox","settings_element","data_raw","JSON","parse","init_select","optionsMap","readData","group","arr","addGroup","$optgroup","instance","tag_name","support","define","sortable","forcePlaceholderSize","disabled","ui","helper","overflow","active","title","headerClass","titleRowClass","labelClass","closeClass","$dropdown_header","equalizeWidth","equalizeHeight","closest","next","getScrollbarWidth","div","doc","innerHTML","firstChild","offsetWidth","clientWidth","removeChild","equalizeSizes","height_max","width_last","width_parent","$optgroups","innerWidth","round","html_container","html_element","render_item","parent","tokenize","letter","words","escape_regex","DIACRITICS","string","iterator","is_array","forEach","token_count","prepareSearch","scoreValue","token","scoreObject","field_count","sum","getSortFunction","fields_count","multiplier","multipliers","get_field","implicit_score","sort_empty","unshift","cmp","option_fields","option_sort","option_sort_empty","total","fn_sort","fn_score","limit","asciifold","toString","c","d","l","o","r","s","t","u","z","chunk","foreignletters","lookup","charAt","regexp","foreignletter","Interface","queue","requested","loaded","utils","require","loadPlugin","plugin","vArg","renderItem","renderTemplate","defaultTemplates","elementData","TemplateEngine","renderOption","loadItems","_data","taxonomy","defaultSettings","selectizeSettings"],"mappings":"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","file":"1.1.js","sourcesContent":["webpackJsonp([1,2],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./TemplateEngine\": 5,\n\t\t\"./TemplateEngine.js\": 5,\n\t\t\"./dropzoneUploader\": 6,\n\t\t\"./dropzoneUploader.js\": 6,\n\t\t\"./index\": 3,\n\t\t\"./index.js\": 3,\n\t\t\"./tagger\": 8,\n\t\t\"./tagger.js\": 8,\n\t\t\"./taxonomy\": 12,\n\t\t\"./taxonomy.js\": 12\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 4;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (html, options) {\n\t\tvar re = /<%(.+?)%>/g,\n\t\t    reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g,\n\t\t    code = 'with(obj) { var r=[];\\n',\n\t\t    cursor = 0,\n\t\t    result;\n\t\tvar add = function add(line, js) {\n\t\t\tjs ? code += line.match(reExp) ? line + '\\n' : 'r.push(' + line + ');\\n' : code += line != '' ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : '';\n\t\t\treturn add;\n\t\t};\n\t\tvar match = re.exec(html);\n\t\twhile (match) {\n\t\t\tadd(html.slice(cursor, match.index))(match[1], true);\n\t\t\tcursor = match.index + match[0].length;\n\t\t\tmatch = re.exec(html);\n\t\t}\n\t\tadd(html.substr(cursor, html.length - cursor));\n\t\tcode = (code + 'return r.join(\"\"); }').replace(/[\\r\\t\\n]/g, '');\n\t\ttry {\n\t\t\tresult = new Function('obj', code).apply(options, [options]);\n\t\t} catch (err) {\n\t\t\tconsole.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n\t\t}\n\t\treturn result;\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// Dependecies\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar $ = __webpack_require__(7);\n\t\n\tvar _module = function _module(element) {\n\t  var dropZone = $(element);\n\t  var $input = dropZone.find('input'); // TODO: Change this selector name\n\t  var $altInput = dropZone.find('[data-trigger=\"file\"]');\n\t  var defaultImage = dropZone.data('original-image');\n\t\n\t  if (defaultImage) {\n\t    fakeLoad('Imagem Padrão', defaultImage);\n\t  }\n\t\n\t  dropZone.on({\n\t    dragover: cbDragOver,\n\t    dragleave: cbDragLeave,\n\t    drop: cbDrop\n\t  });\n\t\n\t  $input.on({\n\t    change: cbChangeFile\n\t  });\n\t\n\t  $altInput.on({\n\t    click: cbTriggerFile\n\t  });\n\t\n\t  function cbDragOver(event) {\n\t    console.log('Make some when file is over of element');\n\t    dropZone.addClass('hover');\n\t    return false;\n\t  }\n\t\n\t  function cbDragLeave(event) {\n\t    console.log('Make some when file is leaved of element');\n\t    dropZone.removeClass('hover');\n\t    return false;\n\t  }\n\t\n\t  function cbDrop(event) {\n\t    var file = event.originalEvent.dataTransfer.files[0];\n\t\n\t    event.stopPropagation();\n\t    event.preventDefault();\n\t    dropZone.removeClass('hover');\n\t\n\t    readFile(file);\n\t    $input.files = file;\n\t    $input.val('');\n\t    return false;\n\t  }\n\t\n\t  function cbChangeFile(event) {\n\t    readFile(this.files[0]);\n\t    return false;\n\t  }\n\t\n\t  function cbTriggerFile(event) {\n\t    $input.trigger('click');\n\t  }\n\t};\n\t\n\tvar fakeLoad = function fakeLoad(name, src) {\n\t  var image = $('<img/>').load(function () {\n\t    createPreview(name, getCanvasImage(this));\n\t  }).attr('src', src);\n\t};\n\t\n\tvar readFile = function readFile(file) {\n\t  var reader = new FileReader();\n\t\n\t  reader.onload = function (e) {\n\t    fakeLoad(file.name, e.target.result);\n\t  };\n\t  reader.readAsDataURL(file);\n\t};\n\t\n\tvar getCanvasImage = function getCanvasImage(image) {\n\t\n\t  var imgWidth = 500,\n\t      imgHeight = 500;\n\t\n\t  var canvas = document.createElement('canvas');\n\t  canvas.width = imgWidth;\n\t  canvas.height = imgHeight;\n\t\n\t  var ctx = canvas.getContext('2d');\n\t  ctx.drawImage(image, 0, 0, imgWidth, imgHeight);\n\t\n\t  return canvas.toDataURL('image/jpeg');\n\t};\n\t\n\tvar createPreview = function createPreview(filename, newURL) {\n\t  var fileName = filename.substr(0, filename.lastIndexOf('.')); //subtract file extension\n\t  var filePath = newURL;\n\t  var image = '<img src=\"' + filePath + '\" class=\"img-responsive\" alt=\"' + fileName + '\"/>';\n\t  //append new image through jQuery Template\n\t  $('[data-content=\"file\"]').html(image).show();\n\t  $('.custom-file-content').hide();\n\t};\n\t\n\texports['default'] = _module;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */,\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _jquery = __webpack_require__(7);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\t__webpack_require__(9);\n\t\n\tvar suggest = {\n\t    plugins: ['remove_button'],\n\t    maxItems: 5,\n\t    valueField: 'id',\n\t    labelField: 'name',\n\t    searchField: 'name',\n\t    create: false,\n\t    render: {\n\t        item: templateItem,\n\t        option: templateOption\n\t    },\n\t    load: loadUsers\n\t};\n\t\n\tvar tagger = function tagger(element) {\n\t    var type = (0, _jquery2['default'])(element).data('taggerType');\n\t    switch (type) {\n\t        case 'suggest':\n\t            (0, _jquery2['default'])(element).selectize(suggest);\n\t    }\n\t};\n\t\n\tfunction templateItem(item, escape) {\n\t    var name = item.name ? escape(item.name) : '';\n\t    return '<div>' + name + '</div>';\n\t}\n\tfunction templateOption(item, escape) {\n\t    var name = item.name ? escape(item.name) : '';\n\t    return '<div class=\"item-float-notification\">\\n    <span><img src=\"' + item.img + '\" alt=\"' + name + '\"></span>\\n    <span>' + name + '</span>\\n  </div>';\n\t}\n\t\n\tfunction loadUsers(query, callback) {\n\t    var options = this.$wrapper.prev().data();\n\t    if (!query.length) {\n\t        return callback();\n\t    }\n\t    _jquery2['default'].ajax({\n\t        url: options.url,\n\t        type: 'GET',\n\t        data: {\n\t            criteria: query\n\t        },\n\t        error: function error() {\n\t            callback();\n\t        },\n\t        success: function success(res) {\n\t            callback(res.users);\n\t        }\n\t    });\n\t}\n\t\n\texports['default'] = tagger;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * selectize.js (v0.12.1)\n\t * Copyright (c) 2013–2015 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\t\n\t/*jshint curly:false */\n\t/*jshint browser:true */\n\t\n\t(function(root, factory) {\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7),__webpack_require__(10),__webpack_require__(11)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof exports === 'object') {\n\t\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t\t} else {\n\t\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t\t}\n\t}(this, function($, Sifter, MicroPlugin) {\n\t\t'use strict';\n\t\n\t\tvar highlight = function($element, pattern) {\n\t\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\t\n\t\t\tvar highlight = function(node) {\n\t\t\t\tvar skip = 0;\n\t\t\t\tif (node.nodeType === 3) {\n\t\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\t\tskip = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {\n\t\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn skip;\n\t\t\t};\n\t\t\n\t\t\treturn $element.each(function() {\n\t\t\t\thighlight(this);\n\t\t\t});\n\t\t};\n\t\t\n\t\tvar MicroEvent = function() {};\n\t\tMicroEvent.prototype = {\n\t\t\ton: function(event, fct){\n\t\t\t\tthis._events = this._events || {};\n\t\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\t\tthis._events[event].push(fct);\n\t\t\t},\n\t\t\toff: function(event, fct){\n\t\t\t\tvar n = arguments.length;\n\t\t\t\tif (n === 0) return delete this._events;\n\t\t\t\tif (n === 1) return delete this._events[event];\n\t\t\n\t\t\t\tthis._events = this._events || {};\n\t\t\t\tif (event in this._events === false) return;\n\t\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t\t},\n\t\t\ttrigger: function(event /* , args... */){\n\t\t\t\tthis._events = this._events || {};\n\t\t\t\tif (event in this._events === false) return;\n\t\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\t/**\n\t\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t\t *\n\t\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t\t *\n\t\t * @param {object} the object which will support MicroEvent\n\t\t */\n\t\tMicroEvent.mixin = function(destObject){\n\t\t\tvar props = ['on', 'off', 'trigger'];\n\t\t\tfor (var i = 0; i < props.length; i++){\n\t\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\t\n\t\tvar KEY_A         = 65;\n\t\tvar KEY_COMMA     = 188;\n\t\tvar KEY_RETURN    = 13;\n\t\tvar KEY_ESC       = 27;\n\t\tvar KEY_LEFT      = 37;\n\t\tvar KEY_UP        = 38;\n\t\tvar KEY_P         = 80;\n\t\tvar KEY_RIGHT     = 39;\n\t\tvar KEY_DOWN      = 40;\n\t\tvar KEY_N         = 78;\n\t\tvar KEY_BACKSPACE = 8;\n\t\tvar KEY_DELETE    = 46;\n\t\tvar KEY_SHIFT     = 16;\n\t\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\t\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\t\tvar KEY_TAB       = 9;\n\t\t\n\t\tvar TAG_SELECT    = 1;\n\t\tvar TAG_INPUT     = 2;\n\t\t\n\t\t// for now, android support in general is too spotty to support validity\n\t\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('form').validity;\n\t\t\n\t\tvar isset = function(object) {\n\t\t\treturn typeof object !== 'undefined';\n\t\t};\n\t\t\n\t\t/**\n\t\t * Converts a scalar to its best string representation\n\t\t * for hash keys and HTML attribute values.\n\t\t *\n\t\t * Transformations:\n\t\t *   'str'     -> 'str'\n\t\t *   null      -> ''\n\t\t *   undefined -> ''\n\t\t *   true      -> '1'\n\t\t *   false     -> '0'\n\t\t *   0         -> '0'\n\t\t *   1         -> '1'\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {string|null}\n\t\t */\n\t\tvar hash_key = function(value) {\n\t\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\t\treturn value + '';\n\t\t};\n\t\t\n\t\t/**\n\t\t * Escapes a string for use within HTML.\n\t\t *\n\t\t * @param {string} str\n\t\t * @returns {string}\n\t\t */\n\t\tvar escape_html = function(str) {\n\t\t\treturn (str + '')\n\t\t\t\t.replace(/&/g, '&amp;')\n\t\t\t\t.replace(/</g, '&lt;')\n\t\t\t\t.replace(/>/g, '&gt;')\n\t\t\t\t.replace(/\"/g, '&quot;');\n\t\t};\n\t\t\n\t\t/**\n\t\t * Escapes \"$\" characters in replacement strings.\n\t\t *\n\t\t * @param {string} str\n\t\t * @returns {string}\n\t\t */\n\t\tvar escape_replace = function(str) {\n\t\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t\t};\n\t\t\n\t\tvar hook = {};\n\t\t\n\t\t/**\n\t\t * Wraps `method` on `self` so that `fn`\n\t\t * is invoked before the original method.\n\t\t *\n\t\t * @param {object} self\n\t\t * @param {string} method\n\t\t * @param {function} fn\n\t\t */\n\t\thook.before = function(self, method, fn) {\n\t\t\tvar original = self[method];\n\t\t\tself[method] = function() {\n\t\t\t\tfn.apply(self, arguments);\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t};\n\t\t\n\t\t/**\n\t\t * Wraps `method` on `self` so that `fn`\n\t\t * is invoked after the original method.\n\t\t *\n\t\t * @param {object} self\n\t\t * @param {string} method\n\t\t * @param {function} fn\n\t\t */\n\t\thook.after = function(self, method, fn) {\n\t\t\tvar original = self[method];\n\t\t\tself[method] = function() {\n\t\t\t\tvar result = original.apply(self, arguments);\n\t\t\t\tfn.apply(self, arguments);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t};\n\t\t\n\t\t/**\n\t\t * Wraps `fn` so that it can only be invoked once.\n\t\t *\n\t\t * @param {function} fn\n\t\t * @returns {function}\n\t\t */\n\t\tvar once = function(fn) {\n\t\t\tvar called = false;\n\t\t\treturn function() {\n\t\t\t\tif (called) return;\n\t\t\t\tcalled = true;\n\t\t\t\tfn.apply(this, arguments);\n\t\t\t};\n\t\t};\n\t\t\n\t\t/**\n\t\t * Wraps `fn` so that it can only be called once\n\t\t * every `delay` milliseconds (invoked on the falling edge).\n\t\t *\n\t\t * @param {function} fn\n\t\t * @param {int} delay\n\t\t * @returns {function}\n\t\t */\n\t\tvar debounce = function(fn, delay) {\n\t\t\tvar timeout;\n\t\t\treturn function() {\n\t\t\t\tvar self = this;\n\t\t\t\tvar args = arguments;\n\t\t\t\twindow.clearTimeout(timeout);\n\t\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\t\tfn.apply(self, args);\n\t\t\t\t}, delay);\n\t\t\t};\n\t\t};\n\t\t\n\t\t/**\n\t\t * Debounce all fired events types listed in `types`\n\t\t * while executing the provided `fn`.\n\t\t *\n\t\t * @param {object} self\n\t\t * @param {array} types\n\t\t * @param {function} fn\n\t\t */\n\t\tvar debounce_events = function(self, types, fn) {\n\t\t\tvar type;\n\t\t\tvar trigger = self.trigger;\n\t\t\tvar event_args = {};\n\t\t\n\t\t\t// override trigger method\n\t\t\tself.trigger = function() {\n\t\t\t\tvar type = arguments[0];\n\t\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\t\tevent_args[type] = arguments;\n\t\t\t\t} else {\n\t\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t\t}\n\t\t\t};\n\t\t\n\t\t\t// invoke provided function\n\t\t\tfn.apply(self, []);\n\t\t\tself.trigger = trigger;\n\t\t\n\t\t\t// trigger queued events\n\t\t\tfor (type in event_args) {\n\t\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\t/**\n\t\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t\t *\n\t\t * @param {object} $parent - Parent element to listen on.\n\t\t * @param {string} event - Event name.\n\t\t * @param {string} selector - Descendant selector to filter by.\n\t\t * @param {function} fn - Event handler.\n\t\t */\n\t\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t\t$parent.on(event, selector, function(e) {\n\t\t\t\tvar child = e.target;\n\t\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\t\tchild = child.parentNode;\n\t\t\t\t}\n\t\t\t\te.currentTarget = child;\n\t\t\t\treturn fn.apply(this, [e]);\n\t\t\t});\n\t\t};\n\t\t\n\t\t/**\n\t\t * Determines the current selection within a text input control.\n\t\t * Returns an object containing:\n\t\t *   - start\n\t\t *   - length\n\t\t *\n\t\t * @param {object} input\n\t\t * @returns {object}\n\t\t */\n\t\tvar getSelection = function(input) {\n\t\t\tvar result = {};\n\t\t\tif ('selectionStart' in input) {\n\t\t\t\tresult.start = input.selectionStart;\n\t\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t\t} else if (document.selection) {\n\t\t\t\tinput.focus();\n\t\t\t\tvar sel = document.selection.createRange();\n\t\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\t\tresult.start = sel.text.length - selLen;\n\t\t\t\tresult.length = selLen;\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Copies CSS properties from one element to another.\n\t\t *\n\t\t * @param {object} $from\n\t\t * @param {object} $to\n\t\t * @param {array} properties\n\t\t */\n\t\tvar transferStyles = function($from, $to, properties) {\n\t\t\tvar i, n, styles = {};\n\t\t\tif (properties) {\n\t\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstyles = $from.css();\n\t\t\t}\n\t\t\t$to.css(styles);\n\t\t};\n\t\t\n\t\t/**\n\t\t * Measures the width of a string within a\n\t\t * parent element (in pixels).\n\t\t *\n\t\t * @param {string} str\n\t\t * @param {object} $parent\n\t\t * @returns {int}\n\t\t */\n\t\tvar measureString = function(str, $parent) {\n\t\t\tif (!str) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\n\t\t\tvar $test = $('<test>').css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: -99999,\n\t\t\t\tleft: -99999,\n\t\t\t\twidth: 'auto',\n\t\t\t\tpadding: 0,\n\t\t\t\twhiteSpace: 'pre'\n\t\t\t}).text(str).appendTo('body');\n\t\t\n\t\t\ttransferStyles($parent, $test, [\n\t\t\t\t'letterSpacing',\n\t\t\t\t'fontSize',\n\t\t\t\t'fontFamily',\n\t\t\t\t'fontWeight',\n\t\t\t\t'textTransform'\n\t\t\t]);\n\t\t\n\t\t\tvar width = $test.width();\n\t\t\t$test.remove();\n\t\t\n\t\t\treturn width;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Sets up an input to grow horizontally as the user\n\t\t * types. If the value is changed manually, you can\n\t\t * trigger the \"update\" handler to resize:\n\t\t *\n\t\t * $input.trigger('update');\n\t\t *\n\t\t * @param {object} $input\n\t\t */\n\t\tvar autoGrow = function($input) {\n\t\t\tvar currentWidth = null;\n\t\t\n\t\t\tvar update = function(e, options) {\n\t\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\t\tvar shift, character, selection;\n\t\t\t\te = e || window.event || {};\n\t\t\t\toptions = options || {};\n\t\t\n\t\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\t\n\t\t\t\tvalue = $input.val();\n\t\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\t\tprintable = (\n\t\t\t\t\t\t(keyCode >= 97 && keyCode <= 122) || // a-z\n\t\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)  || // A-Z\n\t\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t\t);\n\t\t\n\t\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (printable) {\n\t\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\t\tvalue += character;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\t\tif (!value && placeholder) {\n\t\t\t\t\tvalue = placeholder;\n\t\t\t\t}\n\t\t\n\t\t\t\twidth = measureString(value, $input) + 4;\n\t\t\t\tif (width !== currentWidth) {\n\t\t\t\t\tcurrentWidth = width;\n\t\t\t\t\t$input.width(width);\n\t\t\t\t\t$input.triggerHandler('resize');\n\t\t\t\t}\n\t\t\t};\n\t\t\n\t\t\t$input.on('keydown keyup update blur', update);\n\t\t\tupdate();\n\t\t};\n\t\t\n\t\tvar Selectize = function($input, settings) {\n\t\t\tvar key, i, n, dir, input, self = this;\n\t\t\tinput = $input[0];\n\t\t\tinput.selectize = self;\n\t\t\n\t\t\t// detect rtl environment\n\t\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\t\n\t\t\t// setup default state\n\t\t\t$.extend(self, {\n\t\t\t\torder            : 0,\n\t\t\t\tsettings         : settings,\n\t\t\t\t$input           : $input,\n\t\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\t\trtl              : /rtl/i.test(dir),\n\t\t\n\t\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\t\thighlightedValue : null,\n\t\t\t\tisOpen           : false,\n\t\t\t\tisDisabled       : false,\n\t\t\t\tisRequired       : $input.is('[required]'),\n\t\t\t\tisInvalid        : false,\n\t\t\t\tisLocked         : false,\n\t\t\t\tisFocused        : false,\n\t\t\t\tisInputHidden    : false,\n\t\t\t\tisSetup          : false,\n\t\t\t\tisShiftDown      : false,\n\t\t\t\tisCmdDown        : false,\n\t\t\t\tisCtrlDown       : false,\n\t\t\t\tignoreFocus      : false,\n\t\t\t\tignoreBlur       : false,\n\t\t\t\tignoreHover      : false,\n\t\t\t\thasOptions       : false,\n\t\t\t\tcurrentResults   : null,\n\t\t\t\tlastValue        : '',\n\t\t\t\tcaretPos         : 0,\n\t\t\t\tloading          : 0,\n\t\t\t\tloadedSearches   : {},\n\t\t\n\t\t\t\t$activeOption    : null,\n\t\t\t\t$activeItems     : [],\n\t\t\n\t\t\t\toptgroups        : {},\n\t\t\t\toptions          : {},\n\t\t\t\tuserOptions      : {},\n\t\t\t\titems            : [],\n\t\t\t\trenderCache      : {},\n\t\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t\t});\n\t\t\n\t\t\t// search system\n\t\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\t\n\t\t\t// build options table\n\t\t\tif (self.settings.options) {\n\t\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t\t}\n\t\t\t\tdelete self.settings.options;\n\t\t\t}\n\t\t\n\t\t\t// build optgroup table\n\t\t\tif (self.settings.optgroups) {\n\t\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t\t}\n\t\t\t\tdelete self.settings.optgroups;\n\t\t\t}\n\t\t\n\t\t\t// option-dependent defaults\n\t\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t\t}\n\t\t\n\t\t\tself.initializePlugins(self.settings.plugins);\n\t\t\tself.setupCallbacks();\n\t\t\tself.setupTemplates();\n\t\t\tself.setup();\n\t\t};\n\t\t\n\t\t// mixins\n\t\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\t\n\t\tMicroEvent.mixin(Selectize);\n\t\tMicroPlugin.mixin(Selectize);\n\t\t\n\t\t// methods\n\t\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\t\n\t\t$.extend(Selectize.prototype, {\n\t\t\n\t\t\t/**\n\t\t\t * Creates all elements and sets up event bindings.\n\t\t\t */\n\t\t\tsetup: function() {\n\t\t\t\tvar self      = this;\n\t\t\t\tvar settings  = self.settings;\n\t\t\t\tvar eventNS   = self.eventNS;\n\t\t\t\tvar $window   = $(window);\n\t\t\t\tvar $document = $(document);\n\t\t\t\tvar $input    = self.$input;\n\t\t\n\t\t\t\tvar $wrapper;\n\t\t\t\tvar $control;\n\t\t\t\tvar $control_input;\n\t\t\t\tvar $dropdown;\n\t\t\t\tvar $dropdown_content;\n\t\t\t\tvar $dropdown_parent;\n\t\t\t\tvar inputMode;\n\t\t\t\tvar timeout_blur;\n\t\t\t\tvar timeout_focus;\n\t\t\t\tvar classes;\n\t\t\t\tvar classes_plugins;\n\t\t\n\t\t\t\tinputMode         = self.settings.mode;\n\t\t\t\tclasses           = $input.attr('class') || '';\n\t\t\n\t\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\t\n\t\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t\t$dropdown.addClass(classes);\n\t\t\t\t}\n\t\t\n\t\t\t\t$wrapper.css({\n\t\t\t\t\twidth: $input[0].style.width\n\t\t\t\t});\n\t\t\n\t\t\t\tif (self.plugins.names.length) {\n\t\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t\t}\n\t\t\n\t\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t\t}\n\t\t\n\t\t\t\tif (self.settings.placeholder) {\n\t\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t\t}\n\t\t\n\t\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t\t}\n\t\t\n\t\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t\t}\n\t\t\n\t\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t\t}\n\t\t\n\t\t\t\tself.$wrapper          = $wrapper;\n\t\t\t\tself.$control          = $control;\n\t\t\t\tself.$control_input    = $control_input;\n\t\t\t\tself.$dropdown         = $dropdown;\n\t\t\t\tself.$dropdown_content = $dropdown_content;\n\t\t\n\t\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\t\tautoGrow($control_input);\n\t\t\n\t\t\t\t$control.on({\n\t\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t\t});\n\t\t\n\t\t\t\t$control_input.on({\n\t\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t\t});\n\t\t\n\t\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t\t});\n\t\t\n\t\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t\t});\n\t\t\n\t\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// blur on click outside\n\t\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\n\t\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\t\tself.ignoreHover = false;\n\t\t\t\t});\n\t\t\n\t\t\t\t// store original children and tab index so that they can be\n\t\t\t\t// restored when the destroy() method is called.\n\t\t\t\tthis.revertSettings = {\n\t\t\t\t\t$children : $input.children().detach(),\n\t\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t\t};\n\t\t\n\t\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\t\n\t\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\t\tself.setValue(settings.items);\n\t\t\t\t\tdelete settings.items;\n\t\t\t\t}\n\t\t\n\t\t\t\t// feature detect for the validation API\n\t\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\t\tself.refreshState();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\n\t\t\t\tself.updateOriginalInput();\n\t\t\t\tself.refreshItems();\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.isSetup = true;\n\t\t\n\t\t\t\tif ($input.is(':disabled')) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\n\t\t\t\tself.on('change', this.onChange);\n\t\t\n\t\t\t\t$input.data('selectize', self);\n\t\t\t\t$input.addClass('selectized');\n\t\t\t\tself.trigger('initialize');\n\t\t\n\t\t\t\t// preload options\n\t\t\t\tif (settings.preload === true) {\n\t\t\t\t\tself.onSearchChange('');\n\t\t\t\t}\n\t\t\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Sets up default rendering functions.\n\t\t\t */\n\t\t\tsetupTemplates: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tvar field_label = self.settings.labelField;\n\t\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\t\n\t\t\t\tvar templates = {\n\t\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t\t},\n\t\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t\t},\n\t\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t\t},\n\t\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t\t},\n\t\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\n\t\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Maps fired events to callbacks provided\n\t\t\t * in the settings used when creating the control.\n\t\t\t */\n\t\t\tsetupCallbacks: function() {\n\t\t\t\tvar key, fn, callbacks = {\n\t\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t\t'change'          : 'onChange',\n\t\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t\t'type'            : 'onType',\n\t\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t\t'blur'            : 'onBlur'\n\t\t\t\t};\n\t\t\n\t\t\t\tfor (key in callbacks) {\n\t\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the main control element\n\t\t\t * has a click event.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @return {boolean}\n\t\t\t */\n\t\t\tonClick: function(e) {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t\t// is ignored unless invoked within a click event)\n\t\t\t\tif (!self.isFocused) {\n\t\t\t\t\tself.focus();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the main control element\n\t\t\t * has a mouse down event.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @return {boolean}\n\t\t\t */\n\t\t\tonMouseDown: function(e) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\t\tvar $target = $(e.target);\n\t\t\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// give control focus\n\t\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\t\tself.focus();\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the value of the control has been changed.\n\t\t\t * This should propagate the event to the original DOM\n\t\t\t * input / select element.\n\t\t\t */\n\t\t\tonChange: function() {\n\t\t\t\tthis.$input.trigger('change');\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> paste.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonPaste: function(e) {\n\t\t\t\tvar self = this;\n\t\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t\t\t// input and create Items for each separate value\n\t\t\t\t\tif (self.settings.splitOn) {\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tvar splitInput = $.trim(self.$control_input.val() || '').split(self.settings.splitOn);\n\t\t\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> keypress.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonKeyPress: function(e) {\n\t\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\t\tthis.createItem();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> keydown.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonKeyDown: function(e) {\n\t\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.isLocked) {\n\t\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tswitch (e.keyCode) {\n\t\t\t\t\tcase KEY_A:\n\t\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase KEY_ESC:\n\t\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tself.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_N:\n\t\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\t\tself.open();\n\t\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_P:\n\t\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\t\tcase KEY_UP:\n\t\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_TAB:\n\t\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\n\t\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> keyup.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonKeyUp: function(e) {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\t\tvar value = self.$control_input.val() || '';\n\t\t\t\tif (self.lastValue !== value) {\n\t\t\t\t\tself.lastValue = value;\n\t\t\t\t\tself.onSearchChange(value);\n\t\t\t\t\tself.refreshOptions();\n\t\t\t\t\tself.trigger('type', value);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Invokes the user-provide option provider / loader.\n\t\t\t *\n\t\t\t * Note: this function is debounced in the Selectize\n\t\t\t * constructor (by `settings.loadDelay` milliseconds)\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t */\n\t\t\tonSearchChange: function(value) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar fn = self.settings.load;\n\t\t\t\tif (!fn) return;\n\t\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\t\tself.loadedSearches[value] = true;\n\t\t\t\tself.load(function(callback) {\n\t\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t\t});\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> focus.\n\t\t\t *\n\t\t\t * @param {object} e (optional)\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonFocus: function(e) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar wasFocused = self.isFocused;\n\t\t\n\t\t\t\tif (self.isDisabled) {\n\t\t\t\t\tself.blur();\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\n\t\t\t\tif (self.ignoreFocus) return;\n\t\t\t\tself.isFocused = true;\n\t\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\t\n\t\t\t\tif (!wasFocused) self.trigger('focus');\n\t\t\n\t\t\t\tif (!self.$activeItems.length) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t\t}\n\t\t\n\t\t\t\tself.refreshState();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered on <input> blur.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @param {Element} dest\n\t\t\t */\n\t\t\tonBlur: function(e, dest) {\n\t\t\t\tvar self = this;\n\t\t\t\tif (!self.isFocused) return;\n\t\t\t\tself.isFocused = false;\n\t\t\n\t\t\t\tif (self.ignoreFocus) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\t\tself.ignoreBlur = true;\n\t\t\t\t\tself.onFocus(e);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tvar deactivate = function() {\n\t\t\t\t\tself.close();\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setActiveOption(null);\n\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\tself.refreshState();\n\t\t\n\t\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\t\t(dest || document.body).focus();\n\t\t\n\t\t\t\t\tself.ignoreFocus = false;\n\t\t\t\t\tself.trigger('blur');\n\t\t\t\t};\n\t\t\n\t\t\t\tself.ignoreFocus = true;\n\t\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t\t} else {\n\t\t\t\t\tdeactivate();\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the user rolls over\n\t\t\t * an option in the autocomplete dropdown menu.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonOptionHover: function(e) {\n\t\t\t\tif (this.ignoreHover) return;\n\t\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the user clicks on an option\n\t\t\t * in the autocomplete dropdown menu.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonOptionSelect: function(e) {\n\t\t\t\tvar value, $target, $option, self = this;\n\t\t\n\t\t\t\tif (e.preventDefault) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\n\t\t\t\t$target = $(e.currentTarget);\n\t\t\t\tif ($target.hasClass('create')) {\n\t\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\t\tself.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\t\tself.addItem(value);\n\t\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\t\tself.close();\n\t\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Triggered when the user clicks on an item\n\t\t\t * that has been selected.\n\t\t\t *\n\t\t\t * @param {object} e\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tonItemSelect: function(e) {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.isLocked) return;\n\t\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Invokes the provided method that provides\n\t\t\t * results to a callback---which are then added\n\t\t\t * as options to the control.\n\t\t\t *\n\t\t\t * @param {function} fn\n\t\t\t */\n\t\t\tload: function(fn) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\t\n\t\t\t\tself.loading++;\n\t\t\t\tfn.apply(self, [function(results) {\n\t\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\t\tif (results && results.length) {\n\t\t\t\t\t\tself.addOption(results);\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t\t}\n\t\t\t\t\tif (!self.loading) {\n\t\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t\t}\n\t\t\t\t\tself.trigger('load', results);\n\t\t\t\t}]);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Sets the input field of the control to the specified value.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t */\n\t\t\tsetTextboxValue: function(value) {\n\t\t\t\tvar $input = this.$control_input;\n\t\t\t\tvar changed = $input.val() !== value;\n\t\t\t\tif (changed) {\n\t\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\t\tthis.lastValue = value;\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns the value of the control. If multiple items\n\t\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t\t * an array. If only one item can be selected, this\n\t\t\t * returns a string.\n\t\t\t *\n\t\t\t * @returns {mixed}\n\t\t\t */\n\t\t\tgetValue: function() {\n\t\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\t\treturn this.items;\n\t\t\t\t} else {\n\t\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Resets the selected items to the given value.\n\t\t\t *\n\t\t\t * @param {mixed} value\n\t\t\t */\n\t\t\tsetValue: function(value, silent) {\n\t\t\t\tvar events = silent ? [] : ['change'];\n\t\t\n\t\t\t\tdebounce_events(this, events, function() {\n\t\t\t\t\tthis.clear(silent);\n\t\t\t\t\tthis.addItems(value, silent);\n\t\t\t\t});\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Sets the selected item.\n\t\t\t *\n\t\t\t * @param {object} $item\n\t\t\t * @param {object} e (optional)\n\t\t\t */\n\t\t\tsetActiveItem: function($item, e) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar eventName;\n\t\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\t\tvar $last;\n\t\t\n\t\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t\t$item = $($item);\n\t\t\n\t\t\t\t// clear the active selection\n\t\t\t\tif (!$item.length) {\n\t\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\t\tself.$activeItems = [];\n\t\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t\tself.showInput();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\t// modify selection\n\t\t\t\teventName = e && e.type.toLowerCase();\n\t\t\n\t\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\t\tif (begin > end) {\n\t\t\t\t\t\tswap  = begin;\n\t\t\t\t\t\tbegin = end;\n\t\t\t\t\t\tend   = swap;\n\t\t\t\t\t}\n\t\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t\t}\n\t\t\n\t\t\t\t// ensure control has focus\n\t\t\t\tself.hideInput();\n\t\t\t\tif (!this.isFocused) {\n\t\t\t\t\tself.focus();\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Sets the selected item in the dropdown menu\n\t\t\t * of available options.\n\t\t\t *\n\t\t\t * @param {object} $object\n\t\t\t * @param {boolean} scroll\n\t\t\t * @param {boolean} animate\n\t\t\t */\n\t\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\t\tvar height_menu, height_item, y;\n\t\t\t\tvar scroll_top, scroll_bottom;\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\t\tself.$activeOption = null;\n\t\t\n\t\t\t\t$option = $($option);\n\t\t\t\tif (!$option.length) return;\n\t\t\n\t\t\t\tself.$activeOption = $option.addClass('active');\n\t\t\n\t\t\t\tif (scroll || !isset(scroll)) {\n\t\t\n\t\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\t\tscroll_top    = y;\n\t\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\t\n\t\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Selects all items (CTRL + A).\n\t\t\t */\n\t\t\tselectAll: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tif (self.settings.mode === 'single') return;\n\t\t\n\t\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\t\tif (self.$activeItems.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.focus();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Hides the input element out of view, while\n\t\t\t * retaining its focus.\n\t\t\t */\n\t\t\thideInput: function() {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\t\tself.isInputHidden = true;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Restores input visibility.\n\t\t\t */\n\t\t\tshowInput: function() {\n\t\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\t\tthis.isInputHidden = false;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Gives the control focus.\n\t\t\t */\n\t\t\tfocus: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tif (self.isDisabled) return;\n\t\t\n\t\t\t\tself.ignoreFocus = true;\n\t\t\t\tself.$control_input[0].focus();\n\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\tself.ignoreFocus = false;\n\t\t\t\t\tself.onFocus();\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Forces the control out of focus.\n\t\t\t *\n\t\t\t * @param {Element} dest\n\t\t\t */\n\t\t\tblur: function(dest) {\n\t\t\t\tthis.$control_input[0].blur();\n\t\t\t\tthis.onBlur(null, dest);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns a function that scores an object\n\t\t\t * to show how good of a match it is to the\n\t\t\t * provided query.\n\t\t\t *\n\t\t\t * @param {string} query\n\t\t\t * @param {object} options\n\t\t\t * @return {function}\n\t\t\t */\n\t\t\tgetScoreFunction: function(query) {\n\t\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns search options for sifter (the system\n\t\t\t * for scoring and sorting results).\n\t\t\t *\n\t\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t\t * @return {object}\n\t\t\t */\n\t\t\tgetSearchOptions: function() {\n\t\t\t\tvar settings = this.settings;\n\t\t\t\tvar sort = settings.sortField;\n\t\t\t\tif (typeof sort === 'string') {\n\t\t\t\t\tsort = [{field: sort}];\n\t\t\t\t}\n\t\t\n\t\t\t\treturn {\n\t\t\t\t\tfields      : settings.searchField,\n\t\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\t\tsort        : sort\n\t\t\t\t};\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Searches through available options and returns\n\t\t\t * a sorted array of matches.\n\t\t\t *\n\t\t\t * Returns an object containing:\n\t\t\t *\n\t\t\t *   - query {string}\n\t\t\t *   - tokens {array}\n\t\t\t *   - total {int}\n\t\t\t *   - items {array}\n\t\t\t *\n\t\t\t * @param {string} query\n\t\t\t * @returns {object}\n\t\t\t */\n\t\t\tsearch: function(query) {\n\t\t\t\tvar i, value, score, result, calculateScore;\n\t\t\t\tvar self     = this;\n\t\t\t\tvar settings = self.settings;\n\t\t\t\tvar options  = this.getSearchOptions();\n\t\t\n\t\t\t\t// validate user-provided result scoring function\n\t\t\t\tif (settings.score) {\n\t\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// perform search\n\t\t\t\tif (query !== self.lastQuery) {\n\t\t\t\t\tself.lastQuery = query;\n\t\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\t\tself.currentResults = result;\n\t\t\t\t} else {\n\t\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t\t}\n\t\t\n\t\t\t\t// filter out selected items\n\t\t\t\tif (settings.hideSelected) {\n\t\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Refreshes the list of available options shown\n\t\t\t * in the autocomplete dropdown menu.\n\t\t\t *\n\t\t\t * @param {boolean} triggerDropdown\n\t\t\t */\n\t\t\trefreshOptions: function(triggerDropdown) {\n\t\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\t\tvar $active, $active_before, $create;\n\t\t\n\t\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\t\ttriggerDropdown = true;\n\t\t\t\t}\n\t\t\n\t\t\t\tvar self              = this;\n\t\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\t\tvar results           = self.search(query);\n\t\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\t\n\t\t\t\t// build markup\n\t\t\t\tn = results.items.length;\n\t\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t\t}\n\t\t\n\t\t\t\t// render and group available options individually\n\t\t\t\tgroups = {};\n\t\t\t\tgroups_order = [];\n\t\t\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\t\toption_html = self.render('option', option);\n\t\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\t\n\t\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\t\tgroups[optgroup] = [];\n\t\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgroups[optgroup].push(option_html);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// sort optgroups\n\t\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\n\t\t\t\t// render optgroup headers & join groups\n\t\t\t\thtml = [];\n\t\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\t\toptgroup = groups_order[i];\n\t\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].length) {\n\t\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\t\thtml_children = self.render('optgroup_header', self.optgroups[optgroup]) || '';\n\t\t\t\t\t\thtml_children += groups[optgroup].join('');\n\t\t\t\t\t\thtml.push(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\t\thtml: html_children\n\t\t\t\t\t\t})));\n\t\t\t\t\t} else {\n\t\t\t\t\t\thtml.push(groups[optgroup].join(''));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t$dropdown_content.html(html.join(''));\n\t\t\n\t\t\t\t// highlight matching terms inline\n\t\t\t\tif (self.settings.highlight && results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// add \"selected\" class to selected options\n\t\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// add create option\n\t\t\t\thas_create_option = self.canCreate(query);\n\t\t\t\tif (has_create_option) {\n\t\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t\t}\n\t\t\n\t\t\t\t// activate\n\t\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\t\tif (self.hasOptions) {\n\t\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$active = $create;\n\t\t\t\t\t}\n\t\t\t\t\tself.setActiveOption($active);\n\t\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t\t} else {\n\t\t\t\t\tself.setActiveOption(null);\n\t\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Adds an available option. If it already exists,\n\t\t\t * nothing will happen. Note: this does not refresh\n\t\t\t * the options list dropdown (use `refreshOptions`\n\t\t\t * for that).\n\t\t\t *\n\t\t\t * Usage:\n\t\t\t *\n\t\t\t *   this.addOption(data)\n\t\t\t *\n\t\t\t * @param {object|array} data\n\t\t\t */\n\t\t\taddOption: function(data) {\n\t\t\t\tvar i, n, value, self = this;\n\t\t\n\t\t\t\tif ($.isArray(data)) {\n\t\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\t\tself.userOptions[value] = true;\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Registers an option to the pool of options.\n\t\t\t *\n\t\t\t * @param {object} data\n\t\t\t * @return {boolean|string}\n\t\t\t */\n\t\t\tregisterOption: function(data) {\n\t\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\t\tif (!key || this.options.hasOwnProperty(key)) return false;\n\t\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\t\tthis.options[key] = data;\n\t\t\t\treturn key;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Registers an option group to the pool of option groups.\n\t\t\t *\n\t\t\t * @param {object} data\n\t\t\t * @return {boolean|string}\n\t\t\t */\n\t\t\tregisterOptionGroup: function(data) {\n\t\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\t\tif (!key) return false;\n\t\t\n\t\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\t\tthis.optgroups[key] = data;\n\t\t\t\treturn key;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Registers a new optgroup for options\n\t\t\t * to be bucketed into.\n\t\t\t *\n\t\t\t * @param {string} id\n\t\t\t * @param {object} data\n\t\t\t */\n\t\t\taddOptionGroup: function(id, data) {\n\t\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Removes an existing option group.\n\t\t\t *\n\t\t\t * @param {string} id\n\t\t\t */\n\t\t\tremoveOptionGroup: function(id) {\n\t\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\t\tdelete this.optgroups[id];\n\t\t\t\t\tthis.renderCache = {};\n\t\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Clears all existing option groups.\n\t\t\t */\n\t\t\tclearOptionGroups: function() {\n\t\t\t\tthis.optgroups = {};\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_clear');\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Updates an option available for selection. If\n\t\t\t * it is visible in the selected items or options\n\t\t\t * dropdown, it will be re-rendered automatically.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @param {object} data\n\t\t\t */\n\t\t\tupdateOption: function(value, data) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar $item, $item_new;\n\t\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\t\n\t\t\t\tvalue     = hash_key(value);\n\t\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\t\n\t\t\t\t// sanity checks\n\t\t\t\tif (value === null) return;\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\t\n\t\t\t\torder_old = self.options[value].$order;\n\t\t\n\t\t\t\t// update references\n\t\t\t\tif (value_new !== value) {\n\t\t\t\t\tdelete self.options[value];\n\t\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdata.$order = data.$order || order_old;\n\t\t\t\tself.options[value_new] = data;\n\t\t\n\t\t\t\t// invalidate render cache\n\t\t\t\tcache_items = self.renderCache['item'];\n\t\t\t\tcache_options = self.renderCache['option'];\n\t\t\n\t\t\t\tif (cache_items) {\n\t\t\t\t\tdelete cache_items[value];\n\t\t\t\t\tdelete cache_items[value_new];\n\t\t\t\t}\n\t\t\t\tif (cache_options) {\n\t\t\t\t\tdelete cache_options[value];\n\t\t\t\t\tdelete cache_options[value_new];\n\t\t\t\t}\n\t\t\n\t\t\t\t// update the item if it's selected\n\t\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t\t$item = self.getItem(value);\n\t\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t\t$item.replaceWith($item_new);\n\t\t\t\t}\n\t\t\n\t\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\t\tself.lastQuery = null;\n\t\t\n\t\t\t\t// update dropdown contents\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.refreshOptions(false);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Removes a single option.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @param {boolean} silent\n\t\t\t */\n\t\t\tremoveOption: function(value, silent) {\n\t\t\t\tvar self = this;\n\t\t\t\tvalue = hash_key(value);\n\t\t\n\t\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\t\tif (cache_items) delete cache_items[value];\n\t\t\t\tif (cache_options) delete cache_options[value];\n\t\t\n\t\t\t\tdelete self.userOptions[value];\n\t\t\t\tdelete self.options[value];\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_remove', value);\n\t\t\t\tself.removeItem(value, silent);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Clears all options.\n\t\t\t */\n\t\t\tclearOptions: function() {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tself.loadedSearches = {};\n\t\t\t\tself.userOptions = {};\n\t\t\t\tself.renderCache = {};\n\t\t\t\tself.options = self.sifter.items = {};\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_clear');\n\t\t\t\tself.clear();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns the jQuery element of the option\n\t\t\t * matching the given value.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @returns {object}\n\t\t\t */\n\t\t\tgetOption: function(value) {\n\t\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns the jQuery element of the next or\n\t\t\t * previous selectable option.\n\t\t\t *\n\t\t\t * @param {object} $option\n\t\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t\t * @return {object}\n\t\t\t */\n\t\t\tgetAdjacentOption: function($option, direction) {\n\t\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\t\tvar index    = $options.index($option) + direction;\n\t\t\n\t\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Finds the first element with a \"data-value\" attribute\n\t\t\t * that matches the given value.\n\t\t\t *\n\t\t\t * @param {mixed} value\n\t\t\t * @param {object} $els\n\t\t\t * @return {object}\n\t\t\t */\n\t\t\tgetElementWithValue: function(value, $els) {\n\t\t\t\tvalue = hash_key(value);\n\t\t\n\t\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\treturn $();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Returns the jQuery element of the item\n\t\t\t * matching the given value.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @returns {object}\n\t\t\t */\n\t\t\tgetItem: function(value) {\n\t\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t\t * at the current caret position.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @param {boolean} silent\n\t\t\t */\n\t\t\taddItems: function(values, silent) {\n\t\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * \"Selects\" an item. Adds it to the list\n\t\t\t * at the current caret position.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @param {boolean} silent\n\t\t\t */\n\t\t\taddItem: function(value, silent) {\n\t\t\t\tvar events = silent ? [] : ['change'];\n\t\t\n\t\t\t\tdebounce_events(this, events, function() {\n\t\t\t\t\tvar $item, $option, $options;\n\t\t\t\t\tvar self = this;\n\t\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\t\tvalue = hash_key(value);\n\t\t\n\t\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\t\n\t\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\t\twasFull = self.isFull();\n\t\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\t\tself.insertAtCaret($item);\n\t\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\t\tself.refreshState();\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\t\n\t\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\t\tself.close();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Removes the selected item matching\n\t\t\t * the provided value.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t */\n\t\t\tremoveItem: function(value, silent) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar $item, i, idx;\n\t\t\n\t\t\t\t$item = (typeof value === 'object') ? value : self.getItem(value);\n\t\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\t\ti = self.items.indexOf(value);\n\t\t\n\t\t\t\tif (i !== -1) {\n\t\t\t\t\t$item.remove();\n\t\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tself.items.splice(i, 1);\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tself.refreshState();\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Invokes the `create` method provided in the\n\t\t\t * selectize options that should provide the data\n\t\t\t * for the new item, given the user input.\n\t\t\t *\n\t\t\t * Once this completes, it will be added\n\t\t\t * to the item list.\n\t\t\t *\n\t\t\t * @param {string} value\n\t\t\t * @param {boolean} [triggerDropdown]\n\t\t\t * @param {function} [callback]\n\t\t\t * @return {boolean}\n\t\t\t */\n\t\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\t\tvar self  = this;\n\t\t\t\tvar caret = self.caretPos;\n\t\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\t\n\t\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\t\n\t\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\t\ttriggerDropdown = true;\n\t\t\t\t}\n\t\t\n\t\t\t\tif (!self.canCreate(input)) {\n\t\t\t\t\tcallback();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\n\t\t\t\tself.lock();\n\t\t\n\t\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\t\tvar data = {};\n\t\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\t\t\n\t\t\t\tvar create = once(function(data) {\n\t\t\t\t\tself.unlock();\n\t\t\n\t\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\t\tif (typeof value !== 'string') return callback();\n\t\t\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addOption(data);\n\t\t\t\t\tself.setCaret(caret);\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\t\tcallback(data);\n\t\t\t\t});\n\t\t\n\t\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\t\tcreate(output);\n\t\t\t\t}\n\t\t\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Re-renders the selected item lists.\n\t\t\t */\n\t\t\trefreshItems: function() {\n\t\t\t\tthis.lastQuery = null;\n\t\t\n\t\t\t\tif (this.isSetup) {\n\t\t\t\t\tthis.addItem(this.items);\n\t\t\t\t}\n\t\t\n\t\t\t\tthis.refreshState();\n\t\t\t\tthis.updateOriginalInput();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Updates all state-dependent attributes\n\t\t\t * and CSS classes.\n\t\t\t */\n\t\t\trefreshState: function() {\n\t\t\t\tvar invalid, self = this;\n\t\t\t\tif (self.isRequired) {\n\t\t\t\t\tif (self.items.length) self.isInvalid = false;\n\t\t\t\t\tself.$control_input.prop('required', invalid);\n\t\t\t\t}\n\t\t\t\tself.refreshClasses();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Updates all state-dependent CSS classes.\n\t\t\t */\n\t\t\trefreshClasses: function() {\n\t\t\t\tvar self     = this;\n\t\t\t\tvar isFull   = self.isFull();\n\t\t\t\tvar isLocked = self.isLocked;\n\t\t\n\t\t\t\tself.$wrapper\n\t\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\t\n\t\t\t\tself.$control\n\t\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\t\n\t\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Determines whether or not more items can be added\n\t\t\t * to the control without exceeding the user-defined maximum.\n\t\t\t *\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisFull: function() {\n\t\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Refreshes the original <select> or <input>\n\t\t\t * element to reflect the current state.\n\t\t\t */\n\t\t\tupdateOriginalInput: function(opts) {\n\t\t\t\tvar i, n, options, label, self = this;\n\t\t\t\topts = opts || {};\n\t\t\n\t\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\t\toptions = [];\n\t\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t\t}\n\t\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t\t}\n\t\t\t\t\tself.$input.html(options.join(''));\n\t\t\t\t} else {\n\t\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t\t}\n\t\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\tif (!opts.silent) {\n\t\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Shows/hide the input placeholder depending\n\t\t\t * on if there items in the list already.\n\t\t\t */\n\t\t\tupdatePlaceholder: function() {\n\t\t\t\tif (!this.settings.placeholder) return;\n\t\t\t\tvar $input = this.$control_input;\n\t\t\n\t\t\t\tif (this.items.length) {\n\t\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t\t} else {\n\t\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t\t}\n\t\t\t\t$input.triggerHandler('update', {force: true});\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Shows the autocomplete dropdown containing\n\t\t\t * the available options.\n\t\t\t */\n\t\t\topen: function() {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\t\tself.focus();\n\t\t\t\tself.isOpen = true;\n\t\t\t\tself.refreshState();\n\t\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Closes the autocomplete dropdown menu.\n\t\t\t */\n\t\t\tclose: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tvar trigger = self.isOpen;\n\t\t\n\t\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t}\n\t\t\n\t\t\t\tself.isOpen = false;\n\t\t\t\tself.$dropdown.hide();\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.refreshState();\n\t\t\n\t\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Calculates and applies the appropriate\n\t\t\t * position of the dropdown.\n\t\t\t */\n\t\t\tpositionDropdown: function() {\n\t\t\t\tvar $control = this.$control;\n\t\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\t\toffset.top += $control.outerHeight(true);\n\t\t\n\t\t\t\tthis.$dropdown.css({\n\t\t\t\t\twidth : $control.outerWidth(),\n\t\t\t\t\ttop   : offset.top,\n\t\t\t\t\tleft  : offset.left\n\t\t\t\t});\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Resets / clears all selected items\n\t\t\t * from the control.\n\t\t\t *\n\t\t\t * @param {boolean} silent\n\t\t\t */\n\t\t\tclear: function(silent) {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (!self.items.length) return;\n\t\t\t\tself.$control.children(':not(input)').remove();\n\t\t\t\tself.items = [];\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.setCaret(0);\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.refreshState();\n\t\t\t\tself.showInput();\n\t\t\t\tself.trigger('clear');\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * A helper method for inserting an element\n\t\t\t * at the current caret position.\n\t\t\t *\n\t\t\t * @param {object} $el\n\t\t\t */\n\t\t\tinsertAtCaret: function($el) {\n\t\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\t\tif (caret === 0) {\n\t\t\t\t\tthis.$control.prepend($el);\n\t\t\t\t} else {\n\t\t\t\t\t$(this.$control[0].childNodes[caret]).before($el);\n\t\t\t\t}\n\t\t\t\tthis.setCaret(caret + 1);\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Removes the current selected item(s).\n\t\t\t *\n\t\t\t * @param {object} e (optional)\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tdeleteSelection: function(e) {\n\t\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\t\tselection = getSelection(self.$control_input[0]);\n\t\t\n\t\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t\t}\n\t\t\n\t\t\t\t// determine items that will be removed\n\t\t\t\tvalues = [];\n\t\t\n\t\t\t\tif (self.$activeItems.length) {\n\t\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tif (direction > 0) { caret++; }\n\t\t\n\t\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t\t}\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// allow the callback to abort\n\t\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\n\t\t\t\t// perform removal\n\t\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\t\tself.setCaret(caret);\n\t\t\t\t}\n\t\t\t\twhile (values.length) {\n\t\t\t\t\tself.removeItem(values.pop());\n\t\t\t\t}\n\t\t\n\t\t\t\tself.showInput();\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.refreshOptions(true);\n\t\t\n\t\t\t\t// select previous option\n\t\t\t\tif (option_select) {\n\t\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\t\tif ($option_select.length) {\n\t\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Selects the previous / next item (depending\n\t\t\t * on the `direction` argument).\n\t\t\t *\n\t\t\t * > 0 - right\n\t\t\t * < 0 - left\n\t\t\t *\n\t\t\t * @param {int} direction\n\t\t\t * @param {object} e (optional)\n\t\t\t */\n\t\t\tadvanceSelection: function(direction, e) {\n\t\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (direction === 0) return;\n\t\t\t\tif (self.rtl) direction *= -1;\n\t\t\n\t\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\t\tselection = getSelection(self.$control_input[0]);\n\t\t\n\t\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t\t: selection.start === valueLength;\n\t\t\n\t\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\t\tif ($tail.length) {\n\t\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Moves the caret left / right.\n\t\t\t *\n\t\t\t * @param {int} direction\n\t\t\t * @param {object} e (optional)\n\t\t\t */\n\t\t\tadvanceCaret: function(direction, e) {\n\t\t\t\tvar self = this, fn, $adj;\n\t\t\n\t\t\t\tif (direction === 0) return;\n\t\t\n\t\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\t\tif (self.isShiftDown) {\n\t\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\t\tif ($adj.length) {\n\t\t\t\t\t\tself.hideInput();\n\t\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\t\te && e.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Moves the caret to the specified index.\n\t\t\t *\n\t\t\t * @param {int} i\n\t\t\t */\n\t\t\tsetCaret: function(i) {\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\ti = self.items.length;\n\t\t\t\t} else {\n\t\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t\t}\n\t\t\n\t\t\t\tif(!self.isPending) {\n\t\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t\t// on mobile webkit devices\n\t\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tself.caretPos = i;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Disables user input on the control. Used while\n\t\t\t * items are being asynchronously created.\n\t\t\t */\n\t\t\tlock: function() {\n\t\t\t\tthis.close();\n\t\t\t\tthis.isLocked = true;\n\t\t\t\tthis.refreshState();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Re-enables user input on the control.\n\t\t\t */\n\t\t\tunlock: function() {\n\t\t\t\tthis.isLocked = false;\n\t\t\t\tthis.refreshState();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Disables user input on the control completely.\n\t\t\t * While disabled, it cannot receive focus.\n\t\t\t */\n\t\t\tdisable: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tself.$input.prop('disabled', true);\n\t\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\t\tself.isDisabled = true;\n\t\t\t\tself.lock();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Enables the control so that it can respond\n\t\t\t * to focus and user input.\n\t\t\t */\n\t\t\tenable: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tself.$input.prop('disabled', false);\n\t\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\t\tself.isDisabled = false;\n\t\t\t\tself.unlock();\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Completely destroys the control and\n\t\t\t * unbinds all event listeners so that it can\n\t\t\t * be garbage collected.\n\t\t\t */\n\t\t\tdestroy: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tvar eventNS = self.eventNS;\n\t\t\t\tvar revertSettings = self.revertSettings;\n\t\t\n\t\t\t\tself.trigger('destroy');\n\t\t\t\tself.off();\n\t\t\t\tself.$wrapper.remove();\n\t\t\t\tself.$dropdown.remove();\n\t\t\n\t\t\t\tself.$input\n\t\t\t\t\t.html('')\n\t\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t\t.removeClass('selectized')\n\t\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t\t.show();\n\t\t\n\t\t\t\tself.$control_input.removeData('grow');\n\t\t\t\tself.$input.removeData('selectize');\n\t\t\n\t\t\t\t$(window).off(eventNS);\n\t\t\t\t$(document).off(eventNS);\n\t\t\t\t$(document.body).off(eventNS);\n\t\t\n\t\t\t\tdelete self.$input[0].selectize;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * A helper method for rendering \"item\" and\n\t\t\t * \"option\" templates, given the data.\n\t\t\t *\n\t\t\t * @param {string} templateName\n\t\t\t * @param {object} data\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\trender: function(templateName, data) {\n\t\t\t\tvar value, id, label;\n\t\t\t\tvar html = '';\n\t\t\t\tvar cache = false;\n\t\t\t\tvar self = this;\n\t\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\t\n\t\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\t\tcache = !!value;\n\t\t\t\t}\n\t\t\n\t\t\t\t// pull markup from cache if it exists\n\t\t\t\tif (cache) {\n\t\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t\t}\n\t\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// render markup\n\t\t\t\thtml = self.settings.render[templateName].apply(this, [data, escape_html]);\n\t\t\n\t\t\t\t// add mandatory attributes\n\t\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\t\thtml = html.replace(regex_tag, '<$1 data-selectable');\n\t\t\t\t}\n\t\t\t\tif (templateName === 'optgroup') {\n\t\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\t\thtml = html.replace(regex_tag, '<$1 data-group=\"' + escape_replace(escape_html(id)) + '\"');\n\t\t\t\t}\n\t\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\t\thtml = html.replace(regex_tag, '<$1 data-value=\"' + escape_replace(escape_html(value || '')) + '\"');\n\t\t\t\t}\n\t\t\n\t\t\t\t// update cache\n\t\t\t\tif (cache) {\n\t\t\t\t\tself.renderCache[templateName][value] = html;\n\t\t\t\t}\n\t\t\n\t\t\t\treturn html;\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Clears the render cache for a template. If\n\t\t\t * no template is given, clears all render\n\t\t\t * caches.\n\t\t\t *\n\t\t\t * @param {string} templateName\n\t\t\t */\n\t\t\tclearCache: function(templateName) {\n\t\t\t\tvar self = this;\n\t\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\t\tself.renderCache = {};\n\t\t\t\t} else {\n\t\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Determines whether or not to display the\n\t\t\t * create item prompt, given a user input.\n\t\t\t *\n\t\t\t * @param {string} input\n\t\t\t * @return {boolean}\n\t\t\t */\n\t\t\tcanCreate: function(input) {\n\t\t\t\tvar self = this;\n\t\t\t\tif (!self.settings.create) return false;\n\t\t\t\tvar filter = self.settings.createFilter;\n\t\t\t\treturn input.length\n\t\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t\t}\n\t\t\n\t\t});\n\t\t\n\t\t\n\t\tSelectize.count = 0;\n\t\tSelectize.defaults = {\n\t\t\toptions: [],\n\t\t\toptgroups: [],\n\t\t\n\t\t\tplugins: [],\n\t\t\tdelimiter: ',',\n\t\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\t\tpersist: true,\n\t\t\tdiacritics: true,\n\t\t\tcreate: false,\n\t\t\tcreateOnBlur: false,\n\t\t\tcreateFilter: null,\n\t\t\thighlight: true,\n\t\t\topenOnFocus: true,\n\t\t\tmaxOptions: 1000,\n\t\t\tmaxItems: null,\n\t\t\thideSelected: null,\n\t\t\taddPrecedence: false,\n\t\t\tselectOnTab: false,\n\t\t\tpreload: false,\n\t\t\tallowEmptyOption: false,\n\t\t\tcloseAfterSelect: false,\n\t\t\n\t\t\tscrollDuration: 60,\n\t\t\tloadThrottle: 300,\n\t\t\tloadingClass: 'loading',\n\t\t\n\t\t\tdataAttr: 'data-data',\n\t\t\toptgroupField: 'optgroup',\n\t\t\tvalueField: 'value',\n\t\t\tlabelField: 'text',\n\t\t\toptgroupLabelField: 'label',\n\t\t\toptgroupValueField: 'value',\n\t\t\tlockOptgroupOrder: false,\n\t\t\n\t\t\tsortField: '$order',\n\t\t\tsearchField: ['text'],\n\t\t\tsearchConjunction: 'and',\n\t\t\n\t\t\tmode: null,\n\t\t\twrapperClass: 'selectize-control',\n\t\t\tinputClass: 'selectize-input',\n\t\t\tdropdownClass: 'selectize-dropdown',\n\t\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\t\n\t\t\tdropdownParent: null,\n\t\t\n\t\t\tcopyClassesToDropdown: true,\n\t\t\n\t\t\t/*\n\t\t\tload                 : null, // function(query, callback) { ... }\n\t\t\tscore                : null, // function(search) { ... }\n\t\t\tonInitialize         : null, // function() { ... }\n\t\t\tonChange             : null, // function(value) { ... }\n\t\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\t\tonItemRemove         : null, // function(value) { ... }\n\t\t\tonClear              : null, // function() { ... }\n\t\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\t\tonOptionRemove       : null, // function(value) { ... }\n\t\t\tonOptionClear        : null, // function() { ... }\n\t\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\t\tonOptionGroupClear   : null, // function() { ... }\n\t\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\t\tonType               : null, // function(str) { ... }\n\t\t\tonDelete             : null, // function(values) { ... }\n\t\t\t*/\n\t\t\n\t\t\trender: {\n\t\t\t\t/*\n\t\t\t\titem: null,\n\t\t\t\toptgroup: null,\n\t\t\t\toptgroup_header: null,\n\t\t\t\toption: null,\n\t\t\t\toption_create: null\n\t\t\t\t*/\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t$.fn.selectize = function(settings_user) {\n\t\t\tvar defaults             = $.fn.selectize.defaults;\n\t\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\t\tvar attr_data            = settings.dataAttr;\n\t\t\tvar field_label          = settings.labelField;\n\t\t\tvar field_value          = settings.valueField;\n\t\t\tvar field_optgroup       = settings.optgroupField;\n\t\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\t\n\t\t\t/**\n\t\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t\t *\n\t\t\t * @param {object} $input\n\t\t\t * @param {object} settings_element\n\t\t\t */\n\t\t\tvar init_textbox = function($input, settings_element) {\n\t\t\t\tvar i, n, values, option;\n\t\t\n\t\t\t\tvar data_raw = $input.attr(attr_data);\n\t\t\n\t\t\t\tif (!data_raw) {\n\t\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\t\toption = {};\n\t\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t\t}\n\t\t\t\t\tsettings_element.items = values;\n\t\t\t\t} else {\n\t\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\n\t\t\t/**\n\t\t\t * Initializes selectize from a <select> element.\n\t\t\t *\n\t\t\t * @param {object} $input\n\t\t\t * @param {object} settings_element\n\t\t\t */\n\t\t\tvar init_select = function($input, settings_element) {\n\t\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\t\tvar options = settings_element.options;\n\t\t\t\tvar optionsMap = {};\n\t\t\n\t\t\t\tvar readData = function($el) {\n\t\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t};\n\t\t\n\t\t\t\tvar addOption = function($option, group) {\n\t\t\t\t\t$option = $($option);\n\t\t\n\t\t\t\t\tvar value = hash_key($option.attr('value'));\n\t\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\t\n\t\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\t\tif (group) {\n\t\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\t\n\t\t\t\t\toptionsMap[value] = option;\n\t\t\t\t\toptions.push(option);\n\t\t\n\t\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\n\t\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\t\tvar i, n, id, optgroup, $options;\n\t\t\n\t\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\t\tid = $optgroup.attr('label');\n\t\t\n\t\t\t\t\tif (id) {\n\t\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\n\t\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\t\n\t\t\t\t$children = $input.children();\n\t\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\t\taddOption($children[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\n\t\t\treturn this.each(function() {\n\t\t\t\tif (this.selectize) return;\n\t\t\n\t\t\t\tvar instance;\n\t\t\t\tvar $input = $(this);\n\t\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t\t}\n\t\t\n\t\t\t\tvar settings_element = {\n\t\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t\t'options'     : [],\n\t\t\t\t\t'optgroups'   : [],\n\t\t\t\t\t'items'       : []\n\t\t\t\t};\n\t\t\n\t\t\t\tif (tag_name === 'select') {\n\t\t\t\t\tinit_select($input, settings_element);\n\t\t\t\t} else {\n\t\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t\t}\n\t\t\n\t\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t\t});\n\t\t};\n\t\t\n\t\t$.fn.selectize.defaults = Selectize.defaults;\n\t\t$.fn.selectize.support = {\n\t\t\tvalidity: SUPPORTS_VALIDITY_API\n\t\t};\n\t\t\n\t\t\n\t\tSelectize.define('drag_drop', function(options) {\n\t\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\t\tif (this.settings.mode !== 'multi') return;\n\t\t\tvar self = this;\n\t\t\n\t\t\tself.lock = (function() {\n\t\t\t\tvar original = self.lock;\n\t\t\t\treturn function() {\n\t\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\t\treturn original.apply(self, arguments);\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t\tself.unlock = (function() {\n\t\t\t\tvar original = self.unlock;\n\t\t\t\treturn function() {\n\t\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\t\treturn original.apply(self, arguments);\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t\tself.setup = (function() {\n\t\t\t\tvar original = self.setup;\n\t\t\t\treturn function() {\n\t\t\t\t\toriginal.apply(this, arguments);\n\t\t\n\t\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t});\n\t\t\n\t\tSelectize.define('dropdown_header', function(options) {\n\t\t\tvar self = this;\n\t\t\n\t\t\toptions = $.extend({\n\t\t\t\ttitle         : 'Untitled',\n\t\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\t\n\t\t\t\thtml: function(data) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t\t'</div>'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}, options);\n\t\t\n\t\t\tself.setup = (function() {\n\t\t\t\tvar original = self.setup;\n\t\t\t\treturn function() {\n\t\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t});\n\t\t\n\t\tSelectize.define('optgroup_columns', function(options) {\n\t\t\tvar self = this;\n\t\t\n\t\t\toptions = $.extend({\n\t\t\t\tequalizeWidth  : true,\n\t\t\t\tequalizeHeight : true\n\t\t\t}, options);\n\t\t\n\t\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\t\tvar index    = $options.index($option) + direction;\n\t\t\n\t\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t\t};\n\t\t\n\t\t\tthis.onKeyDown = (function() {\n\t\t\t\tvar original = self.onKeyDown;\n\t\t\t\treturn function(e) {\n\t\t\t\t\tvar index, $option, $options, $optgroup;\n\t\t\n\t\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\t\n\t\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\treturn original.apply(this, arguments);\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t\tvar getScrollbarWidth = function() {\n\t\t\t\tvar div;\n\t\t\t\tvar width = getScrollbarWidth.width;\n\t\t\t\tvar doc = document;\n\t\t\n\t\t\t\tif (typeof width === 'undefined') {\n\t\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\t\tdiv = div.firstChild;\n\t\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\t\tdoc.body.removeChild(div);\n\t\t\t\t}\n\t\t\t\treturn width;\n\t\t\t};\n\t\t\n\t\t\tvar equalizeSizes = function() {\n\t\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\t\n\t\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\t\tn = $optgroups.length;\n\t\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\t\n\t\t\t\tif (options.equalizeHeight) {\n\t\t\t\t\theight_max = 0;\n\t\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t\t}\n\t\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t\t}\n\t\t\n\t\t\t\tif (options.equalizeWidth) {\n\t\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t\t$optgroups.css({width: width});\n\t\t\t\t\tif (n > 1) {\n\t\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\n\t\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t\t}\n\t\t\n\t\t\n\t\t});\n\t\t\n\t\tSelectize.define('remove_button', function(options) {\n\t\t\tif (this.settings.mode === 'single') return;\n\t\t\n\t\t\toptions = $.extend({\n\t\t\t\tlabel     : '&times;',\n\t\t\t\ttitle     : 'Remove',\n\t\t\t\tclassName : 'remove',\n\t\t\t\tappend    : true\n\t\t\t}, options);\n\t\t\n\t\t\tvar self = this;\n\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\t\n\t\t\t/**\n\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t *\n\t\t\t * @param {string} html_container\n\t\t\t * @param {string} html_element\n\t\t\t * @return {string}\n\t\t\t */\n\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t\t};\n\t\t\n\t\t\tthis.setup = (function() {\n\t\t\t\tvar original = self.setup;\n\t\t\t\treturn function() {\n\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\treturn append(render_item.apply(this, arguments), html);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\toriginal.apply(this, arguments);\n\t\t\n\t\t\t\t\t// add event listener\n\t\t\t\t\tthis.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tif (self.isLocked) return;\n\t\t\n\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\n\t\t\t\t};\n\t\t\t})();\n\t\t\n\t\t});\n\t\t\n\t\tSelectize.define('restore_on_backspace', function(options) {\n\t\t\tvar self = this;\n\t\t\n\t\t\toptions.text = options.text || function(option) {\n\t\t\t\treturn option[this.settings.labelField];\n\t\t\t};\n\t\t\n\t\t\tthis.onKeyDown = (function() {\n\t\t\t\tvar original = self.onKeyDown;\n\t\t\t\treturn function(e) {\n\t\t\t\t\tvar index, option;\n\t\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn original.apply(this, arguments);\n\t\t\t\t};\n\t\t\t})();\n\t\t});\n\t\t\n\t\n\t\treturn Selectize;\n\t}));\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * sifter.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\t\n\t(function(root, factory) {\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof exports === 'object') {\n\t\t\tmodule.exports = factory();\n\t\t} else {\n\t\t\troot.Sifter = factory();\n\t\t}\n\t}(this, function() {\n\t\n\t\t/**\n\t\t * Textually searches arrays and hashes of objects\n\t\t * by property (or multiple properties). Designed\n\t\t * specifically for autocomplete.\n\t\t *\n\t\t * @constructor\n\t\t * @param {array|object} items\n\t\t * @param {object} items\n\t\t */\n\t\tvar Sifter = function(items, settings) {\n\t\t\tthis.items = items;\n\t\t\tthis.settings = settings || {diacritics: true};\n\t\t};\n\t\n\t\t/**\n\t\t * Splits a search string into an array of individual\n\t\t * regexps to be used to match results.\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {array}\n\t\t */\n\t\tSifter.prototype.tokenize = function(query) {\n\t\t\tquery = trim(String(query || '').toLowerCase());\n\t\t\tif (!query || !query.length) return [];\n\t\n\t\t\tvar i, n, regex, letter;\n\t\t\tvar tokens = [];\n\t\t\tvar words = query.split(/ +/);\n\t\n\t\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\t\tregex = escape_regex(words[i]);\n\t\t\t\tif (this.settings.diacritics) {\n\t\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttokens.push({\n\t\t\t\t\tstring : words[i],\n\t\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\treturn tokens;\n\t\t};\n\t\n\t\t/**\n\t\t * Iterates over arrays and hashes.\n\t\t *\n\t\t * ```\n\t\t * this.iterator(this.items, function(item, id) {\n\t\t *    // invoked for each item\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * @param {array|object} object\n\t\t */\n\t\tSifter.prototype.iterator = function(object, callback) {\n\t\t\tvar iterator;\n\t\t\tif (is_array(object)) {\n\t\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\titerator = function(callback) {\n\t\t\t\t\tfor (var key in this) {\n\t\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\titerator.apply(object, [callback]);\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a function to be used to score individual results.\n\t\t *\n\t\t * Good matches will have a higher score than poor matches.\n\t\t * If an item is not a match, 0 will be returned by the function.\n\t\t *\n\t\t * @param {object|string} search\n\t\t * @param {object} options (optional)\n\t\t * @returns {function}\n\t\t */\n\t\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\t\tvar self, fields, tokens, token_count;\n\t\n\t\t\tself        = this;\n\t\t\tsearch      = self.prepareSearch(search, options);\n\t\t\ttokens      = search.tokens;\n\t\t\tfields      = search.options.fields;\n\t\t\ttoken_count = tokens.length;\n\t\n\t\t\t/**\n\t\t\t * Calculates how close of a match the\n\t\t\t * given value is against a search token.\n\t\t\t *\n\t\t\t * @param {mixed} value\n\t\t\t * @param {object} token\n\t\t\t * @return {number}\n\t\t\t */\n\t\t\tvar scoreValue = function(value, token) {\n\t\t\t\tvar score, pos;\n\t\n\t\t\t\tif (!value) return 0;\n\t\t\t\tvalue = String(value || '');\n\t\t\t\tpos = value.search(token.regex);\n\t\t\t\tif (pos === -1) return 0;\n\t\t\t\tscore = token.string.length / value.length;\n\t\t\t\tif (pos === 0) score += 0.5;\n\t\t\t\treturn score;\n\t\t\t};\n\t\n\t\t\t/**\n\t\t\t * Calculates the score of an object\n\t\t\t * against the search query.\n\t\t\t *\n\t\t\t * @param {object} token\n\t\t\t * @param {object} data\n\t\t\t * @return {number}\n\t\t\t */\n\t\t\tvar scoreObject = (function() {\n\t\t\t\tvar field_count = fields.length;\n\t\t\t\tif (!field_count) {\n\t\t\t\t\treturn function() { return 0; };\n\t\t\t\t}\n\t\t\t\tif (field_count === 1) {\n\t\t\t\t\treturn function(token, data) {\n\t\t\t\t\t\treturn scoreValue(data[fields[0]], token);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\t\tsum += scoreValue(data[fields[i]], token);\n\t\t\t\t\t}\n\t\t\t\t\treturn sum / field_count;\n\t\t\t\t};\n\t\t\t})();\n\t\n\t\t\tif (!token_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (token_count === 1) {\n\t\t\t\treturn function(data) {\n\t\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tif (search.options.conjunction === 'and') {\n\t\t\t\treturn function(data) {\n\t\t\t\t\tvar score;\n\t\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\t\tsum += score;\n\t\t\t\t\t}\n\t\t\t\t\treturn sum / token_count;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn function(data) {\n\t\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t\t}\n\t\t\t\t\treturn sum / token_count;\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a function that can be used to compare two\n\t\t * results, for sorting purposes. If no sorting should\n\t\t * be performed, `null` will be returned.\n\t\t *\n\t\t * @param {string|object} search\n\t\t * @param {object} options\n\t\t * @return function(a,b)\n\t\t */\n\t\tSifter.prototype.getSortFunction = function(search, options) {\n\t\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\t\n\t\t\tself   = this;\n\t\t\tsearch = self.prepareSearch(search, options);\n\t\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\t\n\t\t\t/**\n\t\t\t * Fetches the specified sort field value\n\t\t\t * from a search result item.\n\t\t\t *\n\t\t\t * @param  {string} name\n\t\t\t * @param  {object} result\n\t\t\t * @return {mixed}\n\t\t\t */\n\t\t\tget_field = function(name, result) {\n\t\t\t\tif (name === '$score') return result.score;\n\t\t\t\treturn self.items[result.id][name];\n\t\t\t};\n\t\n\t\t\t// parse options\n\t\t\tfields = [];\n\t\t\tif (sort) {\n\t\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// the \"$score\" field is implied to be the primary\n\t\t\t// sort field, unless it's manually specified\n\t\t\tif (search.query) {\n\t\t\t\timplicit_score = true;\n\t\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\t\timplicit_score = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (implicit_score) {\n\t\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tmultipliers = [];\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t\t}\n\t\n\t\t\t// build function\n\t\t\tfields_count = fields.length;\n\t\t\tif (!fields_count) {\n\t\t\t\treturn null;\n\t\t\t} else if (fields_count === 1) {\n\t\t\t\tfield = fields[0].field;\n\t\t\t\tmultiplier = multipliers[0];\n\t\t\t\treturn function(a, b) {\n\t\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn function(a, b) {\n\t\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (result) return result;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Parses a search query and returns an object\n\t\t * with tokens and fields ready to be populated\n\t\t * with results.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @returns {object}\n\t\t */\n\t\tSifter.prototype.prepareSearch = function(query, options) {\n\t\t\tif (typeof query === 'object') return query;\n\t\n\t\t\toptions = extend({}, options);\n\t\n\t\t\tvar option_fields     = options.fields;\n\t\t\tvar option_sort       = options.sort;\n\t\t\tvar option_sort_empty = options.sort_empty;\n\t\n\t\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\t\n\t\t\treturn {\n\t\t\t\toptions : options,\n\t\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\t\ttokens  : this.tokenize(query),\n\t\t\t\ttotal   : 0,\n\t\t\t\titems   : []\n\t\t\t};\n\t\t};\n\t\n\t\t/**\n\t\t * Searches through all items and returns a sorted array of matches.\n\t\t *\n\t\t * The `options` parameter can contain:\n\t\t *\n\t\t *   - fields {string|array}\n\t\t *   - sort {array}\n\t\t *   - score {function}\n\t\t *   - filter {bool}\n\t\t *   - limit {integer}\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - options {object}\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @returns {object}\n\t\t */\n\t\tSifter.prototype.search = function(query, options) {\n\t\t\tvar self = this, value, score, search, calculateScore;\n\t\t\tvar fn_sort;\n\t\t\tvar fn_score;\n\t\n\t\t\tsearch  = this.prepareSearch(query, options);\n\t\t\toptions = search.options;\n\t\t\tquery   = search.query;\n\t\n\t\t\t// generate result scoring function\n\t\t\tfn_score = options.score || self.getScoreFunction(search);\n\t\n\t\t\t// perform search and sort\n\t\t\tif (query.length) {\n\t\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\t\tscore = fn_score(item);\n\t\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tfn_sort = self.getSortFunction(search, options);\n\t\t\tif (fn_sort) search.items.sort(fn_sort);\n\t\n\t\t\t// apply limits\n\t\t\tsearch.total = search.items.length;\n\t\t\tif (typeof options.limit === 'number') {\n\t\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t\t}\n\t\n\t\t\treturn search;\n\t\t};\n\t\n\t\t// utilities\n\t\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t\tvar cmp = function(a, b) {\n\t\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t\t}\n\t\t\ta = asciifold(String(a || ''));\n\t\t\tb = asciifold(String(b || ''));\n\t\t\tif (a > b) return 1;\n\t\t\tif (b > a) return -1;\n\t\t\treturn 0;\n\t\t};\n\t\n\t\tvar extend = function(a, b) {\n\t\t\tvar i, n, k, object;\n\t\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\t\tobject = arguments[i];\n\t\t\t\tif (!object) continue;\n\t\t\t\tfor (k in object) {\n\t\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\t\ta[k] = object[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\t\n\t\tvar trim = function(str) {\n\t\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t\t};\n\t\n\t\tvar escape_regex = function(str) {\n\t\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t\t};\n\t\n\t\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t\t};\n\t\n\t\tvar DIACRITICS = {\n\t\t\t'a': '[aÀÁÂÃÄÅàáâãäåĀāąĄ]',\n\t\t\t'c': '[cÇçćĆčČ]',\n\t\t\t'd': '[dđĐďĎð]',\n\t\t\t'e': '[eÈÉÊËèéêëěĚĒēęĘ]',\n\t\t\t'i': '[iÌÍÎÏìíîïĪī]',\n\t\t\t'l': '[lłŁ]',\n\t\t\t'n': '[nÑñňŇńŃ]',\n\t\t\t'o': '[oÒÓÔÕÕÖØòóôõöøŌō]',\n\t\t\t'r': '[rřŘ]',\n\t\t\t's': '[sŠšśŚ]',\n\t\t\t't': '[tťŤ]',\n\t\t\t'u': '[uÙÚÛÜùúûüůŮŪū]',\n\t\t\t'y': '[yŸÿýÝ]',\n\t\t\t'z': '[zŽžżŻźŹ]'\n\t\t};\n\t\n\t\tvar asciifold = (function() {\n\t\t\tvar i, n, k, chunk;\n\t\t\tvar foreignletters = '';\n\t\t\tvar lookup = {};\n\t\t\tfor (k in DIACRITICS) {\n\t\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\t\tforeignletters += chunk;\n\t\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\t\treturn function(str) {\n\t\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\t\treturn lookup[foreignletter];\n\t\t\t\t}).toLowerCase();\n\t\t\t};\n\t\t})();\n\t\n\t\n\t\t// export\n\t\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t\treturn Sifter;\n\t}));\n\t\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * microplugin.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\t\n\t(function(root, factory) {\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof exports === 'object') {\n\t\t\tmodule.exports = factory();\n\t\t} else {\n\t\t\troot.MicroPlugin = factory();\n\t\t}\n\t}(this, function() {\n\t\tvar MicroPlugin = {};\n\t\n\t\tMicroPlugin.mixin = function(Interface) {\n\t\t\tInterface.plugins = {};\n\t\n\t\t\t/**\n\t\t\t * Initializes the listed plugins (with options).\n\t\t\t * Acceptable formats:\n\t\t\t *\n\t\t\t * List (without options):\n\t\t\t *   ['a', 'b', 'c']\n\t\t\t *\n\t\t\t * List (with options):\n\t\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t\t *\n\t\t\t * Hash (with options):\n\t\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t\t *\n\t\t\t * @param {mixed} plugins\n\t\t\t */\n\t\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\t\tvar i, n, key;\n\t\t\t\tvar self  = this;\n\t\t\t\tvar queue = [];\n\t\n\t\t\t\tself.plugins = {\n\t\t\t\t\tnames     : [],\n\t\t\t\t\tsettings  : {},\n\t\t\t\t\trequested : {},\n\t\t\t\t\tloaded    : {}\n\t\t\t\t};\n\t\n\t\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (plugins) {\n\t\t\t\t\tfor (key in plugins) {\n\t\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\twhile (queue.length) {\n\t\t\t\t\tself.require(queue.shift());\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\t\tvar self    = this;\n\t\t\t\tvar plugins = self.plugins;\n\t\t\t\tvar plugin  = Interface.plugins[name];\n\t\n\t\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t\t}\n\t\n\t\t\t\tplugins.requested[name] = true;\n\t\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\t\tplugins.names.push(name);\n\t\t\t};\n\t\n\t\t\t/**\n\t\t\t * Initializes a plugin.\n\t\t\t *\n\t\t\t * @param {string} name\n\t\t\t */\n\t\t\tInterface.prototype.require = function(name) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar plugins = self.plugins;\n\t\n\t\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t\t}\n\t\t\t\t\tself.loadPlugin(name);\n\t\t\t\t}\n\t\n\t\t\t\treturn plugins.loaded[name];\n\t\t\t};\n\t\n\t\t\t/**\n\t\t\t * Registers a plugin.\n\t\t\t *\n\t\t\t * @param {string} name\n\t\t\t * @param {function} fn\n\t\t\t */\n\t\t\tInterface.define = function(name, fn) {\n\t\t\t\tInterface.plugins[name] = {\n\t\t\t\t\t'name' : name,\n\t\t\t\t\t'fn'   : fn\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\n\t\tvar utils = {\n\t\t\tisArray: Array.isArray || function(vArg) {\n\t\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t\t}\n\t\t};\n\t\n\t\treturn MicroPlugin;\n\t}));\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _jquery = __webpack_require__(7);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\t__webpack_require__(9);\n\t\n\tvar taxonomy,\n\t    elementData,\n\t    $element,\n\t    TemplateEngine = __webpack_require__(5);\n\t\n\tvar defaultSettings = {\n\t    plugins: ['remove_button'],\n\t    maxItems: 5,\n\t    valueField: 'url',\n\t    labelField: 'name',\n\t    searchField: 'name',\n\t    create: false,\n\t    render: {\n\t        'item': renderItem,\n\t        'option': renderOption\n\t    },\n\t    load: loadItems\n\t};\n\t\n\tvar defaultTemplates = {\n\t    'item': '<div><span><img src=\"<%this.image%>\" alt=\"<%this.name%>\"></span> <span><%this.name%></span></div>',\n\t    'option': '<div class=\"item-float-notification\"><span><img src=\"<%this.image%>\" alt=\"<%this.name%>\"></span> <span><%this.name%></span></div>'\n\t};\n\t\n\tfunction renderItem(item) {\n\t\n\t    var $element = (0, _jquery2['default'])(this.$input);\n\t    var renderTemplate = defaultTemplates.item;\n\t    var elementData = $element.data();\n\t    if ('templateItem' in elementData && (0, _jquery2['default'])(elementData.templateItem).length) {\n\t        renderTemplate = (0, _jquery2['default'])(elementData.templateItem).html();\n\t    }\n\t\n\t    return TemplateEngine(renderTemplate, item);\n\t}\n\t\n\tfunction renderOption(item, escape) {\n\t\n\t    var $element = (0, _jquery2['default'])(this.$input);\n\t    var renderTemplate = defaultTemplates.option;\n\t    var elementData = $element.data();\n\t    if ('templateOption' in elementData && (0, _jquery2['default'])(elementData.templateOption).length) {\n\t        renderTemplate = (0, _jquery2['default'])(elementData.templateOption).html();\n\t    }\n\t\n\t    return TemplateEngine(renderTemplate, item);\n\t}\n\t\n\tfunction loadItems(query, callback) {\n\t\n\t    var options = (0, _jquery2['default'])(this.$input).data();\n\t\n\t    if (!query.length) {\n\t        return callback();\n\t    }\n\t\n\t    var _data = {};\n\t    _data[this.settings.searchField] = query;\n\t\n\t    _jquery2['default'].ajax({\n\t        url: options.url,\n\t        data: _data,\n\t        type: options.method || 'GET',\n\t        error: function error() {\n\t            callback();\n\t        },\n\t        success: function success(res) {\n\t            callback(res);\n\t        }\n\t    });\n\t}\n\t\n\ttaxonomy = function (element) {\n\t    $element = (0, _jquery2['default'])(element);\n\t    elementData = $element.data();\n\t    var selectizeSettings = _jquery2['default'].extend({}, defaultSettings, elementData);\n\t    (0, _jquery2['default'])(element).selectize(selectizeSettings);\n\t};\n\t\n\texports['default'] = taxonomy;\n\tmodule.exports = exports['default'];\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** 1.1.js\n **/","var map = {\n\t\"./TemplateEngine\": 5,\n\t\"./TemplateEngine.js\": 5,\n\t\"./dropzoneUploader\": 6,\n\t\"./dropzoneUploader.js\": 6,\n\t\"./index\": 3,\n\t\"./index.js\": 3,\n\t\"./tagger\": 8,\n\t\"./tagger.js\": 8,\n\t\"./taxonomy\": 12,\n\t\"./taxonomy.js\": 12\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./asyncModules ^\\.\\/.*$\n ** module id = 4\n ** module chunks = 1\n **/","module.exports = function(html, options) {\n\tvar re = /<%(.+?)%>/g, \n\t\treExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g, \n\t\tcode = 'with(obj) { var r=[];\\n', \n\t\tcursor = 0, \n\t\tresult;\n\tvar add = function(line, js) {\n\t\tjs? (code += line.match(reExp) ? line + '\\n' : 'r.push(' + line + ');\\n') :\n\t\t\t(code += line != '' ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : '');\n\t\treturn add;\n\t}\n\tvar match = re.exec(html);\n\twhile(match) {\n\t\tadd(html.slice(cursor, match.index))(match[1], true);\n\t\tcursor = match.index + match[0].length;\n\t\tmatch = re.exec(html);\n\t}\n\tadd(html.substr(cursor, html.length - cursor));\n\tcode = (code + 'return r.join(\"\"); }').replace(/[\\r\\t\\n]/g, '');\n\ttry { result = new Function('obj', code).apply(options, [options]); }\n\tcatch(err) { console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\"); }\n\treturn result;\n};\n\n\n/** WEBPACK FOOTER **\n ** ./asyncModules/TemplateEngine.js\n **/","'use strict'\n\n// Dependecies\nconst $ =  require('jquery')\n\nvar module = (element) => {\n  const dropZone = $(element)\n  let $input = dropZone.find('input') // TODO: Change this selector name\n  let $altInput = dropZone.find('[data-trigger=\"file\"]')\n  let defaultImage = dropZone.data('original-image')\n\n  if(defaultImage){\n      fakeLoad('Imagem Padrão', defaultImage)\n  }\n\n  dropZone.on({\n    dragover: cbDragOver,\n    dragleave: cbDragLeave,\n    drop: cbDrop\n  })\n\n  $input.on({\n    change: cbChangeFile\n  })\n\n  $altInput.on({\n    click: cbTriggerFile\n  })\n\n  function cbDragOver (event) {\n    console.log('Make some when file is over of element')\n    dropZone.addClass('hover')\n    return false\n  }\n\n  function cbDragLeave (event) {\n    console.log('Make some when file is leaved of element')\n    dropZone.removeClass('hover')\n    return false\n  }\n\n  function cbDrop (event) {\n    let file = event.originalEvent.dataTransfer.files[0]\n\n    event.stopPropagation()\n    event.preventDefault()\n    dropZone.removeClass('hover')\n\n    readFile(file)\n    $input.files = file\n    $input.val('')\n    return false\n  }\n\n  function cbChangeFile (event) {\n    readFile(this.files[0])\n    return false\n  }\n\n  function cbTriggerFile (event) {\n    $input.trigger('click')\n  }\n\n}\n\nvar fakeLoad = function(name, src){\n  var image = $('<img/>')\n      .load(function() {\n          createPreview(name, getCanvasImage(this))\n      })\n      .attr('src', src);\n}\n\nvar readFile = function (file) {\n  var reader = new FileReader();\n\n  reader.onload = function(e) {\n      fakeLoad(file.name, e.target.result)\n  }\n  reader.readAsDataURL(file);\n}\n\nvar getCanvasImage = function(image) {\n\n  let imgWidth = 500,\n      imgHeight = 500;\n\n  let canvas = document.createElement('canvas');\n  canvas.width = imgWidth;\n  canvas.height = imgHeight;\n\n  let ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, imgWidth, imgHeight);\n\n  return canvas.toDataURL('image/jpeg');\n}\n\nvar createPreview = function(filename, newURL) {\n  let fileName = filename.substr(0, filename.lastIndexOf('.')) //subtract file extension\n  let filePath = newURL\n  let image = `<img src=\"${filePath}\" class=\"img-responsive\" alt=\"${fileName}\"/>`\n  //append new image through jQuery Template\n  $('[data-content=\"file\"]').html(image).show()\n  $('.custom-file-content').hide()\n}\n\nexport default module\n\n\n/** WEBPACK FOOTER **\n ** ./asyncModules/dropzoneUploader.js\n **/","'use strict'\n\nimport $ from 'jquery'\nrequire('selectize')\n\nconst [suggest] = [{\n  plugins: ['remove_button']\n  , maxItems: 5\n  , valueField: 'id'\n  , labelField: 'name'\n  , searchField: 'name'\n  , create: false\n  , render: {\n    item: templateItem\n    , option: templateOption\n  }\n  , load: loadUsers\n}]\n\nvar tagger = (element) => {\n    var type = $(element).data('taggerType')\n    switch (type) {\n        case 'suggest':\n            $(element).selectize(suggest)\n    }\n}\n\nfunction templateItem (item, escape) {\n  let name = item.name ? escape(item.name) : ''\n  return `<div>${name}</div>`\n}\nfunction templateOption (item, escape) {\n  let name = item.name ? escape(item.name) : ''\n  return `<div class=\"item-float-notification\">\n    <span><img src=\"${item.img}\" alt=\"${name}\"></span>\n    <span>${name}</span>\n  </div>`\n}\n\nfunction loadUsers(query, callback) {\n    var options = this.$wrapper.prev().data();\n    if (!query.length) {\n        return callback()\n    }\n    $.ajax({\n        url: options.url,\n        type: 'GET',\n        data: {\n            criteria: query\n        },\n        error: function () {\n            callback()\n        },\n        success: function (res) {\n            callback(res.users);\n        }\n    })\n}\n\n\nexport default tagger\n\n\n/** WEBPACK FOOTER **\n ** ./asyncModules/tagger.js\n **/","/**\n * selectize.js (v0.12.1)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['jquery','sifter','microplugin'], factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t} else {\n\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t}\n}(this, function($, Sifter, MicroPlugin) {\n\t'use strict';\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\t\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\t\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\t\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\t\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\t\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\t\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('form').validity;\n\t\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\t\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\t\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\t\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\t\n\tvar hook = {};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\t\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\t\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\t\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\t\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\t\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\t\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar $test = $('<test>').css({\n\t\t\tposition: 'absolute',\n\t\t\ttop: -99999,\n\t\t\tleft: -99999,\n\t\t\twidth: 'auto',\n\t\t\tpadding: 0,\n\t\t\twhiteSpace: 'pre'\n\t\t}).text(str).appendTo('body');\n\t\n\t\ttransferStyles($parent, $test, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\t\n\t\tvar width = $test.width();\n\t\t$test.remove();\n\t\n\t\treturn width;\n\t};\n\t\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\t\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\t\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 97 && keyCode <= 122) || // a-z\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)  || // A-Z\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\t\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\t\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\t\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\t\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\t\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\t\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\t\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\t\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\t\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\t\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\t\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\t\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\t\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\tMicroEvent.mixin(Selectize);\n\tMicroPlugin.mixin(Selectize);\n\t\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t$.extend(Selectize.prototype, {\n\t\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\t\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\t\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\t\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\t\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\t\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\t\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\t\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\t\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tautoGrow($control_input);\n\t\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\t\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\t\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\t\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\t\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\t\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\t\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\t\n\t\t\tself.on('change', this.onChange);\n\t\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\t\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\t\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\t\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t\t\tif (!self.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\t\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t} else {\n\t\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t\t// input and create Items for each separate value\n\t\t\t\tif (self.settings.splitOn) {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tvar splitInput = $.trim(self.$control_input.val() || '').split(self.settings.splitOn);\n\t\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is debounced in the Selectize\n\t\t * constructor (by `settings.loadDelay` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\t\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\n\t\t\tif (!wasFocused) self.trigger('focus');\n\t\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\t\n\t\t\tself.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\t\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\t\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\t(dest || document.body).focus();\n\t\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\t\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\t\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\t\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\t\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\t\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\t\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\t\n\t\t\tself.$activeOption = $option.addClass('active');\n\t\n\t\t\tif (scroll || !isset(scroll)) {\n\t\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\t\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\t\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\t\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\t\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\t\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\t\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\t\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\t\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\t\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\t\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\t\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\t\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = [];\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].push(option_html);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = [];\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = self.render('optgroup_header', self.optgroups[optgroup]) || '';\n\t\t\t\t\thtml_children += groups[optgroup].join('');\n\t\t\t\t\thtml.push(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.push(groups[optgroup].join(''));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$dropdown_content.html(html.join(''));\n\t\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight && results.query.length && results.tokens.length) {\n\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\t\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\t\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\tif (!key || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\t\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\n\t\t\tvalue     = hash_key(value);\n\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\n\t\t\torder_old = self.options[value].$order;\n\t\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\t\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\t\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\t\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\t\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\t\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\t\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tself.options = self.sifter.items = {};\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t\tself.clear();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\t\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn $();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = hash_key(value);\n\t\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\t\n\t\t\t$item = (typeof value === 'object') ? value : self.getItem(value);\n\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\t\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\t\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tself.lock();\n\t\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\t\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\t\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\t\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tvar invalid, self = this;\n\t\t\tif (self.isRequired) {\n\t\t\t\tif (self.items.length) self.isInvalid = false;\n\t\t\t\tself.$control_input.prop('required', invalid);\n\t\t\t}\n\t\t\tself.refreshClasses();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\t\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\t\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\t\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\t\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\t\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\t\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t}\n\t\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\t\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\t\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control.outerWidth(),\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tif (caret === 0) {\n\t\t\t\tthis.$control.prepend($el);\n\t\t\t} else {\n\t\t\t\t$(this.$control[0].childNodes[caret]).before($el);\n\t\t\t}\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\t\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\t\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\t\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\t\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\t\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\t\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\t\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\t\n\t\t\tif (direction === 0) return;\n\t\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\t\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.caretPos = i;\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\t\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\t\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\t\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\t\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\t\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\t\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\t\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\t\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// render markup\n\t\t\thtml = self.settings.render[templateName].apply(this, [data, escape_html]);\n\t\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\thtml = html.replace(regex_tag, '<$1 data-selectable');\n\t\t\t}\n\t\t\tif (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml = html.replace(regex_tag, '<$1 data-group=\"' + escape_replace(escape_html(id)) + '\"');\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml = html.replace(regex_tag, '<$1 data-value=\"' + escape_replace(escape_html(value || '')) + '\"');\n\t\t\t}\n\t\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html;\n\t\t\t}\n\t\n\t\t\treturn html;\n\t\t},\n\t\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\t\n\t});\n\t\n\t\n\tSelectize.count = 0;\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\t\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\t\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\t\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\t\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\t\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\n\t\tdropdownParent: null,\n\t\n\t\tcopyClassesToDropdown: true,\n\t\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\t\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\t\n\t\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\t\n\t\t\tvar data_raw = $input.attr(attr_data);\n\t\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\t\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\t\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\t\n\t\t\t\tvar value = hash_key($option.attr('value'));\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\t\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\t\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\t\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\t\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\t\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\t\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\t\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\t\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\t\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: SUPPORTS_VALIDITY_API\n\t};\n\t\n\t\n\tSelectize.define('drag_drop', function(options) {\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\tif (this.settings.mode !== 'multi') return;\n\t\tvar self = this;\n\t\n\t\tself.lock = (function() {\n\t\t\tvar original = self.lock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.unlock = (function() {\n\t\t\tvar original = self.unlock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t},\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('dropdown_header', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\ttitle         : 'Untitled',\n\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\n\t\t\thtml: function(data) {\n\t\t\t\treturn (\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t}\n\t\t}, options);\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\t\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\t\n\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\t\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\t\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\t\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\t\n\t\n\t});\n\t\n\tSelectize.define('remove_button', function(options) {\n\t\tif (this.settings.mode === 'single') return;\n\t\n\t\toptions = $.extend({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, options);\n\t\n\t\tvar self = this;\n\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t/**\n\t\t * Appends an element as a child (with raw HTML).\n\t\t *\n\t\t * @param {string} html_container\n\t\t * @param {string} html_element\n\t\t * @return {string}\n\t\t */\n\t\tvar append = function(html_container, html_element) {\n\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t};\n\t\n\t\tthis.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\tif (options.append) {\n\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\treturn append(render_item.apply(this, arguments), html);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\t// add event listener\n\t\t\t\tthis.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('restore_on_backspace', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions.text = options.text || function(option) {\n\t\t\treturn option[this.settings.labelField];\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, option;\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t});\n\t\n\n\treturn Selectize;\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /home/raphael/workspace/rede_gsti/resources/~/selectize/dist/js/selectize.js\n ** module id = 9\n ** module chunks = 1\n **/","/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.Sifter = factory();\n\t}\n}(this, function() {\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tvar Sifter = function(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\tSifter.prototype.tokenize = function(query) {\n\t\tquery = trim(String(query || '').toLowerCase());\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\tSifter.prototype.iterator = function(object, callback) {\n\t\tvar iterator;\n\t\tif (is_array(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @param {object|string} search\n\t * @param {object} options (optional)\n\t * @returns {function}\n\t */\n\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\tvar self, fields, tokens, token_count;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(search, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(data[fields[0]], token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(data[fields[i]], token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @param {object} options\n\t * @return function(a,b)\n\t */\n\tSifter.prototype.getSortFunction = function(search, options) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {mixed}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn self.items[result.id][name];\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.prepareSearch = function(query, options) {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = extend({}, options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t * The `options` parameter can contain:\n\t *\n\t *   - fields {string|array}\n\t *   - sort {array}\n\t *   - score {function}\n\t *   - filter {bool}\n\t *   - limit {integer}\n\t *\n\t * Returns an object containing:\n\t *\n\t *   - options {object}\n\t *   - query {string}\n\t *   - tokens {array}\n\t *   - total {int}\n\t *   - items {array}\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.search = function(query, options) {\n\t\tvar self = this, value, score, search, calculateScore;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n\n\t// utilities\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tvar cmp = function(a, b) {\n\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t}\n\t\ta = asciifold(String(a || ''));\n\t\tb = asciifold(String(b || ''));\n\t\tif (a > b) return 1;\n\t\tif (b > a) return -1;\n\t\treturn 0;\n\t};\n\n\tvar extend = function(a, b) {\n\t\tvar i, n, k, object;\n\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\tobject = arguments[i];\n\t\t\tif (!object) continue;\n\t\t\tfor (k in object) {\n\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\ta[k] = object[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\n\tvar trim = function(str) {\n\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t};\n\n\tvar escape_regex = function(str) {\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t};\n\n\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t};\n\n\tvar DIACRITICS = {\n\t\t'a': '[aÀÁÂÃÄÅàáâãäåĀāąĄ]',\n\t\t'c': '[cÇçćĆčČ]',\n\t\t'd': '[dđĐďĎð]',\n\t\t'e': '[eÈÉÊËèéêëěĚĒēęĘ]',\n\t\t'i': '[iÌÍÎÏìíîïĪī]',\n\t\t'l': '[lłŁ]',\n\t\t'n': '[nÑñňŇńŃ]',\n\t\t'o': '[oÒÓÔÕÕÖØòóôõöøŌō]',\n\t\t'r': '[rřŘ]',\n\t\t's': '[sŠšśŚ]',\n\t\t't': '[tťŤ]',\n\t\t'u': '[uÙÚÛÜùúûüůŮŪū]',\n\t\t'y': '[yŸÿýÝ]',\n\t\t'z': '[zŽžżŻźŹ]'\n\t};\n\n\tvar asciifold = (function() {\n\t\tvar i, n, k, chunk;\n\t\tvar foreignletters = '';\n\t\tvar lookup = {};\n\t\tfor (k in DIACRITICS) {\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\tforeignletters += chunk;\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\treturn function(str) {\n\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\treturn lookup[foreignletter];\n\t\t\t}).toLowerCase();\n\t\t};\n\t})();\n\n\n\t// export\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\treturn Sifter;\n}));\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /home/raphael/workspace/rede_gsti/resources/~/selectize/~/sifter/sifter.js\n ** module id = 10\n ** module chunks = 1\n **/","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.MicroPlugin = factory();\n\t}\n}(this, function() {\n\tvar MicroPlugin = {};\n\n\tMicroPlugin.mixin = function(Interface) {\n\t\tInterface.plugins = {};\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {mixed} plugins\n\t\t */\n\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t};\n\n\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t};\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\tInterface.prototype.require = function(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tInterface.define = function(name, fn) {\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t};\n\t};\n\n\tvar utils = {\n\t\tisArray: Array.isArray || function(vArg) {\n\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t}\n\t};\n\n\treturn MicroPlugin;\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /home/raphael/workspace/rede_gsti/resources/~/selectize/~/microplugin/src/microplugin.js\n ** module id = 11\n ** module chunks = 1\n **/","'use strict';\n\nrequire('selectize');\n\nimport $ from 'jquery';\n\nvar taxonomy,\n    elementData,\n    $element,\n    TemplateEngine = require('./TemplateEngine');\n\nvar defaultSettings = {\n    plugins: ['remove_button'],\n    maxItems: 5,\n    valueField: 'url',\n    labelField: 'name',\n    searchField: 'name',\n    create: false,\n    render: {\n        'item': renderItem,\n        'option': renderOption\n    },\n    load: loadItems\n};\n\nvar defaultTemplates = {\n    'item': '<div><span><img src=\"<%this.image%>\" alt=\"<%this.name%>\"></span> <span><%this.name%></span></div>',\n    'option': '<div class=\"item-float-notification\"><span><img src=\"<%this.image%>\" alt=\"<%this.name%>\"></span> <span><%this.name%></span></div>'\n};\n\nfunction renderItem(item){\n\n    var $element = $(this.$input);\n    var renderTemplate = defaultTemplates.item;\n    var elementData = $element.data();\n    if('templateItem' in elementData && $(elementData.templateItem).length){\n        renderTemplate = $(elementData.templateItem).html();\n    }\n\n    return TemplateEngine(renderTemplate, item);\n}\n\nfunction renderOption(item, escape){\n\n    var $element = $(this.$input);\n    var renderTemplate = defaultTemplates.option;\n    var elementData = $element.data();\n    if('templateOption' in elementData && $(elementData.templateOption).length){\n        renderTemplate = $(elementData.templateOption).html();\n    }\n\n    return TemplateEngine(renderTemplate, item);\n\n}\n\nfunction loadItems(query, callback) {\n\n    var options = $(this.$input).data();\n\n    if(!query.length){\n        return callback();\n    }\n\n    var _data = {};\n    _data[this.settings.searchField] = query;\n\n    $.ajax({\n        url: options.url,\n        data: _data,\n        type: options.method || 'GET',\n        error: function(){\n            callback()\n        },\n        success: function(res){\n            callback(res);\n        }\n    });\n}\n\ntaxonomy = (element) => {\n    $element = $(element);\n    elementData = $element.data();\n    var selectizeSettings = $.extend({}, defaultSettings, elementData);\n    $(element).selectize(selectizeSettings);\n};\n\nexport default taxonomy\n\n\n/** WEBPACK FOOTER **\n ** ./asyncModules/taxonomy.js\n **/"],"sourceRoot":""}