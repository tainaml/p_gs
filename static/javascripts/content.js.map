{"version":3,"sources":["webpack:///content.js","webpack:///./content.js","webpack:///./components/comments/index.js","webpack:///./components/comments/jquery.render-list.js","webpack:////projects/rede_gsti/resources/~/jscroll/jquery.jscroll.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","1","2","_interopRequireDefault","obj","__esModule","default","setData","$form","data","$divToUpdate","action","$form_to_hide","parent","append","template","prepend","removeClass","reset","$element","_jquery2","replaceWith","find","summernote","refreshEditors","$preInComment","each","index","element","Prism","highlightElement","_jquery","form_submit","event","this","$subforms","i","value","$subform","IdeiaAjaxForm","on","$dataList","renderList","refreshAsyncLike","functionOpenModalToDelete","e","preventDefault","$btn","currentTarget","$modal","attr","val","html","modal","functionAjaxSuccessDeleteItem","$this","closest","itemId","itemType","fadeOut","remove","commentDropDown","stopPropagation","xhr_contents","$comment_form","document","88","Plugin","options","settings","extend","defaults","_defaults","_name","pluginName","init","propertyName","prototype","console","log","attachList","url","get","done","fail","always","fn","89","jQuery","$","jscroll","debug","autoTrigger","autoTriggerUntil","loadingHtml","loadingFunction","padding","nextSelector","contentSelector","pagingSelector","callback","jScroll","$e","_data","_userOptions","_options","_isWindow","css","_$next","first","_$window","window","_$body","_$scroll","_nextHref","trim","_preloadImage","src","filter","image","Image","_wrapInnerContent","length","contents","wrapAll","_nextWrap","$next","$parent","hide","not","addClass","wrap","_destroy","unbind","removeData","children","unwrap","_observe","is","$inner","borderTopWidth","parseInt","borderTopWidthInt","isNaN","iContainerTop","iTopHeight","scrollTop","offset","top","innerTop","iTotalHeight","Math","ceil","height","waiting","outerHeight","_debug","_load","_checkNextHref","nextHref","_setBindings","scrollingBodyHeight","scrollingHeight","windowHeight","bind","last","promise","animate","load","r","status","call","m","args","sMethod","apply","Array","slice","arguments","initialized","destroy"],"mappings":"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","file":"content.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(2);\n\n/***/ },\n\n/***/ 2:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _jquery = __webpack_require__(4);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\t__webpack_require__(89);\n\t\n\t__webpack_require__(88);\n\t\n\tvar form_submit = function form_submit(event, data) {\n\t    var $form = (0, _jquery2['default'])(this);\n\t    var $divToUpdate = (0, _jquery2['default'])($form.data(\"update\"));\n\t    $divToUpdate = setData($form, data, $divToUpdate);\n\t\n\t    var $subforms = $divToUpdate.find(\"form[data-ajaxform=\\\"true\\\"]\");\n\t    _jquery2['default'].each($subforms, function (i, value) {\n\t        var $subform = (0, _jquery2['default'])(value);\n\t        if (!$subform.data(\"plugin\")) {\n\t            $subform.data(\"plugin\", \"true\");\n\t            $subform.IdeiaAjaxForm();\n\t            $subform.on(\"ajaxform.success\", form_submit);\n\t        }\n\t    });\n\t    var $dataList = $divToUpdate.find(\"div[data-xhr]\");\n\t    $dataList.renderList();\n\t    refreshAsyncLike();\n\t};\n\t\n\tvar functionOpenModalToDelete = function functionOpenModalToDelete(e) {\n\t    e.preventDefault();\n\t\n\t    var $btn = (0, _jquery2['default'])(e.currentTarget),\n\t        $modal = (0, _jquery2['default'])($btn.data(\"modal\"));\n\t\n\t    $modal.find(\"form\").attr(\"action\", $btn.data(\"url\"));\n\t    $modal.find(\"#item-id\").val($btn.data(\"item\"));\n\t    $modal.find(\"#item-type\").val($btn.data(\"type\"));\n\t    $modal.find(\"#title-item-to-remove\").html($btn.data(\"title\"));\n\t    $modal.find(\".loading-container\").html(\"\");\n\t    $modal.find(\".alert-container\").html(\"\");\n\t    $modal.modal(\"show\");\n\t};\n\t\n\tvar functionAjaxSuccessDeleteItem = function functionAjaxSuccessDeleteItem(e, data) {\n\t    var $this = (0, _jquery2['default'])(this),\n\t        $modal = (0, _jquery2['default'])($this.closest(\".modal.fade\")),\n\t        itemId = $modal.find(\"#item-id\").val(),\n\t        itemType = $modal.find(\"#item-type\").val();\n\t\n\t    $modal.modal(\"hide\");\n\t    $modal.find(\"form\").attr(\"action\", \"\");\n\t    $modal.find(\"#item-id\").val(\"\");\n\t    $modal.find(\"#item-type\").val(\"\");\n\t    $modal.find(\"#title-item-to-remove\").html(\"\");\n\t    $modal.find(\".loading-container\").html(\"\");\n\t    $modal.find(\".alert-container\").html(\"\");\n\t\n\t    (0, _jquery2['default'])(\"#\" + itemType + \"-\" + itemId).fadeOut(\"slow\", function () {\n\t        (0, _jquery2['default'])('#list-' + itemType + '-' + itemId).remove();\n\t        (0, _jquery2['default'])(this).remove();\n\t    });\n\t};\n\t\n\tfunction setData($form, data, $divToUpdate) {\n\t\n\t    var action = $form.data(\"toggle\");\n\t    var $form_to_hide = $form.parent(\".dropdown-content\");\n\t\n\t    if (action == \"append\" || action == \"prepend\") {\n\t\n\t        if (action == \"append\") {\n\t            $divToUpdate.append(data.template);\n\t        } else {\n\t            $divToUpdate.prepend(data.template);\n\t        }\n\t\n\t        if ($form_to_hide) {\n\t            $form_to_hide.removeClass(\"open\");\n\t        }\n\t        $form[0].reset();\n\t    } else if (action == \"replace\") {\n\t        var $element = (0, _jquery2['default'])(data.template);\n\t        $divToUpdate.replaceWith($element);\n\t        var $newForm = $element.find(\"form[data-ajaxform=\\\"true\\\"]\");\n\t        $divToUpdate = $element;\n\t    }\n\t    $form.find('[data-toggle=\"editor\"]').summernote('reset');\n\t    $divToUpdate.refreshEditors();\n\t    var $preInComment = (0, _jquery2['default'])('.comment-text').find('code');\n\t    _jquery2['default'].each($preInComment, function (index, element) {\n\t        Prism.highlightElement(element);\n\t    });\n\t\n\t    return $divToUpdate;\n\t}\n\t\n\tvar commentDropDown = function commentDropDown(event) {\n\t    event.stopPropagation();\n\t};\n\t\n\tvar xhr_contents = (0, _jquery2['default'])(\"div[data-xhr]\");\n\txhr_contents.renderList();\n\tvar $comment_form = (0, _jquery2['default'])(\"form[data-ajaxform=\\\"true\\\"]\");\n\t\n\t$comment_form.refreshEditors();\n\t$comment_form.on(\"ajaxform.success\", form_submit);\n\t\n\t(0, _jquery2['default'])(\"#confirmation-form\").on(\"ajaxform.success\", functionAjaxSuccessDeleteItem);\n\t(0, _jquery2['default'])(document).on(\"click\", \"[data-delete-item=true]\", functionOpenModalToDelete);\n\t(0, _jquery2['default'])(document).on('click', '.comment-dropdown', commentDropDown);\n\n/***/ },\n\n/***/ 88:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _jquery = __webpack_require__(4);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\t// $.fn.renderList = function () {\n\t\n\t// return $.each(this, function(){\n\t//       var $self = $(this);\n\t//       if(!$self.data(\"rendered\")){\n\t//           $self.data(\"rendered\", \"rendered\");\n\t//           var url = $self.data('xhr-url');\n\t//           var $childs;\n\t//\n\t//           var request = $.ajax({\n\t//               url: url,\n\t//               success: function(data){\n\t//\n\t//                   if(data.template){\n\t//                       var $element = $(data.template);\n\t//\n\t//                       $self.append($element);\n\t//                       var regex = /^data-list-([0-9]+)$/;\n\t//                       if (regex.test($self.attr('id'))) {\n\t//                           var $parentSelf = $self.parent('.comments-children');\n\t//                           if ($self.children().length > 0) {\n\t//                               $parentSelf.removeClass('no-children');\n\t//                           } else {\n\t//                               $parentSelf.addClass('no-children');\n\t//                           }\n\t//                       }\n\t//\n\t//                       $childs = $element.next('div[data-xhr-url]');\n\t//                       $self.jscroll({\n\t//                           loadingHtml: '<div class=\"load-async-preload\"></div>',\n\t//                           contentSelect: \"#\" + $self.attr(\"id\"),\n\t//                           nextSelector: \"a[data-jscroll-next]\",\n\t//                           autoTrigger: false,\n\t//                           callback: function(data){\n\t//                               var $div_jscroll = $(\".jscroll-added\");\n\t//                               var $jscroll_subforms = $div_jscroll.find(\"form[data-ajaxform=\\\"true\\\"]\");\n\t//                               $jscroll_subforms.IdeiaAjaxForm();\n\t//                               $jscroll_subforms.on(\"ajaxform.success\", form_submit);\n\t//                               $jscroll_subforms.refreshEditors();\n\t//                               $div_jscroll.removeClass(\"jscroll-added\");\n\t//                           }\n\t//                       });\n\t//\n\t//                       var $subforms = $element.find(\"form[data-ajaxform=\\\"true\\\"]\");\n\t//                       $subforms.on(\"ajaxform.success\", form_submit);\n\t//                       $subforms.IdeiaAjaxForm();\n\t//                       $subforms.refreshEditors();\n\t//\n\t//                       var async_like = $self.find('[data-async-like]');\n\t//                       async_like.IdeiaAsyncLike();\n\t//                       async_like.removeData(\"async-like\");\n\t//                   }\n\t//\n\t//               },\n\t//               complete: function(){\n\t//                   if($childs && $childs.length){\n\t//                       $childs.renderList();\n\t//                   }\n\t//\n\t//                   var $preInComment = $('.comment-text').find('code');\n\t//                   $.each($preInComment, function (index, element) {\n\t//                     Prism.highlightElement(element);\n\t//                   });\n\t//               }\n\t//           });\n\t//\n\t//           refreshAsyncLike();\n\t//       }\n\t//\n\t//   });\n\tvar pluginName = \"renderList\",\n\t    defaults = {\n\t  propertyName: \"value\"\n\t};\n\t\n\t// The actual plugin constructor\n\tfunction Plugin(element, options) {\n\t  this.element = element;\n\t  this.settings = _jquery2[\"default\"].extend({}, defaults, options);\n\t  this._defaults = defaults;\n\t  this._name = pluginName;\n\t  this.init();\n\t}\n\t\n\t// Avoid Plugin.prototype conflicts\n\t_jquery2[\"default\"].extend(Plugin.prototype, {\n\t  init: function init() {\n\t\n\t    // Place initialization logic here\n\t    // You already have access to the DOM element and\n\t    // the options via the instance, e.g. this.element\n\t    // and this.settings\n\t    // you can add more functions like the one below and\n\t    // call them like the example below\n\t    console.log((0, _jquery2[\"default\"])(this.element).data('xhrUrl'));\n\t    this.attachList((0, _jquery2[\"default\"])(this.element).data('xhrUrl'));\n\t  },\n\t  attachList: function attachList(url) {\n\t    _jquery2[\"default\"].get(url).done(function (data) {\n\t      if (data.template) {\n\t        console.log(data.template);\n\t      }\n\t    }).fail(function (data) {}).always(function (data) {});\n\t  }\n\t});\n\t\n\t_jquery2[\"default\"].fn[pluginName] = function (options) {\n\t  return this.each(function () {\n\t    if (!_jquery2[\"default\"].data(this, \"plugin_\" + pluginName)) {\n\t      _jquery2[\"default\"].data(this, \"plugin_\" + pluginName, new Plugin(this, options));\n\t    }\n\t  });\n\t};\n\t// };\n\n/***/ },\n\n/***/ 89:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {/*!\n\t * jScroll - jQuery Plugin for Infinite Scrolling / Auto-Paging\n\t * http://jscroll.com/\n\t *\n\t * Copyright 2011-2013, Philip Klauzinski\n\t * http://klauzinski.com/\n\t * Dual licensed under the MIT and GPL Version 2 licenses.\n\t * http://jscroll.com/#license\n\t * http://www.opensource.org/licenses/mit-license.php\n\t * http://www.gnu.org/licenses/gpl-2.0.html\n\t *\n\t * @author Philip Klauzinski\n\t * @version 2.3.5\n\t * @requires jQuery v1.4.3+\n\t * @preserve\n\t */\n\t(function($) {\n\t\n\t    'use strict';\n\t\n\t    // Define the jscroll namespace and default settings\n\t    $.jscroll = {\n\t        defaults: {\n\t            debug: false,\n\t            autoTrigger: true,\n\t            autoTriggerUntil: false,\n\t            loadingHtml: '<small>Loading...</small>',\n\t            loadingFunction: false,\n\t            padding: 0,\n\t            nextSelector: 'a:last',\n\t            contentSelector: '',\n\t            pagingSelector: '',\n\t            callback: false\n\t        }\n\t    };\n\t\n\t    // Constructor\n\t    var jScroll = function($e, options) {\n\t\n\t        // Private vars and methods\n\t        var _data = $e.data('jscroll'),\n\t            _userOptions = (typeof options === 'function') ? { callback: options } : options,\n\t            _options = $.extend({}, $.jscroll.defaults, _userOptions, _data || {}),\n\t            _isWindow = ($e.css('overflow-y') === 'visible'),\n\t            _$next = $e.find(_options.nextSelector).first(),\n\t            _$window = $(window),\n\t            _$body = $('body'),\n\t            _$scroll = _isWindow ? _$window : $e,\n\t            _nextHref = $.trim(_$next.attr('href') + ' ' + _options.contentSelector),\n\t\n\t            // Check if a loading image is defined and preload\n\t            _preloadImage = function() {\n\t                var src = $(_options.loadingHtml).filter('img').attr('src');\n\t                if (src) {\n\t                    var image = new Image();\n\t                    image.src = src;\n\t                }\n\t            },\n\t\n\t            // Wrap inner content, if it isn't already\n\t            _wrapInnerContent = function() {\n\t                if (!$e.find('.jscroll-inner').length) {\n\t                    $e.contents().wrapAll('<div class=\"jscroll-inner\" />');\n\t                }\n\t            },\n\t\n\t            // Find the next link's parent, or add one, and hide it\n\t            _nextWrap = function($next) {\n\t                var $parent;\n\t                if (_options.pagingSelector) {\n\t                    $next.closest(_options.pagingSelector).hide();\n\t                } else {\n\t                    $parent = $next.parent().not('.jscroll-inner,.jscroll-added').addClass('jscroll-next-parent').hide();\n\t                    if (!$parent.length) {\n\t                        $next.wrap('<div class=\"jscroll-next-parent\" />').parent().hide();\n\t                    }\n\t                }\n\t            },\n\t\n\t            // Remove the jscroll behavior and data from an element\n\t            _destroy = function() {\n\t                return _$scroll.unbind('.jscroll')\n\t                    .removeData('jscroll')\n\t                    .find('.jscroll-inner').children().unwrap()\n\t                    .filter('.jscroll-added').children().unwrap();\n\t            },\n\t\n\t            // Observe the scroll event for when to trigger the next load\n\t            _observe = function() {\n\t                if ($e.is(':visible')) {\n\t                    _wrapInnerContent();\n\t                    var $inner = $e.find('div.jscroll-inner').first(),\n\t                        data = $e.data('jscroll'),\n\t                        borderTopWidth = parseInt($e.css('borderTopWidth'), 10),\n\t                        borderTopWidthInt = isNaN(borderTopWidth) ? 0 : borderTopWidth,\n\t                        iContainerTop = parseInt($e.css('paddingTop'), 10) + borderTopWidthInt,\n\t                        iTopHeight = _isWindow ? _$scroll.scrollTop() : $e.offset().top,\n\t                        innerTop = $inner.length ? $inner.offset().top : 0,\n\t                        iTotalHeight = Math.ceil(iTopHeight - innerTop + _$scroll.height() + iContainerTop);\n\t\n\t                    if (!data.waiting && iTotalHeight + _options.padding >= $inner.outerHeight()) {\n\t                        //data.nextHref = $.trim(data.nextHref + ' ' + _options.contentSelector);\n\t                        _debug('info', 'jScroll:', $inner.outerHeight() - iTotalHeight, 'from bottom. Loading next request...');\n\t                        return _load();\n\t                    }\n\t                }\n\t            },\n\t\n\t            // Check if the href for the next set of content has been set\n\t            _checkNextHref = function(data) {\n\t                data = data || $e.data('jscroll');\n\t                if (!data || !data.nextHref) {\n\t                    _debug('warn', 'jScroll: nextSelector not found - destroying');\n\t                    _destroy();\n\t                    return false;\n\t                } else {\n\t                    _setBindings();\n\t                    return true;\n\t                }\n\t            },\n\t\n\t            _setBindings = function() {\n\t                var $next = $e.find(_options.nextSelector).first();\n\t                if (!$next.length) {\n\t                    return;\n\t                }\n\t                if (_options.autoTrigger && (_options.autoTriggerUntil === false || _options.autoTriggerUntil > 0)) {\n\t                    _nextWrap($next);\n\t                     var scrollingBodyHeight = _$body.height() - $e.offset().top,\n\t                    \tscrollingHeight = ($e.height() < scrollingBodyHeight) ? $e.height() : scrollingBodyHeight,\n\t                    \twindowHeight = ($e.offset().top - _$window.scrollTop() > 0) ? _$window.height() - ($e.offset().top - $(window).scrollTop()) : _$window.height();\n\t                    if (scrollingHeight <= windowHeight) {\n\t                        _observe();\n\t                    }\n\t                    _$scroll.unbind('.jscroll').bind('scroll.jscroll', function() {\n\t                        return _observe();\n\t                    });\n\t                    if (_options.autoTriggerUntil > 0) {\n\t                        _options.autoTriggerUntil--;\n\t                    }\n\t                } else {\n\t                    _$scroll.unbind('.jscroll');\n\t                    $next.bind('click.jscroll', function() {\n\t                        _nextWrap($next);\n\t                        _load();\n\t                        return false;\n\t                    });\n\t                }\n\t            },\n\t\n\t            // Load the next set of content, if available\n\t            _load = function() {\n\t                var $inner = $e.find('div.jscroll-inner').first(),\n\t                    data = $e.data('jscroll');\n\t\n\t                data.waiting = true;\n\t                $inner.append('<div class=\"jscroll-added\" />')\n\t                    .children('.jscroll-added').last()\n\t                    .html('<div class=\"jscroll-loading\" id=\"jscroll-loading\">' + _options.loadingHtml + '</div>')\n\t                    .promise()\n\t                    .done(function(){\n\t                        if (_options.loadingFunction) {\n\t                            _options.loadingFunction();\n\t                        }\n\t                    });\n\t\n\t                return $e.animate({scrollTop: $inner.outerHeight()}, 0, function() {\n\t                    $inner.find('div.jscroll-added').last().load(data.nextHref, function(r, status) {\n\t                        if (status === 'error') {\n\t                            return _destroy();\n\t                        }\n\t                        var $next = $(this).find(_options.nextSelector).first();\n\t                        data.waiting = false;\n\t                        data.nextHref = $next.attr('href') ? $.trim($next.attr('href') + ' ' + _options.contentSelector) : false;\n\t                        $('.jscroll-next-parent', $e).remove(); // Remove the previous next link now that we have a new one\n\t                        _checkNextHref();\n\t                        if (_options.callback) {\n\t                            _options.callback.call(this);\n\t                        }\n\t                        _debug('dir', data);\n\t                    });\n\t                });\n\t            },\n\t\n\t            // Safe console debug - http://klauzinski.com/javascript/safe-firebug-console-in-javascript\n\t            _debug = function(m) {\n\t                if (_options.debug && typeof console === 'object' && (typeof m === 'object' || typeof console[m] === 'function')) {\n\t                    if (typeof m === 'object') {\n\t                        var args = [];\n\t                        for (var sMethod in m) {\n\t                            if (typeof console[sMethod] === 'function') {\n\t                                args = (m[sMethod].length) ? m[sMethod] : [m[sMethod]];\n\t                                console[sMethod].apply(console, args);\n\t                            } else {\n\t                                console.log.apply(console, args);\n\t                            }\n\t                        }\n\t                    } else {\n\t                        console[m].apply(console, Array.prototype.slice.call(arguments, 1));\n\t                    }\n\t                }\n\t            };\n\t\n\t        // Initialization\n\t        $e.data('jscroll', $.extend({}, _data, {initialized: true, waiting: false, nextHref: _nextHref}));\n\t        _wrapInnerContent();\n\t        _preloadImage();\n\t        _setBindings();\n\t\n\t        // Expose API methods via the jQuery.jscroll namespace, e.g. $('sel').jscroll.method()\n\t        $.extend($e.jscroll, {\n\t            destroy: _destroy\n\t        });\n\t        return $e;\n\t    };\n\t\n\t    // Define the jscroll plugin method and loop\n\t    $.fn.jscroll = function(m) {\n\t        return this.each(function() {\n\t            var $this = $(this),\n\t                data = $this.data('jscroll'), jscroll;\n\t\n\t            // Instantiate jScroll on this element if it hasn't been already\n\t            if (data && data.initialized) {\n\t                return;\n\t            }\n\t            jscroll = new jScroll($this, m);\n\t        });\n\t    };\n\t\n\t})(jQuery);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** content.js\n **/","import './components/comments'\n\n\n\n/** WEBPACK FOOTER **\n ** ./content.js\n **/","import $ from 'jquery'\nimport 'jscroll'\nimport './jquery.render-list'\n\nvar form_submit = function(event, data){\n    var $form = $(this);\n    var $divToUpdate = $($form.data(\"update\"));\n    $divToUpdate = setData($form, data, $divToUpdate);\n\n    var $subforms = $divToUpdate.find(\"form[data-ajaxform=\\\"true\\\"]\");\n    $.each($subforms, function(i, value){\n        var $subform = $(value);\n        if(!$subform.data(\"plugin\")){\n            $subform.data(\"plugin\", \"true\");\n            $subform.IdeiaAjaxForm();\n            $subform.on(\"ajaxform.success\", form_submit);\n        }\n\n\n    });\n    var $dataList = $divToUpdate.find(\"div[data-xhr]\");\n    $dataList.renderList();\n    refreshAsyncLike();\n\n};\n\nvar functionOpenModalToDelete = function(e) {\n    e.preventDefault();\n\n    var $btn = $(e.currentTarget),\n            $modal = $($btn.data(\"modal\"));\n\n    $modal.find(\"form\").attr(\"action\", $btn.data(\"url\"));\n    $modal.find(\"#item-id\").val($btn.data(\"item\"));\n    $modal.find(\"#item-type\").val($btn.data(\"type\"));\n    $modal.find(\"#title-item-to-remove\").html($btn.data(\"title\"));\n    $modal.find(\".loading-container\").html(\"\");\n    $modal.find(\".alert-container\").html(\"\");\n    $modal.modal(\"show\");\n};\n\nvar functionAjaxSuccessDeleteItem = function(e, data) {\n    var $this = $(this),\n            $modal = $($this.closest(\".modal.fade\")),\n            itemId = $modal.find(\"#item-id\").val(),\n            itemType = $modal.find(\"#item-type\").val();\n\n    $modal.modal(\"hide\");\n    $modal.find(\"form\").attr(\"action\", \"\");\n    $modal.find(\"#item-id\").val(\"\");\n    $modal.find(\"#item-type\").val(\"\");\n    $modal.find(\"#title-item-to-remove\").html(\"\");\n    $modal.find(\".loading-container\").html(\"\");\n    $modal.find(\".alert-container\").html(\"\");\n\n    $(\"#\" + itemType + \"-\" + itemId).fadeOut(\"slow\", function(){\n      $('#list-'+itemType+'-'+itemId).remove();\n      $(this).remove();\n    });\n};\n\nfunction setData($form, data, $divToUpdate){\n\n    var action = $form.data(\"toggle\");\n    var $form_to_hide = $form.parent(\".dropdown-content\");\n\n    if(action == \"append\" || action == \"prepend\") {\n\n        if (action == \"append\") {\n            $divToUpdate.append(data.template);\n        } else {\n            $divToUpdate.prepend(data.template);\n        }\n\n        if ($form_to_hide) {\n            $form_to_hide.removeClass(\"open\");\n        }\n        $form[0].reset();\n\n    }else if (action==\"replace\"){\n        var $element = $(data.template);\n        $divToUpdate.replaceWith($element);\n        var $newForm = $element.find(\"form[data-ajaxform=\\\"true\\\"]\");\n        $divToUpdate = $element;\n    }\n    $form.find('[data-toggle=\"editor\"]').summernote('reset');\n    $divToUpdate.refreshEditors();\n    var $preInComment = $('.comment-text').find('code');\n    $.each($preInComment, function (index, element) {\n      Prism.highlightElement(element);\n    });\n\n    return $divToUpdate\n}\n\nvar commentDropDown = function(event) {\n  event.stopPropagation();\n};\n\nvar xhr_contents = $(\"div[data-xhr]\");\nxhr_contents.renderList();\nvar $comment_form = $(\"form[data-ajaxform=\\\"true\\\"]\");\n\n$comment_form.refreshEditors();\n$comment_form.on(\"ajaxform.success\", form_submit);\n\n$(\"#confirmation-form\").on(\"ajaxform.success\", functionAjaxSuccessDeleteItem);\n$(document).on(\"click\", \"[data-delete-item=true]\", functionOpenModalToDelete);\n$(document).on('click', '.comment-dropdown', commentDropDown);\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/comments/index.js\n **/","import $ from 'jquery'\n\n// $.fn.renderList = function () {\n\n  // return $.each(this, function(){\n  //       var $self = $(this);\n  //       if(!$self.data(\"rendered\")){\n  //           $self.data(\"rendered\", \"rendered\");\n  //           var url = $self.data('xhr-url');\n  //           var $childs;\n  //\n  //           var request = $.ajax({\n  //               url: url,\n  //               success: function(data){\n  //\n  //                   if(data.template){\n  //                       var $element = $(data.template);\n  //\n  //                       $self.append($element);\n  //                       var regex = /^data-list-([0-9]+)$/;\n  //                       if (regex.test($self.attr('id'))) {\n  //                           var $parentSelf = $self.parent('.comments-children');\n  //                           if ($self.children().length > 0) {\n  //                               $parentSelf.removeClass('no-children');\n  //                           } else {\n  //                               $parentSelf.addClass('no-children');\n  //                           }\n  //                       }\n  //\n  //                       $childs = $element.next('div[data-xhr-url]');\n  //                       $self.jscroll({\n  //                           loadingHtml: '<div class=\"load-async-preload\"></div>',\n  //                           contentSelect: \"#\" + $self.attr(\"id\"),\n  //                           nextSelector: \"a[data-jscroll-next]\",\n  //                           autoTrigger: false,\n  //                           callback: function(data){\n  //                               var $div_jscroll = $(\".jscroll-added\");\n  //                               var $jscroll_subforms = $div_jscroll.find(\"form[data-ajaxform=\\\"true\\\"]\");\n  //                               $jscroll_subforms.IdeiaAjaxForm();\n  //                               $jscroll_subforms.on(\"ajaxform.success\", form_submit);\n  //                               $jscroll_subforms.refreshEditors();\n  //                               $div_jscroll.removeClass(\"jscroll-added\");\n  //                           }\n  //                       });\n  //\n  //                       var $subforms = $element.find(\"form[data-ajaxform=\\\"true\\\"]\");\n  //                       $subforms.on(\"ajaxform.success\", form_submit);\n  //                       $subforms.IdeiaAjaxForm();\n  //                       $subforms.refreshEditors();\n  //\n  //                       var async_like = $self.find('[data-async-like]');\n  //                       async_like.IdeiaAsyncLike();\n  //                       async_like.removeData(\"async-like\");\n  //                   }\n  //\n  //               },\n  //               complete: function(){\n  //                   if($childs && $childs.length){\n  //                       $childs.renderList();\n  //                   }\n  //\n  //                   var $preInComment = $('.comment-text').find('code');\n  //                   $.each($preInComment, function (index, element) {\n  //                     Prism.highlightElement(element);\n  //                   });\n  //               }\n  //           });\n  //\n  //           refreshAsyncLike();\n  //       }\n  //\n  //   });\n  var pluginName = \"renderList\",\n\t\t\tdefaults = {\n\t\t\t\tpropertyName: \"value\"\n\t\t\t};\n\n\t\t// The actual plugin constructor\n\t\tfunction Plugin ( element, options ) {\n\t\t\tthis.element = element;\n\t\t\tthis.settings = $.extend( {}, defaults, options );\n\t\t\tthis._defaults = defaults;\n\t\t\tthis._name = pluginName;\n\t\t\tthis.init();\n\t\t}\n\n    // Avoid Plugin.prototype conflicts\n\t\t$.extend( Plugin.prototype, {\n\t\t\tinit: function() {\n\n\t\t\t\t// Place initialization logic here\n\t\t\t\t// You already have access to the DOM element and\n\t\t\t\t// the options via the instance, e.g. this.element\n\t\t\t\t// and this.settings\n\t\t\t\t// you can add more functions like the one below and\n\t\t\t\t// call them like the example below\n        console.log( $(this.element).data('xhrUrl') );\n        this.attachList( $(this.element).data('xhrUrl') );\n\t\t\t},\n      attachList: function (url) {\n        $.get(url)\n        .done(function (data) {\n          if( data.template ) {\n            console.log( data.template );\n          }\n        })\n        .fail( function (data) {\n\n        })\n        .always( function (data) {\n\n        });\n      }\n\t\t} );\n\n    $.fn[ pluginName ] = function( options ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t$.data( this, \"plugin_\" +\n\t\t\t\t\t\tpluginName, new Plugin( this, options ) );\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n// };\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/comments/jquery.render-list.js\n **/","/*!\n * jScroll - jQuery Plugin for Infinite Scrolling / Auto-Paging\n * http://jscroll.com/\n *\n * Copyright 2011-2013, Philip Klauzinski\n * http://klauzinski.com/\n * Dual licensed under the MIT and GPL Version 2 licenses.\n * http://jscroll.com/#license\n * http://www.opensource.org/licenses/mit-license.php\n * http://www.gnu.org/licenses/gpl-2.0.html\n *\n * @author Philip Klauzinski\n * @version 2.3.5\n * @requires jQuery v1.4.3+\n * @preserve\n */\n(function($) {\n\n    'use strict';\n\n    // Define the jscroll namespace and default settings\n    $.jscroll = {\n        defaults: {\n            debug: false,\n            autoTrigger: true,\n            autoTriggerUntil: false,\n            loadingHtml: '<small>Loading...</small>',\n            loadingFunction: false,\n            padding: 0,\n            nextSelector: 'a:last',\n            contentSelector: '',\n            pagingSelector: '',\n            callback: false\n        }\n    };\n\n    // Constructor\n    var jScroll = function($e, options) {\n\n        // Private vars and methods\n        var _data = $e.data('jscroll'),\n            _userOptions = (typeof options === 'function') ? { callback: options } : options,\n            _options = $.extend({}, $.jscroll.defaults, _userOptions, _data || {}),\n            _isWindow = ($e.css('overflow-y') === 'visible'),\n            _$next = $e.find(_options.nextSelector).first(),\n            _$window = $(window),\n            _$body = $('body'),\n            _$scroll = _isWindow ? _$window : $e,\n            _nextHref = $.trim(_$next.attr('href') + ' ' + _options.contentSelector),\n\n            // Check if a loading image is defined and preload\n            _preloadImage = function() {\n                var src = $(_options.loadingHtml).filter('img').attr('src');\n                if (src) {\n                    var image = new Image();\n                    image.src = src;\n                }\n            },\n\n            // Wrap inner content, if it isn't already\n            _wrapInnerContent = function() {\n                if (!$e.find('.jscroll-inner').length) {\n                    $e.contents().wrapAll('<div class=\"jscroll-inner\" />');\n                }\n            },\n\n            // Find the next link's parent, or add one, and hide it\n            _nextWrap = function($next) {\n                var $parent;\n                if (_options.pagingSelector) {\n                    $next.closest(_options.pagingSelector).hide();\n                } else {\n                    $parent = $next.parent().not('.jscroll-inner,.jscroll-added').addClass('jscroll-next-parent').hide();\n                    if (!$parent.length) {\n                        $next.wrap('<div class=\"jscroll-next-parent\" />').parent().hide();\n                    }\n                }\n            },\n\n            // Remove the jscroll behavior and data from an element\n            _destroy = function() {\n                return _$scroll.unbind('.jscroll')\n                    .removeData('jscroll')\n                    .find('.jscroll-inner').children().unwrap()\n                    .filter('.jscroll-added').children().unwrap();\n            },\n\n            // Observe the scroll event for when to trigger the next load\n            _observe = function() {\n                if ($e.is(':visible')) {\n                    _wrapInnerContent();\n                    var $inner = $e.find('div.jscroll-inner').first(),\n                        data = $e.data('jscroll'),\n                        borderTopWidth = parseInt($e.css('borderTopWidth'), 10),\n                        borderTopWidthInt = isNaN(borderTopWidth) ? 0 : borderTopWidth,\n                        iContainerTop = parseInt($e.css('paddingTop'), 10) + borderTopWidthInt,\n                        iTopHeight = _isWindow ? _$scroll.scrollTop() : $e.offset().top,\n                        innerTop = $inner.length ? $inner.offset().top : 0,\n                        iTotalHeight = Math.ceil(iTopHeight - innerTop + _$scroll.height() + iContainerTop);\n\n                    if (!data.waiting && iTotalHeight + _options.padding >= $inner.outerHeight()) {\n                        //data.nextHref = $.trim(data.nextHref + ' ' + _options.contentSelector);\n                        _debug('info', 'jScroll:', $inner.outerHeight() - iTotalHeight, 'from bottom. Loading next request...');\n                        return _load();\n                    }\n                }\n            },\n\n            // Check if the href for the next set of content has been set\n            _checkNextHref = function(data) {\n                data = data || $e.data('jscroll');\n                if (!data || !data.nextHref) {\n                    _debug('warn', 'jScroll: nextSelector not found - destroying');\n                    _destroy();\n                    return false;\n                } else {\n                    _setBindings();\n                    return true;\n                }\n            },\n\n            _setBindings = function() {\n                var $next = $e.find(_options.nextSelector).first();\n                if (!$next.length) {\n                    return;\n                }\n                if (_options.autoTrigger && (_options.autoTriggerUntil === false || _options.autoTriggerUntil > 0)) {\n                    _nextWrap($next);\n                     var scrollingBodyHeight = _$body.height() - $e.offset().top,\n                    \tscrollingHeight = ($e.height() < scrollingBodyHeight) ? $e.height() : scrollingBodyHeight,\n                    \twindowHeight = ($e.offset().top - _$window.scrollTop() > 0) ? _$window.height() - ($e.offset().top - $(window).scrollTop()) : _$window.height();\n                    if (scrollingHeight <= windowHeight) {\n                        _observe();\n                    }\n                    _$scroll.unbind('.jscroll').bind('scroll.jscroll', function() {\n                        return _observe();\n                    });\n                    if (_options.autoTriggerUntil > 0) {\n                        _options.autoTriggerUntil--;\n                    }\n                } else {\n                    _$scroll.unbind('.jscroll');\n                    $next.bind('click.jscroll', function() {\n                        _nextWrap($next);\n                        _load();\n                        return false;\n                    });\n                }\n            },\n\n            // Load the next set of content, if available\n            _load = function() {\n                var $inner = $e.find('div.jscroll-inner').first(),\n                    data = $e.data('jscroll');\n\n                data.waiting = true;\n                $inner.append('<div class=\"jscroll-added\" />')\n                    .children('.jscroll-added').last()\n                    .html('<div class=\"jscroll-loading\" id=\"jscroll-loading\">' + _options.loadingHtml + '</div>')\n                    .promise()\n                    .done(function(){\n                        if (_options.loadingFunction) {\n                            _options.loadingFunction();\n                        }\n                    });\n\n                return $e.animate({scrollTop: $inner.outerHeight()}, 0, function() {\n                    $inner.find('div.jscroll-added').last().load(data.nextHref, function(r, status) {\n                        if (status === 'error') {\n                            return _destroy();\n                        }\n                        var $next = $(this).find(_options.nextSelector).first();\n                        data.waiting = false;\n                        data.nextHref = $next.attr('href') ? $.trim($next.attr('href') + ' ' + _options.contentSelector) : false;\n                        $('.jscroll-next-parent', $e).remove(); // Remove the previous next link now that we have a new one\n                        _checkNextHref();\n                        if (_options.callback) {\n                            _options.callback.call(this);\n                        }\n                        _debug('dir', data);\n                    });\n                });\n            },\n\n            // Safe console debug - http://klauzinski.com/javascript/safe-firebug-console-in-javascript\n            _debug = function(m) {\n                if (_options.debug && typeof console === 'object' && (typeof m === 'object' || typeof console[m] === 'function')) {\n                    if (typeof m === 'object') {\n                        var args = [];\n                        for (var sMethod in m) {\n                            if (typeof console[sMethod] === 'function') {\n                                args = (m[sMethod].length) ? m[sMethod] : [m[sMethod]];\n                                console[sMethod].apply(console, args);\n                            } else {\n                                console.log.apply(console, args);\n                            }\n                        }\n                    } else {\n                        console[m].apply(console, Array.prototype.slice.call(arguments, 1));\n                    }\n                }\n            };\n\n        // Initialization\n        $e.data('jscroll', $.extend({}, _data, {initialized: true, waiting: false, nextHref: _nextHref}));\n        _wrapInnerContent();\n        _preloadImage();\n        _setBindings();\n\n        // Expose API methods via the jQuery.jscroll namespace, e.g. $('sel').jscroll.method()\n        $.extend($e.jscroll, {\n            destroy: _destroy\n        });\n        return $e;\n    };\n\n    // Define the jscroll plugin method and loop\n    $.fn.jscroll = function(m) {\n        return this.each(function() {\n            var $this = $(this),\n                data = $this.data('jscroll'), jscroll;\n\n            // Instantiate jScroll on this element if it hasn't been already\n            if (data && data.initialized) {\n                return;\n            }\n            jscroll = new jScroll($this, m);\n        });\n    };\n\n})(jQuery);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /projects/rede_gsti/resources/~/jscroll/jquery.jscroll.js\n ** module id = 89\n ** module chunks = 0\n **/"],"sourceRoot":""}